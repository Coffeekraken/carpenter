@charset "UTF-8";
/** Vendors All external librarie needed in the project. */
/** Vendors All external librarie needed in the project. */
/*

    Name:       material
    Author:     Michael Kaminsky (http://github.com/mkaminsky11)

    Original material color scheme by Mattia Astorino (https://github.com/equinusocio/material-theme)

*/
.cm-s-material { background-color: #263238; color: #e9eded; }

.cm-s-material .CodeMirror-gutters { background: #263238; color: #537f7e; border: none; }

.cm-s-material .CodeMirror-guttermarker, .cm-s-material .CodeMirror-guttermarker-subtle, .cm-s-material .CodeMirror-linenumber { color: #537f7e; }

.cm-s-material .CodeMirror-cursor { border-left: 1px solid #f8f8f0; }

.cm-s-material div.CodeMirror-selected { background: rgba(255, 255, 255, 0.15); }

.cm-s-material.CodeMirror-focused div.CodeMirror-selected { background: rgba(255, 255, 255, 0.1); }

.cm-s-material .CodeMirror-line::selection, .cm-s-material .CodeMirror-line > span::selection, .cm-s-material .CodeMirror-line > span > span::selection { background: rgba(255, 255, 255, 0.1); }

.cm-s-material .CodeMirror-line::-moz-selection, .cm-s-material .CodeMirror-line > span::-moz-selection, .cm-s-material .CodeMirror-line > span > span::-moz-selection { background: rgba(255, 255, 255, 0.1); }

.cm-s-material .CodeMirror-activeline-background { background: transparent; }

.cm-s-material .cm-keyword { color: #c792ea; }

.cm-s-material .cm-operator { color: #e9eded; }

.cm-s-material .cm-variable-2 { color: #80CBC4; }

.cm-s-material .cm-variable-3 { color: #82B1FF; }

.cm-s-material .cm-builtin { color: #DECB6B; }

.cm-s-material .cm-atom { color: #F77669; }

.cm-s-material .cm-number { color: #F77669; }

.cm-s-material .cm-def { color: #e9eded; }

.cm-s-material .cm-string { color: #C3E88D; }

.cm-s-material .cm-string-2 { color: #80CBC4; }

.cm-s-material .cm-comment { color: #546E7A; }

.cm-s-material .cm-variable { color: #82B1FF; }

.cm-s-material .cm-tag { color: #80CBC4; }

.cm-s-material .cm-meta { color: #80CBC4; }

.cm-s-material .cm-attribute { color: #FFCB6B; }

.cm-s-material .cm-property { color: #80CBAE; }

.cm-s-material .cm-qualifier { color: #DECB6B; }

.cm-s-material .cm-variable-3 { color: #DECB6B; }

.cm-s-material .cm-tag { color: #ff5370; }

.cm-s-material .cm-error { color: white; background-color: #EC5F67; }

.cm-s-material .CodeMirror-matchingbracket { text-decoration: underline; color: white !important; }

/** Parse and return the Map respresentation of a border property The $border argument will be parsed with the [s-parse-properties](../core/functions/_s-parse-properties.scss) function. @param 		{List} 			$border 			The border property to parse @return 		{Map} 								The Map represenration of the border @example s-border(1px solid white); // return // ( // 	width : 1px, // 	color : white, // 	style : solid // ) @author 			Olivier Bossel <olivier.bossel@gmail.com> */
/** Return the Map representation of a columns properties @param  		{Interger} 			[$count=null] 			The number of columns @param 		{Number} 			[$gap=null] 			The gap width between each columns @param 		{String} 			[$fill=null] 			The fill property (balance,auto,initial,inherit) @param 		{Number} 			[$width=null] 			The width of the columns @param 		{Integer|String} 	[$span=null] 			The column-span property (1,all,initial,inherit) @param 		{List} 				[$rule=null] 			The column-rule property @param 		{String} 			[$rule-style=null]  	The column-rule-style property @param 		{Color} 			[$rule-color=null] 		The column-rule-color property @param 		{Number} 			[$rule-width=null] 		The column-rule-width property @return 		{Map} 										The map representation or the columns properties @example s-columns(2, 20px); // return // ( // 	column-count : 2, // 	column-gap : 20px // ) @author 			Olivier Bossel <olivier.bossel@gmail.com> */
/** Parse and return the Map respresentation of a margin property The $margin argument will be parsed with the [s-parse-properties](../core/functions/_s-parse-properties.scss) function. @param 			{List|Number} 			$margin 			The margin property to parse @return 			{Map} 										The map representation @example s-margin(10px); // => ( top:10px, right:10px, bottom:10px, left:10px ) s-margin(10px 20px); // => ( top:10px, right:20px, bottom:10px, left:20px ) s-margin(5px 10px 15px 20px); // => ( top:5px, right:10px, bottom:15px, left:20px ) @author 			Olivier Bossel <olivier.bossel@gmail.com> */
/** Return the representation of a position styling like position:absolute; top:0; left:100%; etc... This function gives you some shortcuts to align your element top, bottom, middle, center, etc... @param 		{String} 			[$position=absolute] 			The position css property @param 		{String} 			[$vertical-align=top] 			The vertical alignement wanted (top,middle,bottom) @param 		{String} 			[$align=left] 					The horizontal alignement wanted (left,center,right) @param 		{Number} 			[$top=null] 					The top property wanted @param 		{Number} 			[$right=null] 					The right property wanted @param 		{Number} 			[$bottom=null] 					The bottom property wanted @param 		{Number} 			[$left=null] 					The left property wanted @return 		{Map} 												The map representation of the position wanted @example s-position(absolute, top, right); s-position(absolute, middle, center); s-position(relative, bottom, right); s-position(absolute, bottom, center); // etc... @author 			Olivier Bossel <olivier.bossel@gmail.com> */
/** Return the Map properties representation for the rhythme width The rhythme width is the width of an element that target a certain number of letters by line @param 			{Integer} 			[$letters-count=settings.typography.line-letters-count] 		The number of letters to target by line @return 			{Map} 																		The Map properties representation @example s-rhythme-width(50); // return // ( // 	display : block, // 	max-width : 50ex // ) @author 			Olivier Bossel <olivier.bossel@gmail.com> */
/** Return the Map properties representation of a translate x,y and z @param 			{Number} 			[$x=0] 			The x translate value @param 			{Number} 			[$y=0] 			The y translate value @param 			{Number} 			[$z=0] 			The z translate value @return 			{Map} 								The translate Map representation @example s-translate(10px,20px); // return // ( // 	transform: translateX(10px) translateY(20px) translateZ(0) // ) @author 			Olivier Bossel <olivier.bossel@gmail.com> */
/** Return the settings.vertical-rhythme.scope-class value @return 			{String} 			The settings.vertical-rhythme.scope-class value @author 			Olivier Bossel <olivier.bossel@gmail.com> */
/** Helper mixin to set a background image @param 			{String} 				[$repeat=null] 				The background-repeat property @param 			{String} 				[$size=null] 				The background-size property @param 			{String} 				[$attachment=null] 			The background-attachment property @param 			{String} 				[$blend-mode=null] 			The background-blend-mode property @param 			{String} 				[$clip=null] 				The background-clip property @param 			{String} 				[$url=null] 				The background-image url property @param 			{Number} 				[$width=null] 				The background-size width property @param 			{Number} 				[$height=null] 				The background-size height property @param 			{Number} 				[$top=null] 				The background-position top property @param 			{Number} 				[$left=null] 				The background-position left property @param 			{String} 				[$suffix2x=@2x] 			The suffix to add the the url if the 2x resolution if wanted @param 			{String} 				[$suffix3x=@3x] 			The suffix to add the the url if the 3x resolution if wanted @param 			{String} 				[$suffix4x=@4x] 			The suffix to add the the url if the 4x resolution if wanted @param 			{List} 					[$resolution=null] 			The resolution wanted like 2x, 3x and 4x @param 			{List} 					[$position=null] 			The background-position property @example .my-cool-element { \@include s-background( $url : 'img/my-cool-image.jpg', $size : cover, resolution : 2x 3x 4x ); } @author 			Olivier Bossel <olivier.bossel@gmail.com> */
/** Center block */
/* # CLEARFIX More infos to come.. https://github.com/stubbornella/oocss/blob/master/oocss/src/components/utils/_clearfix-me.scss clearfix   used project wide to clear floats and create a new formatting context usage      @include clearfix-me(<empty|overflow|facebook|micro|stubborn>) $clearfix-method sets default method */
.clearfix-overflow { overflow: hidden; }

.clearfix-facebook { display: table-cell; vertical-align: top; width: 10000px !important; }

.clearfix-float { float: left; width: 100%; }

.clearfix, .clearfix-micro { zoom: 1; }

.clearfix:before, .clearfix-micro:before, .clearfix:after, .clearfix-micro:after { content: " "; display: table; }

.clearfix:after, .clearfix-micro:after { clear: both; }

@keyframes s-DOMNodeInserted { from { opacity: .99; }
  to { opacity: 1; } }

/** Get a registered color by name or wrap a new color into a s-color call to manipulate it with ease. Supported actions : - hue {Deg} - lighten {Percent} - darken {Percent} - saturate {Percent} - desaturate {Percent} - grayscale {Boolean} - complement {Boolean} - invert {Boolean} - opacity {Percent} - mix {Color} @param 		{String|Color} 		$color 				The color name or the color value to manipulate @param 		{String|List} 			[$modifier=null] 	The color modifier to apply. Can be a registered modifier name or a modifier list @return 		{Color} 									The actual color value @example 	 	scss // default color (settings.colors.default) $myColor : s-color(default); // primary color (settings.colors.primary) $primary : s-color(primary); // manipulate $primary-dark : s-color(primary, -darken 10%); // registered modifier $primary-light : s-color(primary, light); // $name as list $modified primary : s-color((primary, -darken 10%)); @author 			Olivier Bossel <olivier.bossel@gmail.com> */
/** Return the color in a modifier list @param 			{List} 			$modifiers 		The modifiers list @return 			{String} 						The color name @example $my-color : s-color-modifier(outline primary); // => primary @author 		Olivier Bossel <olivier.bossel@gmail.com> */
/** Return the css class selector for the current component setted by the [core/mixins/_s-component.scss] mixin and build with the passed arguments. @param 			{String} 			[$element=null] 		The element name of the class selector | '&' if target the same element like `&s-component-selector("&", ) {}` @param 			{String} 			[$modifier=null] 		The modifier name of the class selector @param 			{String} 			[$state=null] 			The state name of the class selector @return 			{String} 									The generated class selector @example \@incluse s-component('my-component') { // if settings.selector.method === 'BEM' s-component-selector('item') // => '.my-component__item' s-component-selector(null, 'red') // => '.my-component--red' s-component-selector('coco',null,'active') // => '.my-component__coco--active' } // if target the same element with & : \@include s-component('my-component') { s-component-selector(, red, , "color") { &s-component-selector("&", , "active") { // something here... } } } @author 			Olivier Bossel <olivier.bossel@gmail.com> */
/** Return the name of the top level component setted with the [../mixins/_s-component.scss] mixin @param 			{String} 			[$default=null] 		The name to return if no top component name exist @return 			{String} 									The component name @example s-component('hello') // => 'hello' \@include s-component('my-component') { s-component('hello') // => 'my-component' \@include s-component('another-component') { s-component('hello') // => 'my-component' } } @author 			Olivier Bossel <olivier.bossel@gmail.com>; */
/** Convert a passed value to the wanted unit The conversion between some units that depends on a font-size will take the settings.typography.font-size value as reference. Available conversions - from px - to em - to rem - to pt - to % - from em - to rem - to px - to pt - to % - from pt - to em - to rem - to px - to pt - to % - from rem - to em - to px - to pt - to % @param 			{Number} 		$value 			The value to convert @param 			{String} 		$unit 			The unit in which to convert the value @return 			{Number} 						The converted value @example // if the settings.typography.font-size === 16px s-convert(24px, rem) // 1.5rem s-convert(3rem, pt) // 36pt @author 			Olivier Bossel <olivier.bossel@gmail.com> */
/** Transform a dash notation value into a map Dash notation value is : -key1 value1 -key2 value2 @param 			{List} 			$dash 			The dash list notation to transform @return 			{Map} 							The map generated @example $dash : -hello world -coco universe s-dash-to-map($dash); // ( // 	hello : world, // 	coco : universe // ) @author 			Olivier Bossel <olivier.bossel@gmail.com> */
/** Convert the passed value to em @param 			{Number} 		$value 		The value to convert @return 			{Number} 					The em converted value @author 			Olivier Bossel <olivier.bossel@gmail.com> */
/** Convert the passed value to the closest even value @param 			{Number} 		$value 		The value to convert @return 			{Number} 					The closest even converted value @author 			Olivier Bossel <olivier.bossel@gmail.com> */
/** Take a filter as parameter and parse it to return the {Map} corresponding The $filter parameter can be either a registered filter name or a filter formated like `filterName(filterValue)` @param 			{List}<String> 			$filter 			The registered filter name or the filter string to transform into map @return 			{Map} 										The corresponding filter map properties @example // register a filter \@include s-setup(( filters : ( myCoolFilter : box-shadow(#000 0 0 10px) blur(30px), // other filters... ) )); // registered filter s-filter-map(myCoolFilter); // { // 	box-shadow : #000 0 0 10px, // 	blur : 30px // } // custom filter s-filter-map(blur(10px)); // { // 	blur : 10px // } @author 			Olivier Bossel <olivier.bossel@gmail.com> */
/** Return a list with all the filters that are passed as argument This will use the [./_s-filter-map.scss] function to parse the filters @param 	 	{List}<String> 			$filters 			The registered filter(s) name(s) or the filter(s) string(s) to transform into list @return 		{List} 										The converted filters list to use as css property @example // register a filter \@include s-setup(( filters : ( myCoolFilter : box-shadow(#000 0 0 10px) blur(30px), // other filters... ) )); // registered filter .my-cool-elememt { filter : s-filter(myCoolFilter); // filter : box-shadow(#000 0 0 10px) blur(30px); } // custom filter .my-cool-element { filter : s-filter(myCoolFilter invert(100%)); // filter : box-shadow(#000 0 0 10px) blur(30px) invert(100%); } @author 			Olivier Bossel <olivier.bossel@gmail.com> */
/** Return the font-family string or a registered font @param 			{String} 		$name 		The name of the registered font @return 			{String} 					The corresponding font-family property to set in your css @example // register a font \@include s-setup(( fonts : ( myCoolFont : ( font-family : 'Helvetica Neue', font-weight : 'bold', // etc... ), // other fonts... ) )); // apply the font .my-cool-element { font-family : s-font-family(myCoolFont); // font-family : 'Helvetica Neue'; } @author 			Olivier Bossel <olivier.bossel@gmail.com> */
/** Return the font {Map} that correspond to the passed arguments @param 		{String} 			[$family=null] 			The font family wanted (can be a registered font name) @param 		{Color} 			[$color=null] 			The color wanted (can be a registered color name) @param 		{Number} 			[$size=null] 			The font-size wanted @param 		{String} 			[$style=null] 			The font-style wanted @param 		{String} 			[$variant=null] 		The font-variant wanted @param 		{String|Number} 	[$weight=null] 			The font-weight wanted @param 		{String} 			[$decoration=null] 		The text-decoration wanted @param 		{String} 			[$align=null] 			The text-align wanted @param 		{String} 			[$transform=null] 		The text-transform wanted @param 		{String} 			[$stretch=null] 		The font-stretch wanted @param 		{String} 			[$white-space=null] 	The white-space wanted @param 		{Number} 			[$height=null] 			The line-height wanted @param 		{Number} 			[$spacing=null] 		The letter-spacing wanted @param 		{Number} 			[$indent=null] 			The text-indent wanted @param 		{String} 			[$break=null] 			The line-break wanted @param 		{String} 			[$wrap=null] 			The word-wrap wanted @return 		{Map} 										The corresponding font map @example s-font( $family : 'Helvetica Neue', $size : 12px, $wrap : norwap ); // ( font-family : 'Helvetica Neue', font-size : 12px, word-wrap : nowrap // ) @author 			Olivier Bossel <olivier.bossel@gmail.com> */
/** Return the specified or calculated value of the given stack and size depending on the settings.sizes ratios stack @param 		{Map} 			$stack 			The stack from which to interpolate the value @param 		{String} 		$size 			The size wanted (has to exist in the settings.sizes stack) @return 		{Number} 						The $stack.$size value or the interpolated one depending on the settings.sizes ratios @example // settings.sizes \@include s-setup(( sizes : ( small : 0.5, default : 1, // default is ALWAYS 1 big : 1.5 ) )); $myStack : ( default : 3rem, big : 6rem ) s-interpolate($myStack, big) // 6rem cause specified in the $myStack value s-interpolate($myStack, small) // 1.5rem => calculated like : 3rem * 0.5 = 1.5rem @author 			Olivier Bossel <olivier.bossel@gmail.com> */
/** Check if the passed value is of a certain type Here's the available types that you can check - mixed => mean anything - null - url - px - pt - rem - em - percent | % - vw - vh - ex - ch - cm - mm - in - pc - s | second - boolean | bool - function - number - int | integer - string - color - list - map - deg | degree - list-{type} => check if is a list of the specified type - map-{type} => check if is a map of the specified type @param 			{Mixed} 			$value 			The value to check @param 			{String} 			$type 			The type to check @return 			{Boolean} 							true if match the type, false if not @example s-is(hello, string) // => true s-is('hello', string) // => true s-is(#fff, color) // => true s-is(hello #fff, list-color) // => false s-is(#fff #ddd, list-color) // => true // etc... @author 			Olivier Bossel <olivier.bossel@gmail.com> */
/** Alias to the [./_s-look-and-feel.scss] function Return a settings.look-and-feel stack value @param 		{String} 		$name					The look and feel value name @return 		{Number} 								The look and feel value in em @example .my-cool-element { padding : s-lnf(padding-horizontal) s-lnf(padding-vertical); } @author 			Olivier Bossel <olivier.bossel@gmail.com> */
/** Return a settings.look-and-feel stack value @param 		{String} 		$name					The look and feel value name @return 		{Number} 								The look and feel value in em @example .my-cool-element { padding : s-look-and-feel(padding-horizontal) s-look-and-feel(padding-vertical); } @author 			Olivier Bossel <olivier.bossel@gmail.com> */
/** Return the modular scale value based on the settings ```modular-scale.base``` and ```modular-scale.ratio```. @param 			{Number} 		$scale 		The wanted scale @param 			{Number} 		[$base=settings.modular-scale.base] 	The base of calculation @return 			{Number} 					The calculated resulting value @author 			Olivier Bossel <olivier.bossel@gmail.com> */
/** Convert the passed value to the closest odd value @param 			{Number} 		$value 		The value to convert @return 			{Number} 					The closest odd converted value @author 			Olivier Bossel <olivier.bossel@gmail.com> */
/** Parse a given string/list properties and return the Map corresponding to the Map description @param 				{List} 				$properties 			The properties to parse @param 				{Map} 				$descriptor 			The descriptor map to use to parse the properties @return 				{Map} 										The properties in map format @example s-parse-properties(10px hello -delay 20s, ( myNumber : Number, myOtherNumber : Number, myString : String, myCoolVar : String, delay : second )); // => ( //  	myNumber : 10px, // 	myString : hello, // 	delay : 20s // ) @author 			Olivier Bossel <olivier.bossel@gmail.com> */
/** Convert the passed value to % @param 			{Number} 		$value 		The value to convert @return 			{Number} 					The % converted value @author 			Olivier Bossel <olivier.bossel@gmail.com> */
/** Convert the passed value to pt @param 			{Number} 		$value 		The value to convert @return 			{Number} 					The pt converted value @author 			Olivier Bossel <olivier.bossel@gmail.com> */
/** Convert the passed value to px @param 			{Number} 		$value 		The value to convert @return 			{Number} 					The px converted value @author 			Olivier Bossel <olivier.bossel@gmail.com> */
/** Convert the passed value to rem @param 			{Number} 		$value 		The value to convert @return 			{Number} 					The rem converted value @author 			Olivier Bossel <olivier.bossel@gmail.com> */
/** Return the passed values in the same unit but that has been even rounded on the corresponding px value This ensure that your passed value will be a round px value for final rander in the viewport @param 		{Number} 		$value 			The value to process @return 		{Number} 						The rounded value in same input unit but px rounded @example // if settings.typography.font-size == 16px s-render-round-even(5.2rem); // 1. transform to px values : 5.2 * 16px = 83.2px // 2. round even the px value : 84px // 3. transform to passed unit value : 84px / 16px = 5.25rem @author 			Olivier Bossel <olivier.bossel@gmail.com> */
/** Return the passed values in the same unit but that has been odd rounded on the corresponding px value This ensure that your passed value will be a round px value for final rander in the viewport @param 		{Number} 		$value 			The value to process @return 		{Number} 						The rounded value in same input unit but px rounded @example // if settings.typography.font-size == 16px s-render-round-odd(5.2rem); // 1. transform to px values : 5.2 * 16px = 83.2px // 2. round odd the px value : 83px // 3. transform to passed unit value : 84px / 16px = 5.1875rem @author 			Olivier Bossel <olivier.bossel@gmail.com> */
/** Return the passed values in the same unit but that has been rounded on the corresponding px value This ensure that your passed value will be a round px value for final rander in the viewport @param 		{Number} 		$value 			The value to process @return 		{Number} 						The rounded value in same input unit but px rounded @example // if settings.typography.font-size == 16px s-render-round(5.2rem); // 1. transform to px values : 5.2 * 16px = 83.2px // 2. round even the px value : 83px // 3. transform to passed unit value : 84px / 16px = 5.1875rem @author 			Olivier Bossel <olivier.bossel@gmail.com> */
/** Search and replace tokens like colors #primary in a passed string, list or map Supported tokens types : 1. Colors : colorName @example s-replace-tokens(12px #primary hello #secondary); // > 12px #ddd hello #fff; @author 			Olivier Bossel <olivier.bossel@gmail.com> */
/** Process selector to avoid having --default, etc... @param 		{String} 		$selector 		The selector to process @return 		{String} 						The processed selector @example 	scss s-selector('.input--default'); // => .input s-selector('.input-default'); // => .input s-selector('.input.default'); // => .input */
/** Get a settings from the global settings stack @param 				{String} 			$path 						The setting path wanted separated by dots @param 				{String} 			[$context=s-context()] 		The context name to get the setting @return 				{Mixed} 										The setting value¨ @example $font-size : s-setting('typography.font-size'); // etc... @author 			Olivier Bossel <olivier.bossel@gmail.com> */
/** Return a value interpolated from the settings.spaces stack @param 			{String} 			$size 			The space size wanted. Must exist in the settings.sizes stack @return 			{Number} 							The actual space value @example .my-cool-section { padding : s-pace(big); } @author 			Olivier Bossel <olivier.bossel@gmail.com> */
/** Return a number without any units @param 			{Number} 		$number 		The number to process @return 			{Number} 						The number without units @example s-strip-units(12px); // => 12 s-strip-units(30rem); // => 30 @author 			Olivier Bossel <olivier.bossel@gmail.com> */
/** Test an argument passed to a function or a mixin to ensure his type, value, etc... If the argument does not pass the test, an error will be thrown, unless the $check-only argument is true @param 				{String} 				$method 				The function/mixin name (debug purpose) @param 				{String} 				$argument 				The argument name to test (debug purpose) @param 				{List|String} 			$type-or-values 		If string, the type(s) that the argument must match, if list, the possible values that the argument can take @param 				{Mixed} 				$value 					The actual argument value @param 				{Boolean} 				[$check-only=false]		If this is true, will not thrown any error @return 				{Mixed} 										The value if ok, false if not @example \@mixin my-cool-mixin($argument1, $argument2) { $argument1 : s-test-argument(my-cool-mixin, argument1, string, $argument1); $argument2 : s-test-argument(my-cool-mixin, argument2, (hello,world,12), $argument2); } \@mixin my-cool-mixin(hello, world); // ok \@mixin my-cool-mixin(hello, universe); // throw an error \@mixin my-cool-mixin(12, world); // throw an error @author 				Olivier Bossel <olivier.bossel@gmail.com> */
/** Return the text-format setting scope class @return 		{String} 		The text-format scope class from settings.text-format.scope-class @author 		Olivier Bossel <olivier.bossel@gmail.com> */
/** Take a transition as parameter and parse it to return the {Map} corresponding The $transition parameter can be either a registered transition name or a custom css transition like : all .2s ease-in-out 2s The $transition argument will be parsed with the [./_s-parse-properties.scss] function. @param 			{List} 				$transition 			The registered transition name or the transition string to transform into map @return 			{Map} 										The corresponding transition map properties @example // register a transition \@include s-setup(( transitions : ( fast : all .2s ease-in-out, // other transitions... ) )); // registered transition s-transition-map(fast); // { // 	property : all, // 	duration : .2s, // 	ease : ease-in-out // } // custom transition s-transition-map(fast -delay .5s); // { // 	property : all, // 	duration : .2s, // 	ease : ease-in-out, // 	delay : .5s // } @author 			Olivier Bossel <olivier.bossel@gmail.com> */
/** Take a transition as parameter and parse it to return the {List} corresponding The $transitions parameter can be either a registered transition name or a custom css transition like : all .2s ease-in-out 2s The $transitions argument will be parsed with the [./_s-parse-properties.scss] function. @param 			{List} 				$transitions 			The registered transition(s) name(s) or the transition(s) strings(s) to transform into list @return 			{List} 										The corresponding transition list properties @example // register a transition \@include s-setup(( transitions : ( fast : all .2s ease-in-out 0s, // other transitions... ) )); // registered transition .my-cool-element { transition : s-transition(fast); // transition : all .2s ease-in-out 0s; } // custom transition .my-cool-element { transition : s-transition(fast -delay .5s, fast width ease-in); // transition : all .2s ease-in-out .5s, width .2s ease-in 0s; } @author 			Olivier Bossel <olivier.bossel@gmail.com> */
/** Return the unit context if has been set by the [s-unit-context mixin](../mixins/_s-unit-context.scss) @return 		{String} 				The unit context setted @author 		Olivier Bossel <olivier.bossel@gmail.com> */
/** Return the generated vertical rhythme properties map calculated depending on the passed arguments @param 			{Number} 				[$font-size=settings.typography.font-size] 			The font size wanted @param 			{String} 				[$font-family=settings.typography.font-family] 		The font family to use @param 			{Number} 				[$line-height=null] 							The line height to use @param 			{Number} 				[$margin-top=0] 								The targeted margin-top @param 			{Number} 				[$margin-bottom=0] 								The targeted margin-bottom @param 			{Number} 				[$padding-top=0] 								The targeted padding-top @param 			{Number} 				[$padding-bottom=0] 							The targeted padding-bottom @param 			{List} 					[$margin=null] 									The targeted margin property @param 			{List} 					[$padding=null] 								The targeted padding property @param 			{List} 					[$border-top=null] 								The targeted border-top property @param 			{List} 					[$border-bottom=null] 							The targeted border-bottom property @param 			{Number} 				[$border-top-width=0] 							The targeted border-top-width property @param 			{Number} 				[$border-bottom-width=0] 						The targeted border-bottom-width property @param 			{Number} 				[$border=null] 									The targeted border property @param 			{Number} 				[$cap-height=null] 								The font cap-height used to calculate the vertical ryhthme @param 			{Boolean|String} 		[$calculate-height=false] 						If true|min-height|max-height|height, will return the corresponding absolute height value in the map @TODO example @see 			https://medium.com/written-in-code/aligning-type-to-baseline-the-right-way-using-sass-e258fce47a9b#.lck2lgbni @author 			Olivier Bossel <olivier.bossel@gmail.com> */
/** Return the vertical-rhythme setting scope class @return 		{String} 		The vertical-rhythme scope class from settings.vertical-rhythme.scope-class @author 		Olivier Bossel <olivier.bossel@gmail.com> */
/** Generic sugar function can return multiple settings types like: - any settings : s('settings.{path}') - look and feel : s('look-and-feel.{property}', $size) - s('lnf.{property}', $size) - space : s('space.{size}') - color : s('color.{name}', $modifier) - transition : s('transition.{name}') - filter : s('filter.{name}') @example $my-color : s('color.primary'); $my-transition : s('transition.fast'); $my-font-size : s('settings.typography.font.size') // etc... @author 			Olivier Bossel <olivier.bossel@gmail.com> */
/** Print out the animation property calculated with the passed arguments This mixin support all the standard css animation properties like name, duration, delay, ease, direction and fill-mode. The $animations argument will be parsed with the [../functions/_s-parse-properties.scss] function. If you specify multiple animations at a time, this mixin will take care of the delay calculation for each animations and make them play one after another @param 			{List} 				$animations 			The animations wanted like : coco .2s ease-in-out reverse @example .my-cool-element { @include s-animation(my-animation 1s ease-in-out, another-animation 4s); // animation : my-animation 1s 0s ease-in-out 1 normal forwards, another-animation 4s 1s ease-in-out 1 normal forwards; } @author 			Olivier Bossel <olivier.bossel@gmail.com> */
/** Print out all wanted registered classes like padding helpers, margin helpers, font helpers, etc... Available namespaces - `sugar.filter.{name}` : .fi-{name} - `sugar.transition.{name}` : .tr-{name} - `sugar.font.family.{name}` : .f-{name} - `sugar.margin.bottom.{size}` : .m-b-{size} - `sugar.margin.top.{size}` : .m-t-{size} - `sugar.margin.left.{size}` : .m-l-{size} - `sugar.margin.right.{size}` : .m-r-{size} - `sugar.margin.side.{size}` : .m-s-{size} - `sugar.padding.all.{size}` : .p-{size} - `sugar.padding.top.{size}` : .p-t-{size} - `sugar.padding.bottom.{size}` : .p-b-{size} - `sugar.padding.left.{size}` : .p-l-{size} - `sugar.padding.right.{size}` : .p-r-{size} - `sugar.padding.side.{size}` : .p-s-{size} - `sugar.size.{size}` : .s-{size} - `sugar.size.rel.{size}` : .s-{size}-rel - `sugar.padding.no.top` : .no-p-t - `sugar.padding.no.bottom` : .no-p-b - `sugar.padding.no.left` : .no-p-l - `sugar.padding.no.right` : .no-p-r - `sugar.padding.no.side` : .no-p-s - `sugar.margin.no.top` : .no-m-t - `sugar.margin.no.bottom` : .no-m-b - `sugar.margin.no.left` : .no-m-l - `sugar.margin.no.right` : .no-m-r - `sugar.margin.no.side` : .no-m-s - `sugar.color.{name}.color` .c-{name} - `sugar.color.{name}.bkg` : .bkg-{name} - `sugar.color.{name}.modifier.{mod-name}.color` : .c-{name}--{mod-name} - `sugar.color.{name}.modifier.{mod-name}.bkg` : .bkg-{name}--{mod-name} - `sugar.pull.left` : .pull-left - `sugar.pull.right` : .pull-right - `sugar.position.relative` : .relative - `sugar.position.absolute` : .absolute - `sugar.clear.left` : .clear-left - `sugar.clear.right` : .clear-right - `sugar.clear.both` : .clear - `sugar.display.show` : .show - `sugar.display.show-inline` : .show-inline - `sugar.display.hidden` : .hidden - `sugar.display.hide` : .hide - `sugar.display.visible` : .visible - `sugar.display.invisible` : .invisible - `sugar.display.visually-hidden` : .visually-hidden - `sugar.text.hidden` : .t-hidden - `sugar.text.truncate` : .t-truncate - `sugar.text.align.left` : .t-left - `sugar.text.align.right` : .t-right - `sugar.text.align.center` : .t-center - `sugar.text.align.justify` : .t-justify - `sugar.text.transform.lowercase` : .t-lowercase - `sugar.text.transform.uppercase` : .t-uppercase - `sugar.text.transform.capitalize` : .t-capitalize - `sugar.font.weight.bold` : .f-bold - `sugar.font.weight.lighter` : .f-lighter - `sugar.font.weight.bolder` : .f-bolder - `sugar.font.weight.normal` : .f-normal - `sugar.font.style.italic` : .f-italic - `sugar.font.style.oblique` : .f-oblique - `sugar.font.variant.small-caps` : .f-small-caps - `sugar.block.align.center` : .block-center - `sugar.clearfix.default` : .clearfix - `sugar.clearfix.float` : .clearfix-float - `sugar.clearfix.micro` : .clearfix-micro - `sugar.clearfix.overflow` : .clearfix-overflow - `sugar.clearfix.facebook` : .clearfix-facebook - `sugar.no-transitions` : .no-transitions - `sugar.clear-transitions` : .clear-transitions - `sugar.no-animations` : .no-animations - `sugar.clear-animations` : .clear-animations - `sugar.no-transmations` : .no-transmations - `sugar.clear-transmations` : .clear-transmations @param 			{List}<string> 			$namespaces 		The classes namespaces wanted @example \@include s-classes(); // will print out all the classes \@include s-classes('sugar.font'); // will print all the font classes \@include s-classes('sugar.clearfix' 'sugar.pull'); // the clearfixes and the pull classes // etc... @author 			Olivier Bossel <olivier.bossel@gmail.com> */
/** Print out the scoped color schema css @param 		{String} 			$name 			The color schema name @example \@include s-color-schema(light) { h1, h2 { color : white; } } // will print .cs-light h1, .cs-light h2 { color : white; } h1, h2 { \@include s-color-schema(light) { color : white; } } // will print .cs-light h1, h1.cs-light, .cs-light h2, h2.cs-light { color : white; } @author 			Olivier Bossel <olivier.bossel@gmail.com> */
/** Set the name of the component that will be handled inside the mixin @param 			{String} 			[$name=null] 			The name of the component to set @param 			{String|Map} 		[$context=null] 		A context name or map to use inside the mixin @example \@include s-component('my-component') { s-component('hello') // => 'my-component' \@include s-component('another-component') { s-component('hello') // => 'my-component' } } @author 			Olivier Bossel <olivier.bossel@gmail.com>; */
/** Register a context with a name to use it later @param 			{String} 		$name 			The context name @param 			{Map} 			$settings 		The settings to override for this context @example \@include s-context-setup(my-cool-context, ( look-and-feel : ( padding-vertical : ( default : 0.6em ) ) )); // using your context \@include s-context(my-cool-context) { s-look-and-feel(padding-vertical); // => 0.6em } @author 			Olivier Bossel <olivier.bossel@gmail.com> */
/** Set a context to be used inside the mixin @param 			{String|Map} 			$name-or-map 		The name of a registered context or a map @example // register a context \@include s-context-setup(my-cool-context, ( look-and-feel : ( padding-vertical : ( default : 0.6em ) ) )); // registered context \@include s-context(my-cool-context) { // your code here... } // inline context \@include s-context(( look-and-feel : ( padding-vertical : ( default : .3em ) ) )) { // your code here... } @author 			Olivier Bossel <olivier.bossel@gmail.com> */
/** Print out a list with all the filters that are passed as argument This will use the [../functions/_s-filter-map.scss] function to parse the filters @param 	 	{List}<String> 			$filters 			The registered filter(s) name(s) or the filter(s) string(s) to transform into list @example // register a filter \@include s-setup(( filters : ( myCoolFilter : box-shadow(#000 0 0 10px) blur(30px), // other filters... ) )); // registered filter .my-cool-elememt { \@include s-filter(myCoolFilter); // filter : box-shadow(#000 0 0 10px) blur(30px); } // custom filter .my-cool-element { \@include s-filter(myCoolFilter invert(100%)); // filter : box-shadow(#000 0 0 10px) blur(30px) invert(100%); } @author 			Olivier Bossel <olivier.bossel@gmail.com> */
/** Helper to print a font-face @param 			{String} 		$font-family 			The font-family @param 			{String} 		$src 					The source url (only 1 extension) @param 			{List} 			[$extensions=woff2] 	The extensions list that you have available @param 			{String} 		[$font-weight=normal] 	The font-weight property @param 			{String} 		[$font-style=normal] 	The font-style property @example // if you have these extensions files : .woff .eot .woff2 \@include s-font-face( $name : my-cool-font, $src : '/fonts/my-font.eot', $extensions : eot woff woff2 ) @author 			Olivier Bossel <olivier.bossel@gmail.com> */
/** Print all the fonts properties that correspond to the passed arguments @param 		{String} 			[$family=null] 			The font family wanted (can be a registered font name) @param 		{Color} 			[$color=null] 			The color wanted (can be a registered color name) @param 		{Number} 			[$size=null] 			The font-size wanted @param 		{String} 			[$style=null] 			The font-style wanted @param 		{String} 			[$variant=null] 		The font-variant wanted @param 		{String|Number} 	[$weight=null] 			The font-weight wanted @param 		{String} 			[$decoration=null] 		The text-decoration wanted @param 		{String} 			[$align=null] 			The text-align wanted @param 		{String} 			[$transform=null] 		The text-transform wanted @param 		{String} 			[$stretch=null] 		The font-stretch wanted @param 		{String} 			[$white-space=null] 	The white-space wanted @param 		{Number} 			[$height=null] 			The line-height wanted @param 		{Number} 			[$spacing=null] 		The letter-spacing wanted @param 		{Number} 			[$indent=null] 			The text-indent wanted @param 		{String} 			[$break=null] 			The line-break wanted @param 		{String} 			[$wrap=null] 			The word-wrap wanted @return 		{Map} 										The corresponding font map @example .my-cool-elememt { \@include s-font( $family : 'Helvetica Neue', $size : 12px, $wrap : norwap ); // print font-family : 'Helvetica Neue', font-size : 12px, word-wrap : nowrap } @author 			Olivier Bossel <olivier.bossel@gmail.com> */
/** Init the sugar toolkit. This has to be called **AFTER** all the [./_s-setup.scss] mixin call and **BEFORE** all the others sugar mixins and functions calls @example \@include s-init(); @author 		Olivier Bossel <olivier.bossel@gmail.com> */
/** Register all the dynamic helper classes that depends on the settings, etc... This is used internaly @example \@include s-init-classes(); @author 			Olivier Bossel <olivier.bossel@gmail.com> */
/** Register a helper class under a certain namespace @param 			{String} 		$classname 		The classname that will be printed out @param 			{String} 		$namespace 		The dots separated namespace under which the class will live @example \@include s-register-class(my-cool-class, 'my.cool.namespace') { background : pink; } \@include s-register-class(another-cool-class, 'my.another.namespace') { background : red; } // print out my helpers classes \@include s-classes('my'); @author 			Olivier Bossel <olivier.bossel@gmail.com> */
/** Setup sugar toolkit by overriding the default [settings](../_settings.scss) This has to be called **BEFORE** the [s-init mixin](./_s-init.scss) @param 			{Map} 			$settings 		The settings to override @example \@include s-setup(( typo : ( font-size : 12px ), sizes : ( small : 0.5, big : 1.5 ) )); // this mixin can be called as many times as you need // this allows you to separate your configs setup into multiple // files... @author 			Olivier Bossel <olivier.bossel@gmail.com> */
/** Display the vertical rhythme @param 			{Color} 		The color wanted @example body { @include s-show-vertical-rhythme(); } @author 			Olivier Bossel <olivier.bossel@gmail.com> */
/** Take a transition as parameter and print the corresponding transition property The $transitions parameter can be either a registered transition name or a custom css transition like : all .2s ease-in-out 2s The $transitions argument will be parsed with the [./_s-parse-properties.scss] function. @param 			{List} 				$transitions 			The registered transition(s) name(s) or the transition(s) strings(s) to transform into list @return 			{List} 										The corresponding transition list properties @example // register a transition \@include s-setup(( transitions : ( fast : all .2s ease-in-out 0s, // other transitions... ) )); // registered transition .my-cool-element { \@include s-transition(fast>); // transition : all .2s ease-in-out 0s; } // custom transition .my-cool-element { \@include s-transition(fast -delay .5s, fase width ease-in); // transition : all .2s ease-in-out .5s, width .2s ease-in 0s; } @author 			Olivier Bossel <olivier.bossel@gmail.com> */
/** Set the unit context to use inside the mixin. This mean that if you set a unit context, then get a number setting through the [s-setting function](../functions/_s-setting.scss), The value that will be returned will be converted into the unit context if possible @param 			{String} 			$unit 			The unit wanted @example // if settings.typography.font-size == 16px s-setting('typography.font-size'); // => 16px \@incluse s-unit-context(rem) { s-setting('typography.font-size'); // => 1rem } @author 			Olivier Bossel <olivier.bossel@gmail.com> */
/** Print out the vertical rhythme properties map calculated depending on the passed arguments @param 			{Number} 				[$font-size=settings.typography.font-size] 			The font size wanted @param 			{String} 				[$font-family=settings.typography.font-family] 		The font family to use @param 			{Number} 				[$line-height=null] 							The line height to use @param 			{Number} 				[$margin-top=0] 								The targeted margin-top @param 			{Number} 				[$margin-bottom=0] 								The targeted margin-bottom @param 			{Number} 				[$padding-top=0] 								The targeted padding-top @param 			{Number} 				[$padding-bottom=0] 							The targeted padding-bottom @param 			{List} 					[$margin=null] 									The targeted margin property @param 			{List} 					[$padding=null] 								The targeted padding property @param 			{List} 					[$border-top=null] 								The targeted border-top property @param 			{List} 					[$border-bottom=null] 							The targeted border-bottom property @param 			{Number} 				[$border-top-width=0] 							The targeted border-top-width property @param 			{Number} 				[$border-bottom-width=0] 						The targeted border-bottom-width property @param 			{Number} 				[$border=null] 									The targeted border property @param 			{Number} 				[$cap-height=null] 								The font cap-height used to calculate the vertical ryhthme @param 			{Boolean|String} 		[$calculate-height=false] 						If true|min-height|max-height|height, will return the corresponding absolute height value in the map @TODO example @see 			https://medium.com/written-in-code/aligning-type-to-baseline-the-right-way-using-sass-e258fce47a9b#.lck2lgbni @author 			Olivier Bossel <olivier.bossel@gmail.com> */
/** This file is responsible to register the static helper classes like pull-right, clear, etc... @author 			Olivier Bossel <olivier.bossel@gmail.com> */
.pull-left { /** @name 		```.pull-left``` Allows you to pull an element to the left side @styleguide 	Helpers / Pull @example 	html <span class="pull-left">Hello world</span> </div> */ float: left; }

.pull-right { /** @name 		```.pull-right``` Allows you to pull an element to the right side @styleguide 	Helpers / Pull @example 	html <span class="pull-right">Hello world</span> </div> */ float: right; }

.relative { /** @name 		```.relative``` Set an element position as ```relative``` @styleguide 	Helpers / Position @example 	html <div class="relative"> I'm relative now </div> */ position: relative; }

.absolute { /** @name 		```.absolute``` Set an element position as ```absolute``` @styleguide 	Helpers / Position @example 	html <div class="absolute"> I'm absolute now </div> */ position: absolute; }

.clear-left { /** @name 		```.clear-left``` Clear the left float on the element @styleguide 	Helpers / Float @example 	html <div class="clear-left"> I clear the left float </div> */ clear: left; }

.clear-right { /** @name 		```.clear-right``` Clear the right float on the element @styleguide 	Helpers / Float @example 	html <div class="clear-right"> I clear the right float </div> */ clear: right; }

.clear { /** @name 		```.clear``` Clear both float on the element @styleguide 	Helpers / Float @example 	html <div class="clear"> I clear both floats </div> */ clear: both; }

.block { /** @name 		```.block``` Display the element as ```block``` @styleguide 	Helpers / Display @example 	html <div class="block"> I'm displayed as block </div> */ display: block; }

.inline { /** @name 		```.inline``` Display the element as ```inline``` @styleguide 	Helpers / Display @example 	html <div class="inline"> I'm displayed as inline </div> */ display: inline; }

.inline-block { /** @name 		```.inline-block``` Display the element as ```inline-block``` @styleguide 	Helpers / Display @example 	html <div class="inline-block"> I'm displayed as inline-block </div> */ display: inline-block; }

.show { /** @name 		```.show``` Display the element as ```block``` @styleguide 	Helpers / Display @example 	html <div class="show"> I'm displayed </div> */ display: block; }

.show-inline { /** @name 		```.show-inline``` Display the element as ```inline-block``` @styleguide 	Helpers / Display @example 	html <div class="show-inline"> I'm inline displayed </div> */ display: inline-block; }

.hidden { /** @name 		```.hidden``` Hide the element by setting the display to ```none``` @styleguide 	Helpers / Display @example 	html <div class="hidden"> I'm hidden </div> */ display: none; }

.hide { /** @name 		```.hide``` Hide the element by setting the display to ```none``` @styleguide 	Helpers / Display @example 	html <div class="hide"> I'm hidden </div> */ display: none; }

.visible { /** @name 		```.visible``` Display the element by setting the visibility to ```visible``` @styleguide 	Helpers / Display @example 	html <div class="visible"> I'm visible </div> */ visibility: visible; }

.invisible { /** @name 		```.invisible``` Display the element by setting the visibility to ```hidden``` @styleguide 	Helpers / Display @example 	html <div class="invisible"> I'm invisible </div> */ visibility: hidden; }

.visually-hidden { /** @name 		```.visually-hidden``` Hide the element from display but not for SEO. This class use some tricks to make the element dissapear without using some ```display:none;```, etc... @styleguide 	Helpers / Display @example 	html <div class="visually-hidden"> I'm only visually hidden </div> */ margin: -1px; padding: 0; width: 1px; height: 1px; overflow: hidden; clip: rect(0 0 0 0); clip: rect(0, 0, 0, 0); position: absolute; }

.t-hidden { /** @name 		```.t-hidden``` Hide the text @styleguide 	Helpers / Text @example 	html <div class="t-hidden"> I'm not visible </div> */ overflow: hidden; text-indent: -9000px; display: block; }

.t-truncate { /** @name 		```.t-truncate``` Hide the text @styleguide 	Helpers / Text @example 	html <div class="t-truncate"> I'm truncated cause I talk a lot too much Nulla mauris eros, finibus ac faucibus et, tempus quis risus. Praesent sit amet nulla vel libero euismod sodales eu nec. </div> */ display: inline-block; max-width: 100%; overflow: hidden; text-overflow: ellipsis; white-space: nowrap; }

.t-truncate > * { text-overflow: ellipsis; overflow: hidden; }

.t-left { /** @name 		```.t-left``` Align the text to the left @styleguide 	Helpers / Text @example 	html <div class="t-left"> I'm left aligned </div> */ text-align: left !important; }

.t-right { /** @name 		```.t-right``` Align the text to the right @styleguide 	Helpers / Text @example 	html <div class="t-right"> I'm right aligned </div> */ text-align: right !important; }

.t-center { /** @name 		```.t-center``` Align the text to the center @styleguide 	Helpers / Text @example 	html <div class="t-center"> I'm centered </div> */ text-align: center !important; }

.t-justify { /** @name 		```.t-justify``` Make the text justified @styleguide 	Helpers / Text @example 	html <div class="t-justify"> Nullam vel feugiat nunc. Phasellus facilisis, nisi sit amet viverra rhoncus, arcu risus volutpat dolor, sed euismod magna tellus ac purus. Praesent augue lorem, ullamcorper ac accumsan nec, suscipit eu. </div> */ text-align: justify !important; }

.t-lowercase { /** @name 		```.t-lowercase``` Transform the text to lowercase @styleguide 	Helpers / Text @example 	html <div class="t-lowercase"> I'M LOWERCASE </div> */ text-transform: lowercase !important; }

.t-uppercase { /** @name 		```.t-uppercase``` Transform the text to uppercase @styleguide 	Helpers / Text @example 	html <div class="t-uppercase"> I'm uppercase </div> */ text-transform: uppercase !important; }

.t-capitalize { /** @name 		```.t-capitalize``` Capizalize the words @styleguide 	Helpers / Text @example 	html <div class="t-capitalize"> I'm capitalized </div> */ text-transform: capitalize !important; }

.f-bold { /** @name 		```.f-bold``` Set the font-weight to ```bold``` @styleguide 	Helpers / Font @example 	html This <span class="f-bold">word</span> is bold */ font-weight: bold; }

.f-lighter { /** @name 		```.f-lighter``` Set the font-weight to ```lighter``` @styleguide 	Helpers / Font @example 	html This <span class="f-lighter">word</span> is lighter */ font-weight: lighter; }

.f-bolder { /** @name 		```.f-bolder``` Set the font-weight to ```bolder``` @styleguide 	Helpers / Font @example 	html This <span class="f-bolder">word</span> is bolder */ font-weight: bolder; }

.f-normal { /** @name 		```.f-normal``` Set the font-weight to ```normal``` @styleguide 	Helpers / Font @example 	html <div class="f-bold"> This <span class="f-normal">word</span> is normal </div> */ font-weight: normal; font-style: normal; }

.f-italic { /** @name 		```.f-italic``` Set the font-style to ```italic``` @styleguide 	Helpers / Font @example 	html This <span class="f-italic">word</span> is italic */ font-style: italic; }

.f-oblique { /** @name 		```.f-oblique``` Set the font-style to ```oblique``` @styleguide 	Helpers / Font @example 	html This <span class="f-oblique">word</span> is oblique */ font-style: oblique; }

.f-small-caps { /** @name 		```.f-small-caps``` Set the font-variant to ```small-caps``` @styleguide 	Helpers / Font @example 	html This <span class="f-small-caps">word</span> is small-caps */ font-variant: small-caps; }

.block-center { /** @name 		```.block-center``` Set the element to as ```display:block``` and center it @styleguide 	Helpers / Block @example 	html <div class="block-center bkg-primary" style="width:100px;"> I'm a centered block </div> */ display: block; margin-left: auto; margin-right: auto; }

.clearfix { /** @name 		```.clearfix``` Apply the micro clearfix on the element @styleguide 	Helpers / Clearfix @example 	html <div class="clearfix bkg-primary"> <div class="pull-right">right pulled</div> </div> <div class="bkg-primary"> <div class="pull-right">right pulled without clearfix</div> </div> */ }

.clearfix-float { /** @name 		```.clearfix-float``` Apply the float clearfix on the element @styleguide 	Helpers / Clearfix @example 	html <div class="clearfix-float bkg-primary"> <div class="pull-right">right pulled</div> </div> <div class="bkg-primary"> <div class="pull-right">right pulled without clearfix</div> </div> */ }

.clearfix, .clearfix-micro { /** @name 		```.clearfix``` Apply the micro clearfix on the element @styleguide 	Helpers / Clearfix @example 	html <div class="clearfix bkg-primary"> <div class="pull-right">right pulled</div> </div> <div class="bkg-primary"> <div class="pull-right">right pulled without clearfix</div> </div> */ }

.clearfix-overflow { /** @name 		```.clearfix-overflow``` Apply the overflow clearfix on the element @styleguide 	Helpers / Clearfix @example 	html <div class="clearfix-overflow bkg-primary"> <div class="pull-right">right pulled</div> </div> <div class="bkg-primary"> <div class="pull-right">right pulled without clearfix</div> </div> */ }

.clearfix-facebook { /** @name 		```.clearfix-facebook``` Apply the facebook clearfix on the element @styleguide 	Helpers / Clearfix @example 	html <div class="clearfix-facebook bkg-primary"> <div class="pull-right">right pulled</div> </div> <div class="bkg-primary"> <div class="pull-right">right pulled without clearfix</div> </div> */ }

.no-transitions { /** @name 		```.no-transitions``` Disable the transitions <span class="f-bold">only on the element</span> @styleguide 	Helpers / Transitions @example 	html <div class="no-transitions"> I have no more transitions <div>But I have</div> </div> */ }

.no-transitions, .no-transitions:before, .no-transitions:after { transition: none !important; }

.clear-transitions { /** @name 		```.clear-transitions``` Disable the transitions <span class="f-bold">on the element and all his children</span> @styleguide 	Helpers / Transitions @example 	html <div class="clear-transitions"> I have no more transitions <div>Me neither</div> </div> */ }

.clear-transitions, .clear-transitions:before, .clear-transitions:after, .clear-transitions *, .clear-transitions *:before, .clear-transitions *:after { transition: none !important; }

.no-animations { /** @name 		```.no-animations``` Disable the animations <span class="f-bold">only on the element</span> @styleguide 	Helpers / Animations @example 	html <div class="no-animations"> I have no more animations <div>But I have</div> </div> */ }

.no-animations, .no-animations:before, .no-animations:after { animation: none !important; }

.clear-animations { /** @name 		```.clear-animations``` Disable the transitions <span class="f-bold">on the element and all his children</span> @styleguide 	Helpers / Animations @example 	html <div class="clear-animations"> I have no more animations <div>Me neither</div> </div> */ }

.clear-animations, .clear-animations:before, .clear-animations:after, .clear-animations *, .clear-animations *:before, .clear-animations *:after { animation: none !important; }

.no-transmations { /** @name 		```.no-transmations``` Disable the animations and transitions <span class="f-bold">only on the element</span> @styleguide 	Helpers / Transmations @example 	html <div class="no-transmations"> I have no more animations or transitions <div>But I have</div> </div> */ }

.no-transmations, .no-transmations:before, .no-transmations:after { transition: none !important; animation: none !important; }

.clear-transmations { /** @name 		```.clear-transmations``` Disable the animations and transitions <span class="f-bold">on the element and all his children</span> @styleguide 	Helpers / Transmations @example 	html <div class="clear-transmations"> I have no more animations or transitions <div>Me neither</div> </div> */ }

.clear-transmations, .clear-transmations:before, .clear-transmations:after, .clear-transmations *, .clear-transmations *:before, .clear-transmations *:after { transition: none !important; animation: none !important; }

/** This file contains all the default settings that can be overrided by the [s-setup mixin](./mixins/_s-setup.scss). @author 			Olivier Bossel <olivier.bossel@gmail.com> */
/** Create an arrow bubble effect @param 		{String} 			[$side=bottom] 				The side (top,right,bottom,left) @param 		{String} 			[$align=center] 			The alignement (left,center,right,top,middle,bottom) @param 		{Number} 			[$size=10px] 				The size of the arrow @param 		{Color} 			[$color=s-color(primary)] 	The color of the bubble @param 		{Number} 			[$arrow-offset=10px] 		The arrow offset from the side of the bubble @param 		{Number} 			[$border-width=0] 			The border width of the bubble @param 		{Color} 			[$border-color=null] 		The border color of the bubble @example .my-cool-bubble { \@include s-bubble( $color : s-color(secondary) ); color : white; } @see 			https://codepen.io/kirkas/pen/otqyJ @author 			Olivier Bossel <olivier.bossel@gmail.com> */
/** Generate a drop shadow depending on the depth specified @param 		{Integer} 			$depth 							The depth wanted (1,2,3,4,etc...) @param 		{Color} 			[$color=rgba(0,0,0,.2)] 		The drop shadow color @example .my-cool-element { \@include s-depth(2); } @author 	 		Olivier Bossel <olivier.bossel@gmail.com> */
/** Create a poping dot effect to catch user attention on a particular item This mixin affect the :before and :after pseudo selector of the item @param 		{String} 		[$vertical-align=top] 			Where to put the dot verticaly (top,middle,bottom) @param 		{String} 		[$align=left] 					Where to put the dot horizontaly (left,center,right) @param 		{Number} 		[$size=20px] 					The size of the dot @param 		{Color} 		[$color=primary] 				The color of the dot @param 		{Number} 		[$offset-top=0] 				The offset top @param 		{Number} 		[$offset-right=0] 				The offset right @param 		{Number} 		[$offset-bottom=0] 				The offset bottom @param 		{Number} 		[$offset-left=0] 				The offset left @example .my-cool-element { \@include s-hey( $align : right, $color : secondary, $size : 10px, $offset-top : -10px, $offset-right : -10px ); } @author 			Olivier Bossel <olivier.bossel@gmail.com> */
/** Generate a full animated, single element, bars loader @param 			{String} 			[$shape=rect] 				The shape of the bars (rect,circle) @param 			{Color} 			[$color=primary] 			The color(s) of the loader. Can be a list of colors @param 			{Number} 			[$width=.5em] 				The width of each bars @param 			{Number} 			[$height=2em] 				The height of each bars @param 			{Integer} 			[$count=5] 					How many bars you want @param 			{Number} 			[$gap=.5em] 				The gap between each bars @param 			{Number} 			[$opacity=1] 				The initial opacity of each bars @param 			{Number} 			[$a-opacity=null] 			The opacity of the animated bars @param 			{Second} 			[$a-duration=1s] 			The overall animation duration @param 			{Second} 			[$a-delay=0s] 				The delay between two animation cycle @param 			{Integer} 			[$a-near=1] 				How many bars are affected by the animated one @param 			{String} 			[$a-ease=ease-in-out] 		The ease to use to animate each bars @param 			{Number} 			[$a-offset=null] 			The offset to move the animated bar @param 			{String} 			[$a-direction=both] 		The direction in which to move the bars (up,down,both) @param 			{Boolean} 			[$a-continuous=true] 		If true, the first bars will be animated at same time at the last ones @example .my-cool-loader { \@include s-loader-bars( $color : primary, $a-offset : .5em ); } @author 			Olivier Bossel <olivier.bossel@gmail.com> */
/** Generate a full animated, single element, circle loader @param 			{Color} 			[$color=primary] 			The color(s) of the loader. Can be a list of colors @param 			{Number} 			[$size=.33em] 				The size of each dot @param 			{Number} 			[$radius=1em] 				The distance of each dot from the center of the loader @param 			{Integer} 			[$count=5] 					How many bars you want @param 			{Number} 			[$opacity=1] 				The initial opacity of each bars @param 			{Number} 			[$a-opacity=null] 			The opacity of the animated bars @param 			{Second} 			[$a-duration=1s] 			The overall animation duration @param 			{Second} 			[$a-delay=0s] 				The delay between two animation cycle @param 			{Integer} 			[$a-near=1] 				How many bars are affected by the animated one @param 			{String} 			[$a-ease=ease-in-out] 		The ease to use to animate each bars @TODO finish documentation @author 			Olivier Bossel <olivier.bossel@gmail.com> */
/** Generate a full animated, single element, couch-potato style loader @param 		{Number} 		[$size=1em] 				The size of the loader @param 		{Color} 		[$color=primary] 			The color of the loader @param 		{Second} 		[$a-duration=1s] 			The overall animation duration @param 		{Second} 		[$a-delay=0s] 				The delay between two animation cycle @param 		{String} 		[$a-ease=ease-in-out]		The ease to use for the animation @param 		{Degree}		[$a-rotate=360deg] 			The animation rotation @param 		{Number} 		[$a-scale=.7] 				The animation scale @example .my-cool-loader { \@include s-loader-couch-potato(); } @author 			Olivier Bossel <olivier.bossel@gmail.com> */
/** Generate a full animated, single element, flip ball style loader @param 		{String} 		[$shape=circle] 			The shape of the loader (circle,rect) @param 		{Number} 		[$size=1em] 				The size of the loader @param 		{Color} 		[$color=primary] 			The color of the loader. Can be a list of colors @param 		{Second} 		[$a-duration=1s] 			The overall animation duration @param 		{Second} 		[$a-delay=0s] 				The delay between two animation cycle @param 		{String} 		[$a-ease=ease-in-out]		The ease to use for the animation @example .my-cool-loader { \@include s-loader-flip-ball(); } @author 			Olivier Bossel <olivier.bossel@gmail.com> */
/** Generate a long shadow effect like [this](https://www.google.ch/search?q=long+shadow&espv=2&biw=2560&bih=1316&source=lnms&tbm=isch&sa=X&ved=0ahUKEwjjne6x49LPAhVBHRQKHat8AW8Q_AUIBigB) @param 		{Color} 		[$color=rgba(0,0,0,.3)] 			The shadow color @param 		{String} 		[$type=text] 						The shadow type (text,box) @param 		{Degree} 		[$angle=135deg] 					The shadow angle @param 		{Integer} 		[$depth=20] 						The shadow depth @param 		{Boolean} 		[$fade=false] 						If true, the shadow will fade itself @param 		{Number} 		[$blur=0] 							The blur amount of the shadow @param 		{Number} 		[$blur-ratio=0] 					The ratio to blur each depth more @example .my-cool-title { \@include s-long-shadow( $depth : 10 ); } .my-cool-box { \@include s-long-shadow( $type : box ); } @author 			Olivier Bossel <olivier.bossel@gmail.com> */
/** Create side lines around an item @param 			{String} 		[$style=solid] 			The line style, same possible values as the border-style property @param 			{String} 		[$side=both] 			The side where to put lines (left,right,both) @param 			{Number} 		[$height=1px] 			The lines height @param 			{Number} 		[$width=50%] 			The width of the lines @param 			{Color} 		[$color=text]			The color of the lines @param 			{Number} 		[$padding=0] 			The padding between the lines and the content @param 			{Number} 		[$offset-top=null] 		The line offset top @example h1 { \@include s-side-lined( $padding : 20px, $side : right, $width : 100% ); } @author 			Olivier Bossel <olivier.bossel@gmail.com> */
/** Load all components */
.btn, .btn--block { display: inline-block; border-style: solid; border-width: 1px; border-color: transparent; cursor: pointer; outline-width: 0; -webkit-appearance: none; line-height: 0; text-decoration: none; font-size: 1em; user-select: none; }

.btn:not(button):not(input), .btn--block:not(button):not(input) { line-height: 1; }

.btn > *, .btn--block > * { vertical-align: middle; }

button { line-height: 1; }

.nav--justify { list-style: none; padding: 0; margin: 0; user-select: none; }

/** Apply the title css @param 		{Number} 		$size 		The size wanted. If unitless, will use modular scale to calculate size @param 		{Integer}		[$base=null] 		The base on which to calculate the modular scale if needed @author 		Olivier Bossel <olivier.bossel@gmail.com> */
/** Apply the title bare css @param 		{Number} 		$size 				The size wanted. If unitless, will use modular scale to calculate size @param 		{Integer}		[$base=null] 		The base on which to calculate the modular scale if needed @author 		Olivier Bossel <olivier.bossel@gmail.com> */
/** Apply the title style css @param 		{Number} 		$size 				The size wanted. If unitless, will use modular scale to calculate size @param 		{Integer}		[$base=null] 		The base on which to calculate the modular scale if needed @author 		Olivier Bossel <olivier.bossel@gmail.com> */
/** Apply the paragraph bare css @param 		{Number} 		$size 				The size wanted @author 		Olivier Bossel <olivier.bossel@gmail.com> */
/** Apply the paragraph style css @author 		Olivier Bossel <olivier.bossel@gmail.com> */
/** Apply the link css @param 		{Color} 		[$color=primary] 		The color used to style link @author 		Olivier Bossel <olivier.bossel@gmail.com> */
/** Apply the link bare css @author 		Olivier Bossel <olivier.bossel@gmail.com> */
/** Apply the link style css @param 		{Color} 		[$color=primary] 		The color used to style link @author 		Olivier Bossel <olivier.bossel@gmail.com> */
/** Apply the inline-text css @param 		{String} 		$tag 		The tag to use the style for @param 		{Color} 		[$color=primary] 		The color used to style different inline text elements @author 		Olivier Bossel <olivier.bossel@gmail.com> */
/** Apply the inline-text bare css @param 		{String} 		$tag 		The tag to use the style for @author 		Olivier Bossel <olivier.bossel@gmail.com> */
/** Apply the inline-text css @param 		{String} 		$tag 		The tag to use the style for @param 		{Color} 		[$color=primary] 		The color used to style different inline text elements @author 		Olivier Bossel <olivier.bossel@gmail.com> */
/** Apply the list css @param 		{String|List} 		$tag 				The tag to style like "ul", "ol li" or "dl dt" @param 		{Color} 			[$color=primary] 	The color used for styling bullets @author 		Olivier Bossel <olivier.bossel@gmail.com> */
/** Apply the list bare css @param 		{String|List} 		$tag 				The tag to style like "ul", "ol li" or "dl dt" @author 		Olivier Bossel <olivier.bossel@gmail.com> */
/** Apply the list style css @param 		{String|List} 		$tag 				The tag to style like "ul", "ol li" or "dl dt" @param 		{Color} 			[$color=primary] 	The color used for styling bullets @author 		Olivier Bossel <olivier.bossel@gmail.com> */
/** Apply the caption css @author 		Olivier Bossel <olivier.bossel@gmail.com> */
/** Apply the caption bare css @author 		Olivier Bossel <olivier.bossel@gmail.com> */
/** Apply the caption style css @author 		Olivier Bossel <olivier.bossel@gmail.com> */
/** Apply the quote css @author 		Olivier Bossel <olivier.bossel@gmail.com> */
/** Apply the quote bare css @author 		Olivier Bossel <olivier.bossel@gmail.com> */
/** Apply the quote style css @author 		Olivier Bossel <olivier.bossel@gmail.com> */
/** Provide all the classes of the typography component like titles, paragraphs, lists, etc.. @param 		{Color} 	[$color=primary] 		The main color used to generate the texts styles @author 		Olivier Bossel <olivier.bossel@gmail.com> */
/** Provide the styling for the titles classes @author 		Olivier Bossel <olivier.bossel@gmail.com> */
/** Provide the bare styling for the titles classes @author 		Olivier Bossel <olivier.bossel@gmail.com> */
/** Provide the style styling for the titles classes @author 		Olivier Bossel <olivier.bossel@gmail.com> */
/** Provide the styling for the paragraphs classes @author 		Olivier Bossel <olivier.bossel@gmail.com> */
/** Provide the bare styling for the ```.p``` and ```.p--lead``` classes @author 		Olivier Bossel <olivier.bossel@gmail.com> */
/** Provide the bare styling for the ```.p``` class @author 		Olivier Bossel <olivier.bossel@gmail.com> */
/** Provide the styling for the links classes @param 		{Color} 		[$color=primary] 		The color used to style links @author 		Olivier Bossel <olivier.bossel@gmail.com> */
/** Provide the bare styling for the links classes @author 		Olivier Bossel <olivier.bossel@gmail.com> */
/** Provide the style styling for the links classes @param 		{Color} 		[$color=primary] 		The color used to style links @author 		Olivier Bossel <olivier.bossel@gmail.com> */
/** Provide the styling for the inline-text classes @param 		{Color} 		[$color=primary] 		The color used to style different inline text elements @author 		Olivier Bossel <olivier.bossel@gmail.com> */
/** Provide the bare styling for the inline-text classes @author 		Olivier Bossel <olivier.bossel@gmail.com> */
/** Provide the style styling for the inline-text classes @param 		{Color} 		[$color=primary] 		The color used to style different inline text elements @author 		Olivier Bossel <olivier.bossel@gmail.com> */
/** Provide the styling for the lists classes @param 		{Color} 		[$color=primary] 		The color used to style bullets @author 		Olivier Bossel <olivier.bossel@gmail.com> */
/** Provide the bare styling for the lists classes @author 		Olivier Bossel <olivier.bossel@gmail.com> */
/** Provide the style styling for the lists classes @param 		{Color} 		[$color=primary] 		The color used to style bullets @author 		Olivier Bossel <olivier.bossel@gmail.com> */
/** Provide the styling for the captions classes @author 		Olivier Bossel <olivier.bossel@gmail.com> */
/** Provide the bare styling for the captions classes @author 		Olivier Bossel <olivier.bossel@gmail.com> */
/** Provide the style styling for the captions classes @author 		Olivier Bossel <olivier.bossel@gmail.com> */
/** Provide the styling for the quotes classes @author 		Olivier Bossel <olivier.bossel@gmail.com> */
/** Provide the bare styling for the quotes classes @author 		Olivier Bossel <olivier.bossel@gmail.com> */
/** Provide the style styling for the quotes classes @author 		Olivier Bossel <olivier.bossel@gmail.com> */
/** Setup Setup all the different parts/modules/libraries. */
/** Setup Setup all the different parts/modules/libraries. */
/** @name 	default State Here's the settings for the **default** state. @styleguide 	Gridle / States @display 	gridle-settings @gridle-name 	default @gridle-min-width 	 @gridle-max-width 	 @gridle-query 	 @gridle-classes 	true @gridle-context 	12 @gridle-gutter-width 	20px @gridle-gutter-height 	20px @gridle-gutter-top 	10px @gridle-gutter-right 	10px @gridle-gutter-bottom 	10px @gridle-gutter-left 	10px @gridle-direction 	ltr @gridle-dir-attribute 	false @gridle-name-multiplicator 	1 @gridle-states-classes 	false @gridle-classes-prefix 	 */
/** Utils Import all the different utils functions, mixins, classes, etc... */
/** Utils Import all the different utils functions, mixins, classes, etc... */
/** Generic All the generic codebase for the project like typography, resets, etc... */
/** Generic All the generic codebase for the project like typography, resets, etc... */
.container:after { content: ""; display: table; clear: both; }

.row:before, .row-reverse:before, .row:after, .row-reverse:after { content: ""; display: table; }

.row:after, .row-reverse:after { clear: both; }

.row, .row-reverse { zoom: 1; }

.gr-0, .gr-1, .gr-2, .gr-3, .gr-4, .gr-5, .gr-6, .gr-7, .gr-8, .gr-9, .gr-10, .gr-11, .gr-12 { display: inline-block; line-height: 1; float: left; -webkit-box-sizing: border-box; -moz-box-sizing: border-box; box-sizing: border-box; vertical-align: top; padding-right: 10px; padding-left: 10px; }

.gr-adapt { display: table-cell; width: 1px; white-space: nowrap !important; line-height: 1; -webkit-box-sizing: border-box; -moz-box-sizing: border-box; box-sizing: border-box; padding-right: 10px; padding-left: 10px; }

.gr-grow { display: table-cell; width: 99999px; line-height: 1; -webkit-box-sizing: border-box; -moz-box-sizing: border-box; box-sizing: border-box; padding-right: 10px; padding-left: 10px; }

.push-0, .push-1, .push-2, .push-3, .push-4, .push-5, .push-6, .push-7, .push-8, .push-9, .push-10, .push-11, .push-12 { position: relative; }

.pull-0, .pull-1, .pull-2, .pull-3, .pull-4, .pull-5, .pull-6, .pull-7, .pull-8, .pull-9, .pull-10, .pull-11, .pull-12 { position: relative; }

.nowrap { white-space: nowrap; }

.nowrap > * { white-space: normal; }

.wrap { white-space: normal; }

.gr-centered { display: block !important; float: none !important; margin-left: auto !important; margin-right: auto !important; clear: both !important; }

@media screen and (max-width: 400px) { @-ms-viewport { width: device-width; } }

#gridle-settings { content: '{ "version" : "2.0.48", "states" : { "default":{ "name" : "default", "min-width" : null, "max-width" : null, "query" : null, "classes" : true, "context" : "12", "column-width" : null, "gutter-width" : "20px", "gutter-height" : "20px", "gutter-top" : "10px", "gutter-right" : "10px", "gutter-bottom" : "10px", "gutter-left" : "10px", "direction" : "ltr", "dir-attribute" : false, "name-multiplicator" : "1", "states-classes" : false, "classes-prefix" : null, "_" : true }} }'; }

/** @name 	Columns Grid columns available @styleguide 	Gridle / Columns @example 	html <style> .row.gridle-styleguide { margin-bottom: 20px; } [class*="gr-"].gridle-styleguide { background:#eee; padding:20px; } </style> <div class="gridle-styleguide .container"> <div class="gridle-styleguide row row-debug"> <div class="gridle-styleguide gr-1"> .gr-1 </div> </div> <div class="gridle-styleguide row row-debug"> <div class="gridle-styleguide gr-2"> .gr-2 </div> </div> <div class="gridle-styleguide row row-debug"> <div class="gridle-styleguide gr-3"> .gr-3 </div> </div> <div class="gridle-styleguide row row-debug"> <div class="gridle-styleguide gr-4"> .gr-4 </div> </div> <div class="gridle-styleguide row row-debug"> <div class="gridle-styleguide gr-5"> .gr-5 </div> </div> <div class="gridle-styleguide row row-debug"> <div class="gridle-styleguide gr-6"> .gr-6 </div> </div> <div class="gridle-styleguide row row-debug"> <div class="gridle-styleguide gr-7"> .gr-7 </div> </div> <div class="gridle-styleguide row row-debug"> <div class="gridle-styleguide gr-8"> .gr-8 </div> </div> <div class="gridle-styleguide row row-debug"> <div class="gridle-styleguide gr-9"> .gr-9 </div> </div> <div class="gridle-styleguide row row-debug"> <div class="gridle-styleguide gr-10"> .gr-10 </div> </div> <div class="gridle-styleguide row row-debug"> <div class="gridle-styleguide gr-11"> .gr-11 </div> </div> <div class="gridle-styleguide row row-debug"> <div class="gridle-styleguide gr-12"> .gr-12 </div> </div> </div> */
.gr-0 { width: 0%; }

.push-0 { left: 0%; right: auto; }

.pull-0 { right: 0%; left: auto; }

.prefix-0 { margin-left: 0%; }

.suffix-0 { margin-right: 0%; }

.gr-1 { width: 8.33333%; }

.push-1 { left: 8.33333%; right: auto; }

.pull-1 { right: 8.33333%; left: auto; }

.prefix-1 { margin-left: 8.33333%; }

.suffix-1 { margin-right: 8.33333%; }

.gr-2 { width: 16.66667%; }

.push-2 { left: 16.66667%; right: auto; }

.pull-2 { right: 16.66667%; left: auto; }

.prefix-2 { margin-left: 16.66667%; }

.suffix-2 { margin-right: 16.66667%; }

.gr-3 { width: 25%; }

.push-3 { left: 25%; right: auto; }

.pull-3 { right: 25%; left: auto; }

.prefix-3 { margin-left: 25%; }

.suffix-3 { margin-right: 25%; }

.gr-4 { width: 33.33333%; }

.push-4 { left: 33.33333%; right: auto; }

.pull-4 { right: 33.33333%; left: auto; }

.prefix-4 { margin-left: 33.33333%; }

.suffix-4 { margin-right: 33.33333%; }

.gr-5 { width: 41.66667%; }

.push-5 { left: 41.66667%; right: auto; }

.pull-5 { right: 41.66667%; left: auto; }

.prefix-5 { margin-left: 41.66667%; }

.suffix-5 { margin-right: 41.66667%; }

.gr-6 { width: 50%; }

.push-6 { left: 50%; right: auto; }

.pull-6 { right: 50%; left: auto; }

.prefix-6 { margin-left: 50%; }

.suffix-6 { margin-right: 50%; }

.gr-7 { width: 58.33333%; }

.push-7 { left: 58.33333%; right: auto; }

.pull-7 { right: 58.33333%; left: auto; }

.prefix-7 { margin-left: 58.33333%; }

.suffix-7 { margin-right: 58.33333%; }

.gr-8 { width: 66.66667%; }

.push-8 { left: 66.66667%; right: auto; }

.pull-8 { right: 66.66667%; left: auto; }

.prefix-8 { margin-left: 66.66667%; }

.suffix-8 { margin-right: 66.66667%; }

.gr-9 { width: 75%; }

.push-9 { left: 75%; right: auto; }

.pull-9 { right: 75%; left: auto; }

.prefix-9 { margin-left: 75%; }

.suffix-9 { margin-right: 75%; }

.gr-10 { width: 83.33333%; }

.push-10 { left: 83.33333%; right: auto; }

.pull-10 { right: 83.33333%; left: auto; }

.prefix-10 { margin-left: 83.33333%; }

.suffix-10 { margin-right: 83.33333%; }

.gr-11 { width: 91.66667%; }

.push-11 { left: 91.66667%; right: auto; }

.pull-11 { right: 91.66667%; left: auto; }

.prefix-11 { margin-left: 91.66667%; }

.suffix-11 { margin-right: 91.66667%; }

.gr-12 { width: 100%; }

.push-12 { left: 100%; right: auto; }

.pull-12 { right: 100%; left: auto; }

.prefix-12 { margin-left: 100%; }

.suffix-12 { margin-right: 100%; }

.float-left { float: left; }

.float-right { float: right; }

.clear { clear: both; }

.clear-left { clear: left; }

.clear-right { clear: right; }

.auto-height { height: inherit; min-height: inherit; max-height: inherit; }

.row { padding-left: 0 !important; padding-right: 0 !important; margin-left: -10px; margin-right: -10px; }

[class*="no-gutter"] > .row { margin-left: 0 !important; margin-right: 0 !important; }

.row-reverse { padding-left: 0 !important; padding-right: 0 !important; margin-left: -10px; margin-right: -10px; transform: rotateY(180deg); }

.row-reverse > [class*="gr-"] { transform: rotateY(-180deg); }

[class*="no-gutter"] > .row-reverse { margin-left: 0 !important; margin-right: 0 !important; }

.row-full { width: 100vw; margin-left: 50% !important; margin-right: 0 !important; -webkit-transform: translateX(-50%); -moz-transition: translateX(-50%); -ms-transform: translateX(-50%); -o-transform: translateX(-50%); transform: translateX(-50%); }

.col { padding-left: 0 !important; padding-right: 0 !important; margin-left: -10px; margin-right: -10px; }

.col-reverse { padding-left: 0 !important; padding-right: 0 !important; margin-left: -10px; margin-right: -10px; transform: rotateX(180deg); }

.col-reverse > [class*="gr-"] { transform: rotateX(-180deg); }

.gr-table { display: table-cell; float: none; vertical-align: top; }

.row-no-gutter { margin-left: 0; margin-right: 0; }

.row-no-gutter > [class*="gr-"] { padding-top: 0; padding-right: 0; padding-bottom: 0; padding-left: 0; }

.row-no-gutter-top { margin-left: 0; margin-right: 0; }

.row-no-gutter-top > [class*="gr-"] { padding-top: 0; }

.row-no-gutter-right { margin-left: 0; margin-right: 0; }

.row-no-gutter-right > [class*="gr-"] { padding-right: 0; }

.row-no-gutter-bottom { margin-left: 0; margin-right: 0; }

.row-no-gutter-bottom > [class*="gr-"] { padding-bottom: 0; }

.row-no-gutter-left { margin-left: 0; margin-right: 0; }

.row-no-gutter-left > [class*="gr-"] { padding-left: 0; }

.row-align-left { font-size: 0; word-spacing: 0; letter-spacing: 0; clear: both; text-align: left; }

.row-align-left > * { word-spacing: normal; letter-spacing: normal; float: none !important; vertical-align: top; font-size: 1rem; }

.row-align-center { font-size: 0; word-spacing: 0; letter-spacing: 0; clear: both; text-align: center; }

.row-align-center > * { word-spacing: normal; letter-spacing: normal; float: none !important; vertical-align: top; font-size: 1rem; }

.row-align-center > * { text-align: left; }

.row-align-right { font-size: 0; word-spacing: 0; letter-spacing: 0; clear: both; text-align: right; }

.row-align-right > * { word-spacing: normal; letter-spacing: normal; float: none !important; vertical-align: top; font-size: 1rem; }

.row-align-right > * { text-align: left; }

.row-align-middle { font-size: 0; word-spacing: 0; letter-spacing: 0; clear: both; vertical-align: middle; }

.row-align-middle > * { word-spacing: normal; letter-spacing: normal; float: none !important; vertical-align: middle; font-size: 1rem; }

.row-align-top { font-size: 0; word-spacing: 0; letter-spacing: 0; clear: both; vertical-align: top; }

.row-align-top > * { word-spacing: normal; letter-spacing: normal; float: none !important; vertical-align: top; font-size: 1rem; }

.row-align-bottom { font-size: 0; word-spacing: 0; letter-spacing: 0; clear: both; vertical-align: bottom; }

.row-align-bottom > * { word-spacing: normal; letter-spacing: normal; float: none !important; vertical-align: bottom; font-size: 1rem; }

.no-gutter { padding-top: 0; padding-right: 0; padding-bottom: 0; padding-left: 0; }

.no-gutter-left { padding-left: 0; }

.no-gutter-right { padding-right: 0; }

.no-gutter-top { padding-top: 0; }

.no-gutter-bottom { padding-bottom: 0; }

.row > .gutter, .gutter { padding-top: 10px; padding-right: 10px; padding-bottom: 10px; padding-left: 10px; }

.row > .gutter-left, .gutter-left { padding-left: 10px; }

.row > .gutter-right, .gutter-right { padding-right: 10px; }

.row > .gutter-top, .gutter-top { padding-top: 10px; }

.row > .gutter-bottom, .gutter-bottom { padding-bottom: 10px; }

.hide { display: none !important; }

.not-visible { visibility: hidden; }

.show { display: block !important; }

.show-inline { display: inline-block !important; }

.visible { visibility: visible; }

.row-debug { position: relative; z-index: 99999; overflow: hidden; }

.row-debug:before { pointer-events: none; content: ''; position: absolute; top: 0; left: 0; width: 100%; height: 99999px; background: linear-gradient(to right, transparent 50%, rgba(0, 0, 0, 0.02) 50%); background-size: 16.66667% 100%; z-index: 99999; }

body { direction: ltr; }

[class*="gr-"] > [class^="row"], [class*="gr-"] > [class^="col"] { margin-left: -10px; margin-right: -10px; }

.container { padding: 0 10px; }

html, body, div, span, applet, object, iframe, h1, h2, h3, h4, h5, h6, p, blockquote, pre, a, abbr, acronym, address, big, cite, code, del, dfn, em, img, ins, kbd, q, s, samp, small, strike, strong, sub, sup, tt, var, b, u, i, center, dl, dt, dd, ol, ul, li, fieldset, form, label, legend, table, caption, tbody, tfoot, thead, tr, th, td, article, aside, canvas, details, embed, figure, figcaption, footer, header, hgroup, menu, nav, output, ruby, section, summary, time, mark, audio, video { margin: 0; padding: 0; border: 0; font-size: 100%; font: inherit; vertical-align: baseline; }

article, aside, details, figcaption, figure, footer, header, hgroup, menu, nav, section { display: block; }

body { line-height: 1; }

ol, ul { list-style: none; }

blockquote, q { quotes: none; }

blockquote:before, blockquote:after { content: ''; content: none; }

q:before, q:after { content: ''; content: none; }

table { border-collapse: collapse; border-spacing: 0; }

/** @styleguide 	Colors / Swatches @name 		default @color 		#848e91 @display 	color */
/** @styleguide 	Colors / Swatches @name 		default--light @color 		#acb3b5 @display 	color */
/** @styleguide 	Colors / Swatches @name 		default--dark @color 		#5f676a @display 	color */
/** @styleguide 	Colors / Swatches @name 		title @color 		#2b3438 @display 	color */
/** @styleguide 	Colors / Swatches @name 		text @color 		#848e91 @display 	color */
/** @styleguide 	Colors / Swatches @name 		link @color 		#f2bc2b @display 	color */
/** @styleguide 	Colors / Swatches @name 		primary @color 		#f2bc2b @display 	color */
/** @styleguide 	Colors / Swatches @name 		secondary @color 		#2b3438 @display 	color */
/** @styleguide 	Colors / Swatches @name 		success @color 		#5cb85c @display 	color */
/** @styleguide 	Colors / Swatches @name 		warning @color 		#f0ad4e @display 	color */
/** @styleguide 	Colors / Swatches @name 		error @color 		#d9534f @display 	color */
/** @styleguide 	Colors / Swatches @name 		info @color 		#2199e8 @display 	color */
/** @styleguide 	Colors / Swatches @name 		border @color 		#e5e9ea @display 	color */
.s-settings:after { content: '{"unit": "rem", "reset": true, "border-box": true, "sizes": {"smaller": 0.3, "small": 0.6, "default": 1, "medium": 1.4, "big": 2, "bigger": 3}, "typography": {"font-family": "default", "font-size": "14px", "font-sizes": null, "line-letters-count": 55, "font-format": {"eot": "embedded-opentype", "woff2": "woff2", "woff": "woff", "ttf": "truetype", "otf": "opentype", "svg": "svg", "svgz": "svgz"}}, "look-and-feel": {"border-radius": 0, "padding-vertical": "1em", "padding-horizontal": "0.8em", "disabled-opacity": 0.5}, "spaces": {"default": "1rem"}, "colors": {"default": {"color": "#848e91", "modifiers": {"light": "#acb3b5", "dark": "#5f676a"}}, "title": {"color": "#2b3438"}, "text": {"color": "default"}, "link": {"color": "primary"}, "primary": {"color": "#f2bc2b"}, "secondary": {"color": "#2b3438"}, "success": {"color": "#5cb85c"}, "warning": {"color": "#f0ad4e"}, "error": {"color": "#d9534f"}, "info": {"color": "#2199e8"}, "border": {"color": "#e5e9ea"}}, "modular-scale": {"base": "1rem", "ratio": 1.33}, "text-format": {"scope-class": "tf"}, "vertical-rhythme": {"enabled": true, "scope-class": "vr"}, "BEM": {"standelone-modifier": false, "element-separator": "__", "modifier-separator": "--"}, "fonts": {"default": {"font-family": ["Helvetica Neue", "Helvetica", "Verdana", "Arial", "sans-serif"], "font-weight": "normal", "cap-height": 0.65}, "quote": {"font-family": ["Palatino", "Times", "Georgia", "serif"], "font-weight": "normal", "cap-height": 0.65}, "code": {"font-family": ["Menlo", "Monaco", "Consolas", "Courier New", "monospace"], "font-weight": "normal", "cap-height": 0.65}}, "filters": {"drop-shadow": "drop-shadow(rgba(0, 0, 0, 0.2) 0 0 10px)"}, "transitions": {"fast": ["all", "0.1s", "ease-in-out", "0s"], "default": ["all", "0.2s", "ease-in-out", "0s"], "slow": ["all", "0.5s", "ease-in-out", "0s"]}}'; display: none; }

html { box-sizing: border-box; }

*, *:before, *:after { box-sizing: inherit; }

a { color: inherit; }

html { font-size: 14Px; color: #848e91; font-family: "Helvetica Neue", Helvetica, Verdana, Arial, sans-serif; font-weight: normal; }

body { color: #848e91; }

/** @name   			default @styleguide 		Fonts / Faces @display 		font @font-family 	Helvetica Neue, Helvetica, Verdana, Arial, sans-serif @font-style 		 @font-weight 	normal */
/** @name   			quote @styleguide 		Fonts / Faces @display 		font @font-family 	Palatino, Times, Georgia, serif @font-style 		 @font-weight 	normal */
/** @name   			code @styleguide 		Fonts / Faces @display 		font @font-family 	Menlo, Monaco, Consolas, Courier New, monospace @font-style 		 @font-weight 	normal */
/** @name 	```.fi-drop-shadow``` @styleguide  	Helpers / Filters @example 	html <div class="fi-drop-shadow"> I'm filtered with drop-shadow </div> */
.fi-drop-shadow { filter: drop-shadow(rgba(0, 0, 0, 0.2) 0 0 10px); }

/** @name 	```.tr-fast``` @styleguide  	Helpers / Transitions @example 	html <div class="tr-fast"> I'm transitionned with fast </div> */
.tr-fast { transition: all 0.1s ease-in-out 0s, outline-color 0s linear 0s; outline-color: black; }

/** @name 	```.tr-default``` @styleguide  	Helpers / Transitions @example 	html <div class="tr-default"> I'm transitionned with default </div> */
.tr-default { transition: all 0.2s ease-in-out 0s, outline-color 0s linear 0s; outline-color: black; }

/** @name 	```.tr-slow``` @styleguide  	Helpers / Transitions @example 	html <div class="tr-slow"> I'm transitionned with slow </div> */
.tr-slow { transition: all 0.5s ease-in-out 0s, outline-color 0s linear 0s; outline-color: black; }

/** @name 	```.f-default``` @styleguide  	Fonts / Classes @example 	html <div class="f-default"> I have the font "default" applied </div> */
.f-default { font-family: "Helvetica Neue", Helvetica, Verdana, Arial, sans-serif; font-weight: normal; }

/** @name 	```.f-quote``` @styleguide  	Fonts / Classes @example 	html <div class="f-quote"> I have the font "quote" applied </div> */
.f-quote { font-family: Palatino, Times, Georgia, serif; font-weight: normal; }

/** @name 	```.f-code``` @styleguide  	Fonts / Classes @example 	html <div class="f-code"> I have the font "code" applied </div> */
.f-code { font-family: Menlo, Monaco, Consolas, "Courier New", monospace; font-weight: normal; }

/** @name 	```.m-b-smaller``` @styleguide  	Layout / Margins @example 	html <div class="m-b-smaller" style="background:#f2bc2b; width:100px; height:5px"></div> <div style="background:#2b3438; width:100px; height:5px"></div> */
.m-b-smaller { margin-bottom: 0.28571rem; }

/** @name 	```.m-t-smaller``` @styleguide  	Layout / Margins @example 	html <div style="background:#f2bc2b; width:100px; height:5px"></div> <div class="m-t-smaller" style="background:#2b3438; width:100px; height:5px"></div> */
.m-t-smaller { margin-top: 0.28571rem; }

/** @name 	```.m-l-smaller``` @styleguide  	Layout / Margins @example 	html <div style="display:inline-block; background:#f2bc2b; width:50px; height:50px"></div> <div class="m-l-smaller" style="display:inline-block; background:#2b3438; width:50px; height:50px"></div> */
.m-l-smaller { margin-left: 0.28571rem; }

/** @name 	```.m-r-smaller``` @styleguide  	Layout / Margins @example 	html <div class="m-r-smaller" style="display:inline-block; background:#f2bc2b; width:50px; height:50px"></div> <div style="display:inline-block; background:#2b3438; width:50px; height:50px"></div> */
.m-r-smaller { margin-right: 0.28571rem; }

/** @name 	```.m-s-smaller``` @styleguide  	Layout / Margins @example 	html <div class="m-s-smaller" style="display:inline-block; background:#f2bc2b; width:50px; height:50px"></div> <div style="display:inline-block; background:#2b3438; width:50px; height:50px"></div> */
.m-s-smaller { margin-left: 0.28571rem; margin-right: 0.28571rem; }

/** @name 	```.p-smaller``` @styleguide  	Layout / Paddings @example 	html <div class="p-smaller" style="border:1px solid #f2bc2b; width:150px; height:150px;"> <div style="background:#2b3438; width:100%; height:100%"></div> </div> */
.p-smaller:not(p) { padding: 0.28571rem; }

/** @name 	```.p-b-smaller``` @styleguide  	Layout / Paddings @example 	html <div class="p-b-smaller" style="border:1px solid #f2bc2b; width:150px; height:150px;"> <div style="background:#2b3438; width:100%; height:100%"></div> </div> */
.p-b-smaller { padding-bottom: 0.28571rem; }

/** @name 	```.p-t-smaller``` @styleguide  	Layout / Paddings @example 	html <div class="p-t-smaller" style="border:1px solid #f2bc2b; width:150px; height:150px;"> <div style="background:#2b3438; width:100%; height:100%"></div> </div> */
.p-t-smaller { padding-top: 0.28571rem; }

/** @name 	```.p-l-smaller``` @styleguide  	Layout / Paddings @example 	html <div class="p-l-smaller" style="border:1px solid #f2bc2b; width:150px; height:150px;"> <div style="background:#2b3438; width:100%; height:100%"></div> </div> */
.p-l-smaller { padding-left: 0.28571rem; }

/** @name 	```.p-r-smaller``` @styleguide  	Layout / Paddings @example 	html <div class="p-r-smaller" style="border:1px solid #f2bc2b; width:150px; height:150px;"> <div style="background:#2b3438; width:100%; height:100%"></div> </div> */
.p-r-smaller { padding-right: 0.28571rem; }

/** @name 	```.p-s-smaller``` @styleguide  	Layout / Paddings @example 	html <div class="p-s-smaller" style="border:1px solid #f2bc2b; width:150px; height:150px;"> <div style="background:#2b3438; width:100%; height:100%"></div> </div> */
.p-s-smaller { padding-left: 0.28571rem; padding-right: 0.28571rem; }

/** @name 	```.m-b-small``` @styleguide  	Layout / Margins @example 	html <div class="m-b-small" style="background:#f2bc2b; width:100px; height:5px"></div> <div style="background:#2b3438; width:100px; height:5px"></div> */
.m-b-small { margin-bottom: 0.57143rem; }

/** @name 	```.m-t-small``` @styleguide  	Layout / Margins @example 	html <div style="background:#f2bc2b; width:100px; height:5px"></div> <div class="m-t-small" style="background:#2b3438; width:100px; height:5px"></div> */
.m-t-small { margin-top: 0.57143rem; }

/** @name 	```.m-l-small``` @styleguide  	Layout / Margins @example 	html <div style="display:inline-block; background:#f2bc2b; width:50px; height:50px"></div> <div class="m-l-small" style="display:inline-block; background:#2b3438; width:50px; height:50px"></div> */
.m-l-small { margin-left: 0.57143rem; }

/** @name 	```.m-r-small``` @styleguide  	Layout / Margins @example 	html <div class="m-r-small" style="display:inline-block; background:#f2bc2b; width:50px; height:50px"></div> <div style="display:inline-block; background:#2b3438; width:50px; height:50px"></div> */
.m-r-small { margin-right: 0.57143rem; }

/** @name 	```.m-s-small``` @styleguide  	Layout / Margins @example 	html <div class="m-s-small" style="display:inline-block; background:#f2bc2b; width:50px; height:50px"></div> <div style="display:inline-block; background:#2b3438; width:50px; height:50px"></div> */
.m-s-small { margin-left: 0.57143rem; margin-right: 0.57143rem; }

/** @name 	```.p-small``` @styleguide  	Layout / Paddings @example 	html <div class="p-small" style="border:1px solid #f2bc2b; width:150px; height:150px;"> <div style="background:#2b3438; width:100%; height:100%"></div> </div> */
.p-small:not(p) { padding: 0.57143rem; }

/** @name 	```.p-b-small``` @styleguide  	Layout / Paddings @example 	html <div class="p-b-small" style="border:1px solid #f2bc2b; width:150px; height:150px;"> <div style="background:#2b3438; width:100%; height:100%"></div> </div> */
.p-b-small { padding-bottom: 0.57143rem; }

/** @name 	```.p-t-small``` @styleguide  	Layout / Paddings @example 	html <div class="p-t-small" style="border:1px solid #f2bc2b; width:150px; height:150px;"> <div style="background:#2b3438; width:100%; height:100%"></div> </div> */
.p-t-small { padding-top: 0.57143rem; }

/** @name 	```.p-l-small``` @styleguide  	Layout / Paddings @example 	html <div class="p-l-small" style="border:1px solid #f2bc2b; width:150px; height:150px;"> <div style="background:#2b3438; width:100%; height:100%"></div> </div> */
.p-l-small { padding-left: 0.57143rem; }

/** @name 	```.p-r-small``` @styleguide  	Layout / Paddings @example 	html <div class="p-r-small" style="border:1px solid #f2bc2b; width:150px; height:150px;"> <div style="background:#2b3438; width:100%; height:100%"></div> </div> */
.p-r-small { padding-right: 0.57143rem; }

/** @name 	```.p-s-small``` @styleguide  	Layout / Paddings @example 	html <div class="p-s-small" style="border:1px solid #f2bc2b; width:150px; height:150px;"> <div style="background:#2b3438; width:100%; height:100%"></div> </div> */
.p-s-small { padding-left: 0.57143rem; padding-right: 0.57143rem; }

/** @name 	```.m-b``` @styleguide  	Layout / Margins @example 	html <div class="m-b" style="background:#f2bc2b; width:100px; height:5px"></div> <div style="background:#2b3438; width:100px; height:5px"></div> */
.m-b { margin-bottom: 1rem; }

/** @name 	```.m-t``` @styleguide  	Layout / Margins @example 	html <div style="background:#f2bc2b; width:100px; height:5px"></div> <div class="m-t" style="background:#2b3438; width:100px; height:5px"></div> */
.m-t { margin-top: 1rem; }

/** @name 	```.m-l``` @styleguide  	Layout / Margins @example 	html <div style="display:inline-block; background:#f2bc2b; width:50px; height:50px"></div> <div class="m-l" style="display:inline-block; background:#2b3438; width:50px; height:50px"></div> */
.m-l { margin-left: 1rem; }

/** @name 	```.m-r``` @styleguide  	Layout / Margins @example 	html <div class="m-r" style="display:inline-block; background:#f2bc2b; width:50px; height:50px"></div> <div style="display:inline-block; background:#2b3438; width:50px; height:50px"></div> */
.m-r { margin-right: 1rem; }

/** @name 	```.m-s``` @styleguide  	Layout / Margins @example 	html <div class="m-s" style="display:inline-block; background:#f2bc2b; width:50px; height:50px"></div> <div style="display:inline-block; background:#2b3438; width:50px; height:50px"></div> */
.m-s { margin-left: 1rem; margin-right: 1rem; }

/** @name 	```.p``` @styleguide  	Layout / Paddings @example 	html <div class="p" style="border:1px solid #f2bc2b; width:150px; height:150px;"> <div style="background:#2b3438; width:100%; height:100%"></div> </div> */
.p:not(p) { padding: 1rem; }

/** @name 	```.p-b``` @styleguide  	Layout / Paddings @example 	html <div class="p-b" style="border:1px solid #f2bc2b; width:150px; height:150px;"> <div style="background:#2b3438; width:100%; height:100%"></div> </div> */
.p-b { padding-bottom: 1rem; }

/** @name 	```.p-t``` @styleguide  	Layout / Paddings @example 	html <div class="p-t" style="border:1px solid #f2bc2b; width:150px; height:150px;"> <div style="background:#2b3438; width:100%; height:100%"></div> </div> */
.p-t { padding-top: 1rem; }

/** @name 	```.p-l``` @styleguide  	Layout / Paddings @example 	html <div class="p-l" style="border:1px solid #f2bc2b; width:150px; height:150px;"> <div style="background:#2b3438; width:100%; height:100%"></div> </div> */
.p-l { padding-left: 1rem; }

/** @name 	```.p-r``` @styleguide  	Layout / Paddings @example 	html <div class="p-r" style="border:1px solid #f2bc2b; width:150px; height:150px;"> <div style="background:#2b3438; width:100%; height:100%"></div> </div> */
.p-r { padding-right: 1rem; }

/** @name 	```.p-s``` @styleguide  	Layout / Paddings @example 	html <div class="p-s" style="border:1px solid #f2bc2b; width:150px; height:150px;"> <div style="background:#2b3438; width:100%; height:100%"></div> </div> */
.p-s { padding-left: 1rem; padding-right: 1rem; }

/** @name 	```.m-b-medium``` @styleguide  	Layout / Margins @example 	html <div class="m-b-medium" style="background:#f2bc2b; width:100px; height:5px"></div> <div style="background:#2b3438; width:100px; height:5px"></div> */
.m-b-medium { margin-bottom: 1.42857rem; }

/** @name 	```.m-t-medium``` @styleguide  	Layout / Margins @example 	html <div style="background:#f2bc2b; width:100px; height:5px"></div> <div class="m-t-medium" style="background:#2b3438; width:100px; height:5px"></div> */
.m-t-medium { margin-top: 1.42857rem; }

/** @name 	```.m-l-medium``` @styleguide  	Layout / Margins @example 	html <div style="display:inline-block; background:#f2bc2b; width:50px; height:50px"></div> <div class="m-l-medium" style="display:inline-block; background:#2b3438; width:50px; height:50px"></div> */
.m-l-medium { margin-left: 1.42857rem; }

/** @name 	```.m-r-medium``` @styleguide  	Layout / Margins @example 	html <div class="m-r-medium" style="display:inline-block; background:#f2bc2b; width:50px; height:50px"></div> <div style="display:inline-block; background:#2b3438; width:50px; height:50px"></div> */
.m-r-medium { margin-right: 1.42857rem; }

/** @name 	```.m-s-medium``` @styleguide  	Layout / Margins @example 	html <div class="m-s-medium" style="display:inline-block; background:#f2bc2b; width:50px; height:50px"></div> <div style="display:inline-block; background:#2b3438; width:50px; height:50px"></div> */
.m-s-medium { margin-left: 1.42857rem; margin-right: 1.42857rem; }

/** @name 	```.p-medium``` @styleguide  	Layout / Paddings @example 	html <div class="p-medium" style="border:1px solid #f2bc2b; width:150px; height:150px;"> <div style="background:#2b3438; width:100%; height:100%"></div> </div> */
.p-medium:not(p) { padding: 1.42857rem; }

/** @name 	```.p-b-medium``` @styleguide  	Layout / Paddings @example 	html <div class="p-b-medium" style="border:1px solid #f2bc2b; width:150px; height:150px;"> <div style="background:#2b3438; width:100%; height:100%"></div> </div> */
.p-b-medium { padding-bottom: 1.42857rem; }

/** @name 	```.p-t-medium``` @styleguide  	Layout / Paddings @example 	html <div class="p-t-medium" style="border:1px solid #f2bc2b; width:150px; height:150px;"> <div style="background:#2b3438; width:100%; height:100%"></div> </div> */
.p-t-medium { padding-top: 1.42857rem; }

/** @name 	```.p-l-medium``` @styleguide  	Layout / Paddings @example 	html <div class="p-l-medium" style="border:1px solid #f2bc2b; width:150px; height:150px;"> <div style="background:#2b3438; width:100%; height:100%"></div> </div> */
.p-l-medium { padding-left: 1.42857rem; }

/** @name 	```.p-r-medium``` @styleguide  	Layout / Paddings @example 	html <div class="p-r-medium" style="border:1px solid #f2bc2b; width:150px; height:150px;"> <div style="background:#2b3438; width:100%; height:100%"></div> </div> */
.p-r-medium { padding-right: 1.42857rem; }

/** @name 	```.p-s-medium``` @styleguide  	Layout / Paddings @example 	html <div class="p-s-medium" style="border:1px solid #f2bc2b; width:150px; height:150px;"> <div style="background:#2b3438; width:100%; height:100%"></div> </div> */
.p-s-medium { padding-left: 1.42857rem; padding-right: 1.42857rem; }

/** @name 	```.m-b-big``` @styleguide  	Layout / Margins @example 	html <div class="m-b-big" style="background:#f2bc2b; width:100px; height:5px"></div> <div style="background:#2b3438; width:100px; height:5px"></div> */
.m-b-big { margin-bottom: 2rem; }

/** @name 	```.m-t-big``` @styleguide  	Layout / Margins @example 	html <div style="background:#f2bc2b; width:100px; height:5px"></div> <div class="m-t-big" style="background:#2b3438; width:100px; height:5px"></div> */
.m-t-big { margin-top: 2rem; }

/** @name 	```.m-l-big``` @styleguide  	Layout / Margins @example 	html <div style="display:inline-block; background:#f2bc2b; width:50px; height:50px"></div> <div class="m-l-big" style="display:inline-block; background:#2b3438; width:50px; height:50px"></div> */
.m-l-big { margin-left: 2rem; }

/** @name 	```.m-r-big``` @styleguide  	Layout / Margins @example 	html <div class="m-r-big" style="display:inline-block; background:#f2bc2b; width:50px; height:50px"></div> <div style="display:inline-block; background:#2b3438; width:50px; height:50px"></div> */
.m-r-big { margin-right: 2rem; }

/** @name 	```.m-s-big``` @styleguide  	Layout / Margins @example 	html <div class="m-s-big" style="display:inline-block; background:#f2bc2b; width:50px; height:50px"></div> <div style="display:inline-block; background:#2b3438; width:50px; height:50px"></div> */
.m-s-big { margin-left: 2rem; margin-right: 2rem; }

/** @name 	```.p-big``` @styleguide  	Layout / Paddings @example 	html <div class="p-big" style="border:1px solid #f2bc2b; width:150px; height:150px;"> <div style="background:#2b3438; width:100%; height:100%"></div> </div> */
.p-big:not(p) { padding: 2rem; }

/** @name 	```.p-b-big``` @styleguide  	Layout / Paddings @example 	html <div class="p-b-big" style="border:1px solid #f2bc2b; width:150px; height:150px;"> <div style="background:#2b3438; width:100%; height:100%"></div> </div> */
.p-b-big { padding-bottom: 2rem; }

/** @name 	```.p-t-big``` @styleguide  	Layout / Paddings @example 	html <div class="p-t-big" style="border:1px solid #f2bc2b; width:150px; height:150px;"> <div style="background:#2b3438; width:100%; height:100%"></div> </div> */
.p-t-big { padding-top: 2rem; }

/** @name 	```.p-l-big``` @styleguide  	Layout / Paddings @example 	html <div class="p-l-big" style="border:1px solid #f2bc2b; width:150px; height:150px;"> <div style="background:#2b3438; width:100%; height:100%"></div> </div> */
.p-l-big { padding-left: 2rem; }

/** @name 	```.p-r-big``` @styleguide  	Layout / Paddings @example 	html <div class="p-r-big" style="border:1px solid #f2bc2b; width:150px; height:150px;"> <div style="background:#2b3438; width:100%; height:100%"></div> </div> */
.p-r-big { padding-right: 2rem; }

/** @name 	```.p-s-big``` @styleguide  	Layout / Paddings @example 	html <div class="p-s-big" style="border:1px solid #f2bc2b; width:150px; height:150px;"> <div style="background:#2b3438; width:100%; height:100%"></div> </div> */
.p-s-big { padding-left: 2rem; padding-right: 2rem; }

/** @name 	```.m-b-bigger``` @styleguide  	Layout / Margins @example 	html <div class="m-b-bigger" style="background:#f2bc2b; width:100px; height:5px"></div> <div style="background:#2b3438; width:100px; height:5px"></div> */
.m-b-bigger { margin-bottom: 3rem; }

/** @name 	```.m-t-bigger``` @styleguide  	Layout / Margins @example 	html <div style="background:#f2bc2b; width:100px; height:5px"></div> <div class="m-t-bigger" style="background:#2b3438; width:100px; height:5px"></div> */
.m-t-bigger { margin-top: 3rem; }

/** @name 	```.m-l-bigger``` @styleguide  	Layout / Margins @example 	html <div style="display:inline-block; background:#f2bc2b; width:50px; height:50px"></div> <div class="m-l-bigger" style="display:inline-block; background:#2b3438; width:50px; height:50px"></div> */
.m-l-bigger { margin-left: 3rem; }

/** @name 	```.m-r-bigger``` @styleguide  	Layout / Margins @example 	html <div class="m-r-bigger" style="display:inline-block; background:#f2bc2b; width:50px; height:50px"></div> <div style="display:inline-block; background:#2b3438; width:50px; height:50px"></div> */
.m-r-bigger { margin-right: 3rem; }

/** @name 	```.m-s-bigger``` @styleguide  	Layout / Margins @example 	html <div class="m-s-bigger" style="display:inline-block; background:#f2bc2b; width:50px; height:50px"></div> <div style="display:inline-block; background:#2b3438; width:50px; height:50px"></div> */
.m-s-bigger { margin-left: 3rem; margin-right: 3rem; }

/** @name 	```.p-bigger``` @styleguide  	Layout / Paddings @example 	html <div class="p-bigger" style="border:1px solid #f2bc2b; width:150px; height:150px;"> <div style="background:#2b3438; width:100%; height:100%"></div> </div> */
.p-bigger:not(p) { padding: 3rem; }

/** @name 	```.p-b-bigger``` @styleguide  	Layout / Paddings @example 	html <div class="p-b-bigger" style="border:1px solid #f2bc2b; width:150px; height:150px;"> <div style="background:#2b3438; width:100%; height:100%"></div> </div> */
.p-b-bigger { padding-bottom: 3rem; }

/** @name 	```.p-t-bigger``` @styleguide  	Layout / Paddings @example 	html <div class="p-t-bigger" style="border:1px solid #f2bc2b; width:150px; height:150px;"> <div style="background:#2b3438; width:100%; height:100%"></div> </div> */
.p-t-bigger { padding-top: 3rem; }

/** @name 	```.p-l-bigger``` @styleguide  	Layout / Paddings @example 	html <div class="p-l-bigger" style="border:1px solid #f2bc2b; width:150px; height:150px;"> <div style="background:#2b3438; width:100%; height:100%"></div> </div> */
.p-l-bigger { padding-left: 3rem; }

/** @name 	```.p-r-bigger``` @styleguide  	Layout / Paddings @example 	html <div class="p-r-bigger" style="border:1px solid #f2bc2b; width:150px; height:150px;"> <div style="background:#2b3438; width:100%; height:100%"></div> </div> */
.p-r-bigger { padding-right: 3rem; }

/** @name 	```.p-s-bigger``` @styleguide  	Layout / Paddings @example 	html <div class="p-s-bigger" style="border:1px solid #f2bc2b; width:150px; height:150px;"> <div style="background:#2b3438; width:100%; height:100%"></div> </div> */
.p-s-bigger { padding-left: 3rem; padding-right: 3rem; }

/** @name 	```.s-smaller``` @styleguide  	Layout / Sizes @example 	html <div class="s-smaller"> I have the size "smaller" defined </div> */
.s-smaller { font-size: 0.3rem; }

/** @name 	```.s-smaller-rel``` @styleguide  	Layout / Sizes @example 	html <div class="s-smaller-rel"> I have the size "smaller" defined relative to my parent </div> */
.s-smaller-rel { font-size: 0.3em; }

/** @name 	```.s-small``` @styleguide  	Layout / Sizes @example 	html <div class="s-small"> I have the size "small" defined </div> */
.s-small { font-size: 0.6rem; }

/** @name 	```.s-small-rel``` @styleguide  	Layout / Sizes @example 	html <div class="s-small-rel"> I have the size "small" defined relative to my parent </div> */
.s-small-rel { font-size: 0.6em; }

/** @name 	```.s-default``` @styleguide  	Layout / Sizes @example 	html <div class="s-default"> I have the size "default" defined </div> */
.s-default { font-size: 1rem; }

/** @name 	```.s-default-rel``` @styleguide  	Layout / Sizes @example 	html <div class="s-default-rel"> I have the size "default" defined relative to my parent </div> */
.s-default-rel { font-size: 1em; }

/** @name 	```.s-medium``` @styleguide  	Layout / Sizes @example 	html <div class="s-medium"> I have the size "medium" defined </div> */
.s-medium { font-size: 1.4rem; }

/** @name 	```.s-medium-rel``` @styleguide  	Layout / Sizes @example 	html <div class="s-medium-rel"> I have the size "medium" defined relative to my parent </div> */
.s-medium-rel { font-size: 1.4em; }

/** @name 	```.s-big``` @styleguide  	Layout / Sizes @example 	html <div class="s-big"> I have the size "big" defined </div> */
.s-big { font-size: 2rem; }

/** @name 	```.s-big-rel``` @styleguide  	Layout / Sizes @example 	html <div class="s-big-rel"> I have the size "big" defined relative to my parent </div> */
.s-big-rel { font-size: 2em; }

/** @name 	```.s-bigger``` @styleguide  	Layout / Sizes @example 	html <div class="s-bigger"> I have the size "bigger" defined </div> */
.s-bigger { font-size: 3rem; }

/** @name 	```.s-bigger-rel``` @styleguide  	Layout / Sizes @example 	html <div class="s-bigger-rel"> I have the size "bigger" defined relative to my parent </div> */
.s-bigger-rel { font-size: 3em; }

/** @name 	```.no-p-t``` Reset **top** padding @styleguide  	Layout / No padding @example 	html <div class="no-p-t" style="display:inline-block; background:#f2bc2b; width:50px; height:50px;"></div> */
.no-p-t { padding-top: 0 !important; }

/** @name 	```.no-p-r``` Reset **right** padding @styleguide  	Layout / No padding @example 	html <div class="no-p-r" style="display:inline-block; background:#f2bc2b; width:50px; height:50px;"></div> */
.no-p-r { padding-right: 0 !important; }

/** @name 	```.no-p-b``` Reset **bottom** padding @styleguide  	Layout / No padding @example 	html <div class="no-p-b" style="display:inline-block; background:#f2bc2b; width:50px; height:50px;"></div> */
.no-p-b { padding-bottom: 0 !important; }

/** @name 	```.no-p-l``` Reset **left** padding @styleguide  	Layout / No padding @example 	html <div class="no-p-l" style="display:inline-block; background:#f2bc2b; width:50px; height:50px;"></div> */
.no-p-l { padding-left: 0 !important; }

/** @name 	```.no-p-s``` Reset **left** and **right** paddings @styleguide  	Layout / No padding @example 	html <div class="no-p-s" style="display:inline-block; background:#f2bc2b; width:50px; height:50px;"></div> */
.no-p-s { padding-left: 0 !important; padding-right: 0 !important; }

/** @name 	```.no-m-t``` Reset **top** padding @styleguide  	Layout / No margin @example 	html <div class="no-m-t" style="display:inline-block; background:#f2bc2b; width:50px; height:50px;"></div> */
.no-m-t { margin-top: 0 !important; }

/** @name 	```.no-m-r``` Reset **right** padding @styleguide  	Layout / No margin @example 	html <div class="no-m-r" style="display:inline-block; background:#f2bc2b; width:50px; height:50px;"></div> */
.no-m-r { margin-right: 0 !important; }

/** @name 	```.no-m-b``` Reset **bottom** padding @styleguide  	Layout / No margin @example 	html <div class="no-m-b" style="display:inline-block; background:#f2bc2b; width:50px; height:50px;"></div> */
.no-m-b { margin-bottom: 0 !important; }

/** @name 	```.no-m-l``` Reset **left** padding @styleguide  	Layout / No margin @example 	html <div class="no-m-l" style="display:inline-block; background:#f2bc2b; width:50px; height:50px;"></div> */
.no-m-l { margin-left: 0 !important; }

/** @name 	```.no-m-s``` Reset **left** and **right** margins @styleguide  	Layout / No padding @example 	html <div class="no-m-s" style="display:inline-block; background:#f2bc2b; width:50px; height:50px;"></div> */
.no-m-s { margin-left: 0 !important; margin-right: 0 !important; }

/** @name 	```.c-default``` Specify the color to **default** @styleguide  	Colors / Classes @example 	html <div class="c-default"> I'm in "default" color </div> */
.c-default { color: #848e91; }

/** @name 	```.bkg-default``` Specify the background color to **default** @styleguide  	Colors / Classes @example 	html <div class="bkg-default p" style="color:white"> My background color is "default" </div> */
.bkg-default { background-color: #848e91; }

/** @name 	```.c-default--light``` Specify the color to **default--light** @styleguide  	Colors / Classes @example 	html <div class="c-default--light"> I'm in "default--light" color </div> */
.c-default--light { color: #acb3b5; }

/** @name 	```.bkg-default--light``` Specify the background color to **default--light** @styleguide  	Colors / Classes @example 	html <div class="bkg-default--light p" style="color:white"> My background color is "default--light" </div> */
.bkg-default--light { background-color: #acb3b5; }

/** @name 	```.c-default--dark``` Specify the color to **default--dark** @styleguide  	Colors / Classes @example 	html <div class="c-default--dark"> I'm in "default--dark" color </div> */
.c-default--dark { color: #5f676a; }

/** @name 	```.bkg-default--dark``` Specify the background color to **default--dark** @styleguide  	Colors / Classes @example 	html <div class="bkg-default--dark p" style="color:white"> My background color is "default--dark" </div> */
.bkg-default--dark { background-color: #5f676a; }

/** @name 	```.c-title``` Specify the color to **title** @styleguide  	Colors / Classes @example 	html <div class="c-title"> I'm in "title" color </div> */
.c-title { color: #2b3438; }

/** @name 	```.bkg-title``` Specify the background color to **title** @styleguide  	Colors / Classes @example 	html <div class="bkg-title p" style="color:white"> My background color is "title" </div> */
.bkg-title { background-color: #2b3438; }

/** @name 	```.c-text``` Specify the color to **text** @styleguide  	Colors / Classes @example 	html <div class="c-text"> I'm in "text" color </div> */
.c-text { color: #848e91; }

/** @name 	```.bkg-text``` Specify the background color to **text** @styleguide  	Colors / Classes @example 	html <div class="bkg-text p" style="color:white"> My background color is "text" </div> */
.bkg-text { background-color: #848e91; }

/** @name 	```.c-link``` Specify the color to **link** @styleguide  	Colors / Classes @example 	html <div class="c-link"> I'm in "link" color </div> */
.c-link { color: #f2bc2b; }

/** @name 	```.bkg-link``` Specify the background color to **link** @styleguide  	Colors / Classes @example 	html <div class="bkg-link p" style="color:white"> My background color is "link" </div> */
.bkg-link { background-color: #f2bc2b; }

/** @name 	```.c-primary``` Specify the color to **primary** @styleguide  	Colors / Classes @example 	html <div class="c-primary"> I'm in "primary" color </div> */
.c-primary { color: #f2bc2b; }

/** @name 	```.bkg-primary``` Specify the background color to **primary** @styleguide  	Colors / Classes @example 	html <div class="bkg-primary p" style="color:white"> My background color is "primary" </div> */
.bkg-primary { background-color: #f2bc2b; }

/** @name 	```.c-secondary``` Specify the color to **secondary** @styleguide  	Colors / Classes @example 	html <div class="c-secondary"> I'm in "secondary" color </div> */
.c-secondary { color: #2b3438; }

/** @name 	```.bkg-secondary``` Specify the background color to **secondary** @styleguide  	Colors / Classes @example 	html <div class="bkg-secondary p" style="color:white"> My background color is "secondary" </div> */
.bkg-secondary { background-color: #2b3438; }

/** @name 	```.c-success``` Specify the color to **success** @styleguide  	Colors / Classes @example 	html <div class="c-success"> I'm in "success" color </div> */
.c-success { color: #5cb85c; }

/** @name 	```.bkg-success``` Specify the background color to **success** @styleguide  	Colors / Classes @example 	html <div class="bkg-success p" style="color:white"> My background color is "success" </div> */
.bkg-success { background-color: #5cb85c; }

/** @name 	```.c-warning``` Specify the color to **warning** @styleguide  	Colors / Classes @example 	html <div class="c-warning"> I'm in "warning" color </div> */
.c-warning { color: #f0ad4e; }

/** @name 	```.bkg-warning``` Specify the background color to **warning** @styleguide  	Colors / Classes @example 	html <div class="bkg-warning p" style="color:white"> My background color is "warning" </div> */
.bkg-warning { background-color: #f0ad4e; }

/** @name 	```.c-error``` Specify the color to **error** @styleguide  	Colors / Classes @example 	html <div class="c-error"> I'm in "error" color </div> */
.c-error { color: #d9534f; }

/** @name 	```.bkg-error``` Specify the background color to **error** @styleguide  	Colors / Classes @example 	html <div class="bkg-error p" style="color:white"> My background color is "error" </div> */
.bkg-error { background-color: #d9534f; }

/** @name 	```.c-info``` Specify the color to **info** @styleguide  	Colors / Classes @example 	html <div class="c-info"> I'm in "info" color </div> */
.c-info { color: #2199e8; }

/** @name 	```.bkg-info``` Specify the background color to **info** @styleguide  	Colors / Classes @example 	html <div class="bkg-info p" style="color:white"> My background color is "info" </div> */
.bkg-info { background-color: #2199e8; }

/** @name 	```.c-border``` Specify the color to **border** @styleguide  	Colors / Classes @example 	html <div class="c-border"> I'm in "border" color </div> */
.c-border { color: #e5e9ea; }

/** @name 	```.bkg-border``` Specify the background color to **border** @styleguide  	Colors / Classes @example 	html <div class="bkg-border p" style="color:white"> My background color is "border" </div> */
.bkg-border { background-color: #e5e9ea; }

/** @name 	h1 h1 title styling @styleguide 	Typography / Titles @example 	html <h1 class="h1">Hello World</h1> <div class="tf"> <h1>Hello World</h1> </div> */
.h1, .tf h1 { font-size: 3.5em; line-height: 1.1; }

.h1.vr, .documentation blockquote.h1, .vr > .h1, .documentation blockquote > .h1, .tf h1.vr, .vr > .tf h1, .documentation blockquote > .tf h1 { margin-bottom: 1rem; }

/** @name 	h2 h2 title styling @styleguide 	Typography / Titles @example 	html <h2 class="h2">Hello World</h2> <div class="tf"> <h2>Hello World</h2> </div> */
.h2, .tf h2 { font-size: 3em; line-height: 1.1; }

.h2.vr, .documentation blockquote.h2, .vr > .h2, .documentation blockquote > .h2, .tf h2.vr, .vr > .tf h2, .documentation blockquote > .tf h2 { margin-bottom: 1rem; }

/** @name 	h3 h3 title styling @styleguide 	Typography / Titles @example 	html <h3 class="h3">Hello World</h3> <div class="tf"> <h3>Hello World</h3> </div> */
.h3, .tf h3 { font-size: 2.5em; line-height: 1.1; }

.h3.vr, .documentation blockquote.h3, .vr > .h3, .documentation blockquote > .h3, .tf h3.vr, .vr > .tf h3, .documentation blockquote > .tf h3 { margin-bottom: 1rem; }

/** @name 	h4 h4 title styling @styleguide 	Typography / Titles @example 	html <h4 class="h4">Hello World</h4> <div class="tf"> <h4>Hello World</h4> </div> */
.h4, .tf h4 { font-size: 2em; line-height: 1.1; }

.h4.vr, .documentation blockquote.h4, .vr > .h4, .documentation blockquote > .h4, .tf h4.vr, .vr > .tf h4, .documentation blockquote > .tf h4 { margin-bottom: 1rem; }

/** @name 	h5 h5 title styling @styleguide 	Typography / Titles @example 	html <h5 class="h5">Hello World</h5> <div class="tf"> <h5>Hello World</h5> </div> */
.h5, .tf h5 { font-size: 1.5em; line-height: 1.1; }

.h5.vr, .documentation blockquote.h5, .vr > .h5, .documentation blockquote > .h5, .tf h5.vr, .vr > .tf h5, .documentation blockquote > .tf h5 { margin-bottom: 1rem; }

/** @name 	h6 h6 title styling @styleguide 	Typography / Titles @example 	html <h6 class="h6">Hello World</h6> <div class="tf"> <h6>Hello World</h6> </div> */
.h6, .tf h6 { font-size: 1em; line-height: 1.1; }

.h6.vr, .documentation blockquote.h6, .vr > .h6, .documentation blockquote > .h6, .tf h6.vr, .vr > .tf h6, .documentation blockquote > .tf h6 { margin-bottom: 1rem; }

h1.vr, .vr > h1, .documentation blockquote > h1, h2.vr, .vr > h2, .documentation blockquote > h2, h3.vr, .vr > h3, .documentation blockquote > h3, h4.vr, .vr > h4, .documentation blockquote > h4, h5.vr, .vr > h5, .documentation blockquote > h5, h6.vr, .vr > h6, .documentation blockquote > h6, .h1.vr, .documentation blockquote.h1, .vr > .h1, .documentation blockquote > .h1, .h2.vr, .documentation blockquote.h2, .vr > .h2, .documentation blockquote > .h2, .h3.vr, .documentation blockquote.h3, .vr > .h3, .documentation blockquote > .h3, .h4.vr, .documentation blockquote.h4, .vr > .h4, .documentation blockquote > .h4, .h5.vr, .documentation blockquote.h5, .vr > .h5, .documentation blockquote > .h5, .h6.vr, .documentation blockquote.h6, .vr > .h6, .documentation blockquote > .h6 { margin-bottom: 1em; }

h1.vr:last-child, .vr > h1:last-child, .documentation blockquote > h1:last-child, h2.vr:last-child, .vr > h2:last-child, .documentation blockquote > h2:last-child, h3.vr:last-child, .vr > h3:last-child, .documentation blockquote > h3:last-child, h4.vr:last-child, .vr > h4:last-child, .documentation blockquote > h4:last-child, h5.vr:last-child, .vr > h5:last-child, .documentation blockquote > h5:last-child, h6.vr:last-child, .vr > h6:last-child, .documentation blockquote > h6:last-child, .h1.vr:last-child, .documentation blockquote.h1:last-child, .vr > .h1:last-child, .documentation blockquote > .h1:last-child, .h2.vr:last-child, .documentation blockquote.h2:last-child, .vr > .h2:last-child, .documentation blockquote > .h2:last-child, .h3.vr:last-child, .documentation blockquote.h3:last-child, .vr > .h3:last-child, .documentation blockquote > .h3:last-child, .h4.vr:last-child, .documentation blockquote.h4:last-child, .vr > .h4:last-child, .documentation blockquote > .h4:last-child, .h5.vr:last-child, .documentation blockquote.h5:last-child, .vr > .h5:last-child, .documentation blockquote > .h5:last-child, .h6.vr:last-child, .documentation blockquote.h6:last-child, .vr > .h6:last-child, .documentation blockquote > .h6:last-child { margin-bottom: 0; }

.h1, .tf h1 { color: #2b3438; }

.h2, .tf h2 { color: #2b3438; }

.h3, .tf h3 { color: #2b3438; }

.h4, .tf h4 { color: #2b3438; }

.h5, .tf h5 { color: #2b3438; }

.h6, .tf h6 { color: #2b3438; }

/** @name 	Default Default paragraph styling @styleguide 	Typography / Paragraphs @example 	html <p class="p vr"> Duis gravida justo at urna interdum blandit. Sed venenatis, eros dictum gravida dictum, mauris sapien feugiat libero, at fermentum quam tellus dignissim nunc. Donec eu rutrum dui, in rhoncus lacus. </p> <div class="tf vr"> <p> Duis gravida justo at urna interdum blandit. Sed venenatis, eros dictum gravida dictum, mauris sapien feugiat libero, at fermentum quam tellus dignissim nunc. Donec eu rutrum dui, in rhoncus lacus. </p> </div> */
.p, .tf p { font-size: 1em; line-height: 1.4; }

.p.vr, .documentation blockquote.p, .vr > .p, .documentation blockquote > .p, .tf p.vr, .vr > .tf p, .documentation blockquote > .tf p { margin-bottom: 1rem; }

/** @name 	Lead Lead paragraph styling @styleguide 	Typography / Paragraphs @example 	html <p class="p p--lead vr"> Duis gravida justo at urna interdum blandit. Sed venenatis, eros dictum gravida dictum, mauris sapien feugiat libero, at fermentum quam tellus dignissim nunc. Donec eu rutrum dui, in rhoncus lacus. </p> <div class="tf vr"> <p class="lead"> Duis gravida justo at urna interdum blandit. Sed venenatis, eros dictum gravida dictum, mauris sapien feugiat libero, at fermentum quam tellus dignissim nunc. Donec eu rutrum dui, in rhoncus lacus. </p> </div> */
.p--lead, .tf p.lead { font-size: 1.3em; font-weight: lighter; }

p.vr, .vr > p, .documentation blockquote > p, .p.vr, .documentation blockquote.p, .vr > .p, .documentation blockquote > .p { margin-bottom: 1em; }

p.vr:last-child, .vr > p:last-child, .documentation blockquote > p:last-child, .p.vr:last-child, .documentation blockquote.p:last-child, .vr > .p:last-child, .documentation blockquote > .p:last-child { margin-bottom: 0; }

.link, .tf a { text-decoration: none; color: #f2bc2b; }

/** @name 		Marked text For highlighting a run of text due to its relevance in another context, use the ```mark``` tag. @styleguide 		Typography / Inline texts @example 		html This is a <span class="mark">marked text</span> <div class="tf"> This is another <mark>marked text</mark> </div> */
/** @name 		Deleted text For indicating blocks of text that have been deleted use the ```del``` tag. @styleguide 		Typography / Inline texts @example 		html This is a <span class="del">deleted text</span> <div class="tf"> This is another <del>deleted text</del> </div> */
/** @name 		Strikethrough text For indicating blocks of text that are no longer relevant use the ```s``` tag. @styleguide 		Typography / Inline texts @example 		html This is a <span class="s">striked through text</span> <div class="tf"> This is another <s>striked through text</s> </div> */
/** @name 		Inserted text For indicating additions to the document use the ```ins``` tag. @styleguide 		Typography / Inline texts @example 		html This is a <span class="ins">inserted text</span> <div class="tf"> This is another <ins>inserted text</ins> </div> */
/** @name 		Underlined text To underline text use the ```u``` tag. @styleguide 		Typography / Inline texts @example 		html This is a <span class="u">underlined text</span> <div class="tf"> This is another <u>underlined text</u> </div> */
/** @name 		Small text For de-emphasizing inline or blocks of text, use the ```small``` tag to set text at 85% the size of the parent. @styleguide 		Typography / Inline texts @example 		html This is a <span class="small">small text</span> <div class="tf"> This is another <small>small text</small> </div> */
/** @name 		Bold For emphasizing a snippet of text with a heavier font-weight. @styleguide 		Typography / Inline texts @example 		html This is a <span class="strong">strong text</span> <div class="tf"> This is another <strong>strong text</strong> </div> */
/** @name 		Italics For emphasizing a snippet of text with italics. @styleguide 		Typography / Inline texts @example 		html This is an <span class="em">italic text</span> <div class="tf"> This is another <em>italic text</em> </div> */
.mark, .tf mark { background-color: rgba(242, 188, 43, 0.1); }

.del, .tf del { text-decoration: line-through; }

.s, .tf s { text-decoration: line-through; }

.ins, .tf ins { text-decoration: underline; }

.u, .tf u { text-decoration: underline; }

.small, .tf small { font-size: .85em; }

.strong, .tf strong { font-weight: bold; }

.em, .tf em { font-style: italic; }

/** @name 	Description list A list of terms with their associated descriptions. @styleguide 		Typography / Lists @example 	html <div class="tf"> <dl> <dt>List item 1</dt> <dd>Mauris sit amet erat vitae mi pellentesque placerat. Vestibulum dapibus.</dd> <dt>List item 1</dt> <dd>Mauris sit amet erat vitae mi pellentesque placerat. Vestibulum dapibus.</dd> <dt>List item 1</dt> <dd>Mauris sit amet erat vitae mi pellentesque placerat. Vestibulum dapibus.</dd> </dl> </div> */
.dl, .tf dl { counter-reset: s-list; }

.dl.vr, .documentation blockquote.dl, .vr > .dl, .documentation blockquote > .dl, .tf dl.vr, .vr > .tf dl, .documentation blockquote > .tf dl { margin-bottom: 2em; }

.dt, .tf dl > dt { font-weight: bold; margin-bottom: .3em; }

.dd, .tf dl > dd { margin-bottom: .5em; }

/** @name 	Unordered list A list of items in which the order does not explicitly matter. @styleguide 		Typography / Lists @example 	html <div class="tf"> <ul> <li>List item 1</li> <li>List item 2</li> <li>List item 3</li> <li>List item 4</li> </ul> </div> */
.ul, .tf ul { counter-reset: s-list; }

.ul.vr, .documentation blockquote.ul, .vr > .ul, .documentation blockquote > .ul, .tf ul.vr, .vr > .tf ul, .documentation blockquote > .tf ul { margin-bottom: 2em; }

.ul > .li, .ul > li, .tf ul > li { padding-left: 1em; position: relative; margin-bottom: .3em; }

.ul > .li:before, .ul > li:before, .tf ul > li:before { content: counter(s-list, circle); counter-increment: s-list; }

.ul > .li:before, .ul > li:before, .tf ul > li:before { left: 0; color: #848e91 !important; }

.ul > .li:before, .ul > li:before, .tf ul > li:before { position: absolute; display: block; }

.ul > .li > ul, .ul > .li > ol, .ul > .li > dl, .ul > li > ul, .ul > li > ol, .ul > li > dl, .tf ul > li > ul, .tf ul > li > ol, .tf ul > li > dl { margin-left: 0; margin-bottom: 0; }

/** @name 	Ordered list A list of items in which the order does explicitly matter. @styleguide 		Typography / Lists @example 	html <div class="tf"> <ol> <li>List item 1</li> <li>List item 2</li> <li>List item 3</li> <li>List item 4</li> </ol> </div> */
.ol, .tf ol { counter-reset: s-list; }

.ol.vr, .documentation blockquote.ol, .vr > .ol, .documentation blockquote > .ol, .tf ol.vr, .vr > .tf ol, .documentation blockquote > .tf ol { margin-bottom: 2em; }

.ol > .li, .ol > li, .tf ol > li { padding-left: 1em; position: relative; margin-bottom: .3em; }

.ol > .li:before, .ol > li:before, .tf ol > li:before { content: counter(s-list, decimal); counter-increment: s-list; }

.ol > .li:before, .ol > li:before, .tf ol > li:before { left: 0; top: 0.4em; color: #848e91 !important; font-size: 0.6em !important; }

.ol > .li:before, .ol > li:before, .tf ol > li:before { position: absolute; display: block; }

.ol > .li > ul, .ol > .li > ol, .ol > .li > dl, .ol > li > ul, .ol > li > ol, .ol > li > dl, .tf ol > li > ul, .tf ol > li > ol, .tf ol > li > dl { margin-left: 0; margin-bottom: 0; }

dl.vr, .vr > dl, .documentation blockquote > dl, ul.vr, .vr > ul, .documentation blockquote > ul, ol.vr, .vr > ol, .documentation blockquote > ol, .dl.vr, .documentation blockquote.dl, .vr > .dl, .documentation blockquote > .dl, .ul.vr, .documentation blockquote.ul, .vr > .ul, .documentation blockquote > .ul, .ol.vr, .documentation blockquote.ol, .vr > .ol, .documentation blockquote > .ol { margin-bottom: 1em; }

dl.vr:last-child, .vr > dl:last-child, .documentation blockquote > dl:last-child, ul.vr:last-child, .vr > ul:last-child, .documentation blockquote > ul:last-child, ol.vr:last-child, .vr > ol:last-child, .documentation blockquote > ol:last-child, .dl.vr:last-child, .documentation blockquote.dl:last-child, .vr > .dl:last-child, .documentation blockquote > .dl:last-child, .ul.vr:last-child, .documentation blockquote.ul:last-child, .vr > .ul:last-child, .documentation blockquote > .ul:last-child, .ol.vr:last-child, .documentation blockquote.ol:last-child, .vr > .ol:last-child, .documentation blockquote > .ol:last-child { margin-bottom: 0; }

dl.vr dl, dl.vr ul, dl.vr ol, dl.vr .dl, dl.vr .ul, dl.vr .ol, .vr > dl dl, .documentation blockquote > dl dl, .vr > dl ul, .documentation blockquote > dl ul, .vr > dl ol, .documentation blockquote > dl ol, .vr > dl .dl, .documentation blockquote > dl .dl, .vr > dl .ul, .documentation blockquote > dl .ul, .vr > dl .ol, .documentation blockquote > dl .ol, ul.vr dl, ul.vr ul, ul.vr ol, ul.vr .dl, ul.vr .ul, ul.vr .ol, .vr > ul dl, .documentation blockquote > ul dl, .vr > ul ul, .documentation blockquote > ul ul, .vr > ul ol, .documentation blockquote > ul ol, .vr > ul .dl, .documentation blockquote > ul .dl, .vr > ul .ul, .documentation blockquote > ul .ul, .vr > ul .ol, .documentation blockquote > ul .ol, ol.vr dl, ol.vr ul, ol.vr ol, ol.vr .dl, ol.vr .ul, ol.vr .ol, .vr > ol dl, .documentation blockquote > ol dl, .vr > ol ul, .documentation blockquote > ol ul, .vr > ol ol, .documentation blockquote > ol ol, .vr > ol .dl, .documentation blockquote > ol .dl, .vr > ol .ul, .documentation blockquote > ol .ul, .vr > ol .ol, .documentation blockquote > ol .ol, .dl.vr dl, .documentation blockquote.dl dl, .dl.vr ul, .documentation blockquote.dl ul, .dl.vr ol, .documentation blockquote.dl ol, .dl.vr .dl, .documentation blockquote.dl .dl, .dl.vr .ul, .documentation blockquote.dl .ul, .dl.vr .ol, .documentation blockquote.dl .ol, .vr > .dl dl, .documentation blockquote > .dl dl, .vr > .dl ul, .documentation blockquote > .dl ul, .vr > .dl ol, .documentation blockquote > .dl ol, .vr > .dl .dl, .documentation blockquote > .dl .dl, .vr > .dl .ul, .documentation blockquote > .dl .ul, .vr > .dl .ol, .documentation blockquote > .dl .ol, .ul.vr dl, .documentation blockquote.ul dl, .ul.vr ul, .documentation blockquote.ul ul, .ul.vr ol, .documentation blockquote.ul ol, .ul.vr .dl, .documentation blockquote.ul .dl, .ul.vr .ul, .documentation blockquote.ul .ul, .ul.vr .ol, .documentation blockquote.ul .ol, .vr > .ul dl, .documentation blockquote > .ul dl, .vr > .ul ul, .documentation blockquote > .ul ul, .vr > .ul ol, .documentation blockquote > .ul ol, .vr > .ul .dl, .documentation blockquote > .ul .dl, .vr > .ul .ul, .documentation blockquote > .ul .ul, .vr > .ul .ol, .documentation blockquote > .ul .ol, .ol.vr dl, .documentation blockquote.ol dl, .ol.vr ul, .documentation blockquote.ol ul, .ol.vr ol, .documentation blockquote.ol ol, .ol.vr .dl, .documentation blockquote.ol .dl, .ol.vr .ul, .documentation blockquote.ol .ul, .ol.vr .ol, .documentation blockquote.ol .ol, .vr > .ol dl, .documentation blockquote > .ol dl, .vr > .ol ul, .documentation blockquote > .ol ul, .vr > .ol ol, .documentation blockquote > .ol ol, .vr > .ol .dl, .documentation blockquote > .ol .dl, .vr > .ol .ul, .documentation blockquote > .ol .ul, .vr > .ol .ol, .documentation blockquote > .ol .ol { margin-top: .5em; margin-bottom: .5em; }

.dt, .tf dl > dt { font-weight: bold; }

.ul > .li, .ul > li, .tf ul > li { padding-left: 1em; position: relative; }

.ul > .li:before, .ul > li:before, .tf ul > li:before { content: counter(s-list, circle); counter-increment: s-list; }

.ul > .li:before, .ul > li:before, .tf ul > li:before { left: 0; color: #f2bc2b !important; }

.ul > .li:before, .ul > li:before, .tf ul > li:before { position: absolute; display: block; }

.ul > .li > ul, .ul > .li > ol, .ul > .li > dl, .ul > li > ul, .ul > li > ol, .ul > li > dl, .tf ul > li > ul, .tf ul > li > ol, .tf ul > li > dl { margin-left: 0; margin-bottom: 0; }

.ol > .li, .ol > li, .tf ol > li { padding-left: 1em; position: relative; }

.ol > .li:before, .ol > li:before, .tf ol > li:before { content: counter(s-list, decimal); counter-increment: s-list; }

.ol > .li:before, .ol > li:before, .tf ol > li:before { left: 0; top: 0.4em; color: #f2bc2b !important; font-size: 0.6em !important; }

.ol > .li:before, .ol > li:before, .tf ol > li:before { position: absolute; display: block; }

.ol > .li > ul, .ol > .li > ol, .ol > .li > dl, .ol > li > ul, .ol > li > ol, .ol > li > dl, .tf ol > li > ul, .tf ol > li > ol, .tf ol > li > dl { margin-left: 0; margin-bottom: 0; }

/** @name 		Default caption Display a caption styled text @styleguide 	Typography / Caption @example 	html <div class="tf"> <div class="caption"> Nunc venenatis, odio at porta egestas, tortor eros mollis sapien. </div> </div> */
.caption, .tf caption, .tf figcaption { font-style: italic; font-size: .65em; display: block; }

.caption.vr, .documentation blockquote.caption, .vr > .caption, .documentation blockquote > .caption, caption.vr, .vr > caption, .documentation blockquote > caption, figcaption.vr, .vr > figcaption, .documentation blockquote > figcaption { margin-bottom: 1em; }

.caption.vr:last-child, .documentation blockquote.caption:last-child, .vr > .caption:last-child, .documentation blockquote > .caption:last-child, caption.vr:last-child, .vr > caption:last-child, .documentation blockquote > caption:last-child, figcaption.vr:last-child, .vr > figcaption:last-child, .documentation blockquote > figcaption:last-child { margin-bottom: 0; }

.caption, .tf caption, .tf figcaption { opacity: .65; }

/** @name 		Default quote Display a quote styled text @styleguide 	Typography / Quote @example 	html <div class="tf"> <quote> Nunc venenatis, odio at porta egestas, tortor eros mollis sapien. </quote> <div class="caption pull-right"> John Doe </div> </div> */
.quote, .tf quote { font-size: 2.5em; font-style: italic; font-family: Palatino, Times, Georgia, serif; font-weight: normal; padding: 1rem 2rem 1rem 2rem; display: block; }

.quote.vr, .documentation blockquote.quote, .vr > .quote, .documentation blockquote > .quote, quote.vr, .vr > quote, .documentation blockquote > quote { margin-bottom: 1em; }

.quote.vr:last-child, .documentation blockquote.quote:last-child, .vr > .quote:last-child, .documentation blockquote > .quote:last-child, quote.vr:last-child, .vr > quote:last-child, .documentation blockquote > quote:last-child { margin-bottom: 0; }

.quote, .tf quote { position: relative; }

.quote:before, .quote:after, .tf quote:before, .tf quote:after { display: inline-block; position: absolute; opacity: .4; }

.quote:before, .tf quote:before { content: "“"; top: 0; left: 0; }

.quote:after, .tf quote:after { content: "”"; bottom: 0; right: 0; }

/** Layout All the layout level specific styling. */
/** Layout All the layout level specific styling. */
/** Default layout */
html, body { width: 100%; height: 100%; }

/** Sidebar */
.sidebar { height: 100%; width: 250px; float: left; padding-bottom: 3rem; }

.sidebar .list--menu, .sidebar .list--three { display: none; }

.sidebar .active + .list--menu, .sidebar .active + .list--three { display: block; }

.sidebar__header { background: #fcfcfc; padding: 1rem; }

.sidebar__separator { display: block; background-image: url("../img/header-bkg-grey.png"); background-blend-mode: hard-light; padding: 1rem; color: white; cursor: pointer; text-decoration: none; }

.sidebar__separator .fa-caret-up { display: none; }

.sidebar__separator.active { margin-bottom: 0.57143rem; }

.sidebar__separator.active .fa-caret-up { display: block; }

.sidebar__separator.active .fa-caret-down { display: none; }

/** Content */
.content { width: calc(100% - 250px + 15px); height: 100%; overflow-y: auto; padding: 3rem; background: #fcfcfc; position: fixed; left: 250px; }

/** Footer */
.footer { margin: -3rem; margin-top: 3rem; padding: 3rem; background: #f2f2f2; background: white; }

/** Pages All the pages level specific styling. */
/** Pages All the pages level specific styling. */
/** Blocks All the blocks styling. A block can contain other blocks or objects and does not have to relay on his ancestors to be properly displayed. */
/** Blocks All the blocks styling. A block can contain other blocks or objects and does not have to relay on his ancestors to be properly displayed. */
/** Documentation styling */
.documentation h1 { background-color: #2b3438; background-image: url("../img/header-bkg-grey.png"); background-blend-mode: luminosity; background-repeat: no-repeat; background-size: cover; color: white; margin: -3rem; margin-bottom: 3rem; padding: 3rem; text-shadow: rgba(0, 0, 0, 0.3) 0 0 5px; }

.documentation h2 { border-bottom: 1px solid #e5e9ea; padding-bottom: 1rem; margin-bottom: 2rem; margin-top: 4rem; }

.documentation h3 { margin-top: 4rem; }

.documentation pre { box-shadow: rgba(0, 0, 0, 0.2) 0 20px 30px; margin-top: 1em !important; margin-bottom: 3em !important; }

.documentation pre code { background-color: transparent !important; text-transform: none !important; }

.documentation code { background: #f3f5f5; padding: 0 5px; font-family: Menlo, Monaco, Consolas, "Courier New", monospace; font-weight: normal; transition: all 0.1s ease-in-out 0s, outline-color 0s linear 0s; outline-color: black; text-transform: lowercase; }

.documentation code:hover { background: #e5e9ea; }

.documentation p code { padding: 10px; display: inline-block; }

.documentation blockquote { padding: 0 1.42857rem; border-left: 3px solid #e5e9ea; margin-top: 2em; margin-bottom: 2em; }

/** Navigation styling */
/** @name 	Nav justified */
/** @name 	Nav justify Provide a simple justify navigation component @styleguide 	Components / Nav @example 	html <ul class="nav nav--justify"> <li class="nav__item"> Item 1 </li> <li class="nav__item"> Item 2 </li> <li class="nav__item"> Item 3 </li> </ul> */
.nav--justify { display: table; width: 100%; }

.nav--justify > li, .nav--justify > .nav__item { display: table-cell; vertical-align: middle; }

.nav--justify > li, .nav--justify > li a, .nav--justify > .nav__item, .nav--justify > .nav__item a { text-align: center; }

.nav--right { text-align: right; }

/** Skin the scrollbar container @example 	scss @include s-custom-scrollbar() { // your code here... } @author 	Olivier Bossel <olivier.bossel@gmail.com> */
/** Skin the scrollbar element @example 	scss @include s-custom-scrollbar-scrollbar() { // your code here... background: red; } @author 	Olivier Bossel <olivier.bossel@gmail.com> */
/** Skin the track element @example 	scss @include s-custom-scrollbar-track() { // your code here... } @author 	Olivier Bossel <olivier.bossel@gmail.com> */
/** Print out the */
s-custom-scrollbar .simplebar-scrollbar { background-color: #848e91 !important; }

/** @name 		 	<span class="c-primary">Primary</span> Scrollbar Provide a way to display a nice primary custom-scrollbar @styleguide  	Components / Scrollbar @example 		html <s-custom-scrollbar color="primary" style="height:300px;"> <p>Duis volutpat vehicula aliquam. Praesent aliquet ac orci et vehicula. Fusce pharetra eleifend orci, vulputate consectetur risus vehicula vitae. Pellentesque sed mauris id elit semper interdum. Pellentesque dictum sollicitudin risus tincidunt consectetur. Fusce imperdiet nec purus eu eleifend. Ut feugiat ultricies finibus. In eu enim eget libero aliquet venenatis. Praesent gravida ligula id mauris cursus mollis. Aenean lacinia ullamcorper tincidunt. Sed posuere ultrices tortor, sit amet convallis leo rutrum non.</p> <p>Duis volutpat vehicula aliquam. Praesent aliquet ac orci et vehicula. Fusce pharetra eleifend orci, vulputate consectetur risus vehicula vitae. Pellentesque sed mauris id elit semper interdum. Pellentesque dictum sollicitudin risus tincidunt consectetur. Fusce imperdiet nec purus eu eleifend. Ut feugiat ultricies finibus. In eu enim eget libero aliquet venenatis. Praesent gravida ligula id mauris cursus mollis. Aenean lacinia ullamcorper tincidunt. Sed posuere ultrices tortor, sit amet convallis leo rutrum non.</p> <p>Duis volutpat vehicula aliquam. Praesent aliquet ac orci et vehicula. Fusce pharetra eleifend orci, vulputate consectetur risus vehicula vitae. Pellentesque sed mauris id elit semper interdum. Pellentesque dictum sollicitudin risus tincidunt consectetur. Fusce imperdiet nec purus eu eleifend. Ut feugiat ultricies finibus. In eu enim eget libero aliquet venenatis. Praesent gravida ligula id mauris cursus mollis. Aenean lacinia ullamcorper tincidunt. Sed posuere ultrices tortor, sit amet convallis leo rutrum non.</p> <p>Duis volutpat vehicula aliquam. Praesent aliquet ac orci et vehicula. Fusce pharetra eleifend orci, vulputate consectetur risus vehicula vitae. Pellentesque sed mauris id elit semper interdum. Pellentesque dictum sollicitudin risus tincidunt consectetur. Fusce imperdiet nec purus eu eleifend. Ut feugiat ultricies finibus. In eu enim eget libero aliquet venenatis. Praesent gravida ligula id mauris cursus mollis. Aenean lacinia ullamcorper tincidunt. Sed posuere ultrices tortor, sit amet convallis leo rutrum non.</p> <p>Duis volutpat vehicula aliquam. Praesent aliquet ac orci et vehicula. Fusce pharetra eleifend orci, vulputate consectetur risus vehicula vitae. Pellentesque sed mauris id elit semper interdum. Pellentesque dictum sollicitudin risus tincidunt consectetur. Fusce imperdiet nec purus eu eleifend. Ut feugiat ultricies finibus. In eu enim eget libero aliquet venenatis. Praesent gravida ligula id mauris cursus mollis. Aenean lacinia ullamcorper tincidunt. Sed posuere ultrices tortor, sit amet convallis leo rutrum non.</p> <p>Duis volutpat vehicula aliquam. Praesent aliquet ac orci et vehicula. Fusce pharetra eleifend orci, vulputate consectetur risus vehicula vitae. Pellentesque sed mauris id elit semper interdum. Pellentesque dictum sollicitudin risus tincidunt consectetur. Fusce imperdiet nec purus eu eleifend. Ut feugiat ultricies finibus. In eu enim eget libero aliquet venenatis. Praesent gravida ligula id mauris cursus mollis. Aenean lacinia ullamcorper tincidunt. Sed posuere ultrices tortor, sit amet convallis leo rutrum non.</p> </s-custom-scrollbar> @see 			https://github.com/coffeekraken/s-custom-scrollbar-component @author 			Olivier Bossel <olivier.bossel@gmail.com> */
s-custom-scrollbar[color="primary"] .simplebar-scrollbar { background-color: #f2bc2b !important; }

/** @name 		 	<span class="c-secondary">Secondary</span> Scrollbar Provide a way to display a nice secondary custom-scrollbar @styleguide  	Components / Scrollbar @example 		html <s-custom-scrollbar color="secondary" style="height:300px;"> <p>Duis volutpat vehicula aliquam. Praesent aliquet ac orci et vehicula. Fusce pharetra eleifend orci, vulputate consectetur risus vehicula vitae. Pellentesque sed mauris id elit semper interdum. Pellentesque dictum sollicitudin risus tincidunt consectetur. Fusce imperdiet nec purus eu eleifend. Ut feugiat ultricies finibus. In eu enim eget libero aliquet venenatis. Praesent gravida ligula id mauris cursus mollis. Aenean lacinia ullamcorper tincidunt. Sed posuere ultrices tortor, sit amet convallis leo rutrum non.</p> <p>Duis volutpat vehicula aliquam. Praesent aliquet ac orci et vehicula. Fusce pharetra eleifend orci, vulputate consectetur risus vehicula vitae. Pellentesque sed mauris id elit semper interdum. Pellentesque dictum sollicitudin risus tincidunt consectetur. Fusce imperdiet nec purus eu eleifend. Ut feugiat ultricies finibus. In eu enim eget libero aliquet venenatis. Praesent gravida ligula id mauris cursus mollis. Aenean lacinia ullamcorper tincidunt. Sed posuere ultrices tortor, sit amet convallis leo rutrum non.</p> <p>Duis volutpat vehicula aliquam. Praesent aliquet ac orci et vehicula. Fusce pharetra eleifend orci, vulputate consectetur risus vehicula vitae. Pellentesque sed mauris id elit semper interdum. Pellentesque dictum sollicitudin risus tincidunt consectetur. Fusce imperdiet nec purus eu eleifend. Ut feugiat ultricies finibus. In eu enim eget libero aliquet venenatis. Praesent gravida ligula id mauris cursus mollis. Aenean lacinia ullamcorper tincidunt. Sed posuere ultrices tortor, sit amet convallis leo rutrum non.</p> <p>Duis volutpat vehicula aliquam. Praesent aliquet ac orci et vehicula. Fusce pharetra eleifend orci, vulputate consectetur risus vehicula vitae. Pellentesque sed mauris id elit semper interdum. Pellentesque dictum sollicitudin risus tincidunt consectetur. Fusce imperdiet nec purus eu eleifend. Ut feugiat ultricies finibus. In eu enim eget libero aliquet venenatis. Praesent gravida ligula id mauris cursus mollis. Aenean lacinia ullamcorper tincidunt. Sed posuere ultrices tortor, sit amet convallis leo rutrum non.</p> <p>Duis volutpat vehicula aliquam. Praesent aliquet ac orci et vehicula. Fusce pharetra eleifend orci, vulputate consectetur risus vehicula vitae. Pellentesque sed mauris id elit semper interdum. Pellentesque dictum sollicitudin risus tincidunt consectetur. Fusce imperdiet nec purus eu eleifend. Ut feugiat ultricies finibus. In eu enim eget libero aliquet venenatis. Praesent gravida ligula id mauris cursus mollis. Aenean lacinia ullamcorper tincidunt. Sed posuere ultrices tortor, sit amet convallis leo rutrum non.</p> <p>Duis volutpat vehicula aliquam. Praesent aliquet ac orci et vehicula. Fusce pharetra eleifend orci, vulputate consectetur risus vehicula vitae. Pellentesque sed mauris id elit semper interdum. Pellentesque dictum sollicitudin risus tincidunt consectetur. Fusce imperdiet nec purus eu eleifend. Ut feugiat ultricies finibus. In eu enim eget libero aliquet venenatis. Praesent gravida ligula id mauris cursus mollis. Aenean lacinia ullamcorper tincidunt. Sed posuere ultrices tortor, sit amet convallis leo rutrum non.</p> </s-custom-scrollbar> @see 			https://github.com/coffeekraken/s-custom-scrollbar-component @author 			Olivier Bossel <olivier.bossel@gmail.com> */
s-custom-scrollbar[color="secondary"] .simplebar-scrollbar { background-color: #2b3438 !important; }

/** @name 		 	<span class="c-success">Success</span> Scrollbar Provide a way to display a nice success custom-scrollbar @styleguide  	Components / Scrollbar @example 		html <s-custom-scrollbar color="success" style="height:300px;"> <p>Duis volutpat vehicula aliquam. Praesent aliquet ac orci et vehicula. Fusce pharetra eleifend orci, vulputate consectetur risus vehicula vitae. Pellentesque sed mauris id elit semper interdum. Pellentesque dictum sollicitudin risus tincidunt consectetur. Fusce imperdiet nec purus eu eleifend. Ut feugiat ultricies finibus. In eu enim eget libero aliquet venenatis. Praesent gravida ligula id mauris cursus mollis. Aenean lacinia ullamcorper tincidunt. Sed posuere ultrices tortor, sit amet convallis leo rutrum non.</p> <p>Duis volutpat vehicula aliquam. Praesent aliquet ac orci et vehicula. Fusce pharetra eleifend orci, vulputate consectetur risus vehicula vitae. Pellentesque sed mauris id elit semper interdum. Pellentesque dictum sollicitudin risus tincidunt consectetur. Fusce imperdiet nec purus eu eleifend. Ut feugiat ultricies finibus. In eu enim eget libero aliquet venenatis. Praesent gravida ligula id mauris cursus mollis. Aenean lacinia ullamcorper tincidunt. Sed posuere ultrices tortor, sit amet convallis leo rutrum non.</p> <p>Duis volutpat vehicula aliquam. Praesent aliquet ac orci et vehicula. Fusce pharetra eleifend orci, vulputate consectetur risus vehicula vitae. Pellentesque sed mauris id elit semper interdum. Pellentesque dictum sollicitudin risus tincidunt consectetur. Fusce imperdiet nec purus eu eleifend. Ut feugiat ultricies finibus. In eu enim eget libero aliquet venenatis. Praesent gravida ligula id mauris cursus mollis. Aenean lacinia ullamcorper tincidunt. Sed posuere ultrices tortor, sit amet convallis leo rutrum non.</p> <p>Duis volutpat vehicula aliquam. Praesent aliquet ac orci et vehicula. Fusce pharetra eleifend orci, vulputate consectetur risus vehicula vitae. Pellentesque sed mauris id elit semper interdum. Pellentesque dictum sollicitudin risus tincidunt consectetur. Fusce imperdiet nec purus eu eleifend. Ut feugiat ultricies finibus. In eu enim eget libero aliquet venenatis. Praesent gravida ligula id mauris cursus mollis. Aenean lacinia ullamcorper tincidunt. Sed posuere ultrices tortor, sit amet convallis leo rutrum non.</p> <p>Duis volutpat vehicula aliquam. Praesent aliquet ac orci et vehicula. Fusce pharetra eleifend orci, vulputate consectetur risus vehicula vitae. Pellentesque sed mauris id elit semper interdum. Pellentesque dictum sollicitudin risus tincidunt consectetur. Fusce imperdiet nec purus eu eleifend. Ut feugiat ultricies finibus. In eu enim eget libero aliquet venenatis. Praesent gravida ligula id mauris cursus mollis. Aenean lacinia ullamcorper tincidunt. Sed posuere ultrices tortor, sit amet convallis leo rutrum non.</p> <p>Duis volutpat vehicula aliquam. Praesent aliquet ac orci et vehicula. Fusce pharetra eleifend orci, vulputate consectetur risus vehicula vitae. Pellentesque sed mauris id elit semper interdum. Pellentesque dictum sollicitudin risus tincidunt consectetur. Fusce imperdiet nec purus eu eleifend. Ut feugiat ultricies finibus. In eu enim eget libero aliquet venenatis. Praesent gravida ligula id mauris cursus mollis. Aenean lacinia ullamcorper tincidunt. Sed posuere ultrices tortor, sit amet convallis leo rutrum non.</p> </s-custom-scrollbar> @see 			https://github.com/coffeekraken/s-custom-scrollbar-component @author 			Olivier Bossel <olivier.bossel@gmail.com> */
s-custom-scrollbar[color="success"] .simplebar-scrollbar { background-color: #5cb85c !important; }

/** @name 		 	<span class="c-error">Error</span> Scrollbar Provide a way to display a nice error custom-scrollbar @styleguide  	Components / Scrollbar @example 		html <s-custom-scrollbar color="error" style="height:300px;"> <p>Duis volutpat vehicula aliquam. Praesent aliquet ac orci et vehicula. Fusce pharetra eleifend orci, vulputate consectetur risus vehicula vitae. Pellentesque sed mauris id elit semper interdum. Pellentesque dictum sollicitudin risus tincidunt consectetur. Fusce imperdiet nec purus eu eleifend. Ut feugiat ultricies finibus. In eu enim eget libero aliquet venenatis. Praesent gravida ligula id mauris cursus mollis. Aenean lacinia ullamcorper tincidunt. Sed posuere ultrices tortor, sit amet convallis leo rutrum non.</p> <p>Duis volutpat vehicula aliquam. Praesent aliquet ac orci et vehicula. Fusce pharetra eleifend orci, vulputate consectetur risus vehicula vitae. Pellentesque sed mauris id elit semper interdum. Pellentesque dictum sollicitudin risus tincidunt consectetur. Fusce imperdiet nec purus eu eleifend. Ut feugiat ultricies finibus. In eu enim eget libero aliquet venenatis. Praesent gravida ligula id mauris cursus mollis. Aenean lacinia ullamcorper tincidunt. Sed posuere ultrices tortor, sit amet convallis leo rutrum non.</p> <p>Duis volutpat vehicula aliquam. Praesent aliquet ac orci et vehicula. Fusce pharetra eleifend orci, vulputate consectetur risus vehicula vitae. Pellentesque sed mauris id elit semper interdum. Pellentesque dictum sollicitudin risus tincidunt consectetur. Fusce imperdiet nec purus eu eleifend. Ut feugiat ultricies finibus. In eu enim eget libero aliquet venenatis. Praesent gravida ligula id mauris cursus mollis. Aenean lacinia ullamcorper tincidunt. Sed posuere ultrices tortor, sit amet convallis leo rutrum non.</p> <p>Duis volutpat vehicula aliquam. Praesent aliquet ac orci et vehicula. Fusce pharetra eleifend orci, vulputate consectetur risus vehicula vitae. Pellentesque sed mauris id elit semper interdum. Pellentesque dictum sollicitudin risus tincidunt consectetur. Fusce imperdiet nec purus eu eleifend. Ut feugiat ultricies finibus. In eu enim eget libero aliquet venenatis. Praesent gravida ligula id mauris cursus mollis. Aenean lacinia ullamcorper tincidunt. Sed posuere ultrices tortor, sit amet convallis leo rutrum non.</p> <p>Duis volutpat vehicula aliquam. Praesent aliquet ac orci et vehicula. Fusce pharetra eleifend orci, vulputate consectetur risus vehicula vitae. Pellentesque sed mauris id elit semper interdum. Pellentesque dictum sollicitudin risus tincidunt consectetur. Fusce imperdiet nec purus eu eleifend. Ut feugiat ultricies finibus. In eu enim eget libero aliquet venenatis. Praesent gravida ligula id mauris cursus mollis. Aenean lacinia ullamcorper tincidunt. Sed posuere ultrices tortor, sit amet convallis leo rutrum non.</p> <p>Duis volutpat vehicula aliquam. Praesent aliquet ac orci et vehicula. Fusce pharetra eleifend orci, vulputate consectetur risus vehicula vitae. Pellentesque sed mauris id elit semper interdum. Pellentesque dictum sollicitudin risus tincidunt consectetur. Fusce imperdiet nec purus eu eleifend. Ut feugiat ultricies finibus. In eu enim eget libero aliquet venenatis. Praesent gravida ligula id mauris cursus mollis. Aenean lacinia ullamcorper tincidunt. Sed posuere ultrices tortor, sit amet convallis leo rutrum non.</p> </s-custom-scrollbar> @see 			https://github.com/coffeekraken/s-custom-scrollbar-component @author 			Olivier Bossel <olivier.bossel@gmail.com> */
s-custom-scrollbar[color="error"] .simplebar-scrollbar { background-color: #d9534f !important; }

/** @name 		 	<span class="c-warning">Warning</span> Scrollbar Provide a way to display a nice warning custom-scrollbar @styleguide  	Components / Scrollbar @example 		html <s-custom-scrollbar color="warning" style="height:300px;"> <p>Duis volutpat vehicula aliquam. Praesent aliquet ac orci et vehicula. Fusce pharetra eleifend orci, vulputate consectetur risus vehicula vitae. Pellentesque sed mauris id elit semper interdum. Pellentesque dictum sollicitudin risus tincidunt consectetur. Fusce imperdiet nec purus eu eleifend. Ut feugiat ultricies finibus. In eu enim eget libero aliquet venenatis. Praesent gravida ligula id mauris cursus mollis. Aenean lacinia ullamcorper tincidunt. Sed posuere ultrices tortor, sit amet convallis leo rutrum non.</p> <p>Duis volutpat vehicula aliquam. Praesent aliquet ac orci et vehicula. Fusce pharetra eleifend orci, vulputate consectetur risus vehicula vitae. Pellentesque sed mauris id elit semper interdum. Pellentesque dictum sollicitudin risus tincidunt consectetur. Fusce imperdiet nec purus eu eleifend. Ut feugiat ultricies finibus. In eu enim eget libero aliquet venenatis. Praesent gravida ligula id mauris cursus mollis. Aenean lacinia ullamcorper tincidunt. Sed posuere ultrices tortor, sit amet convallis leo rutrum non.</p> <p>Duis volutpat vehicula aliquam. Praesent aliquet ac orci et vehicula. Fusce pharetra eleifend orci, vulputate consectetur risus vehicula vitae. Pellentesque sed mauris id elit semper interdum. Pellentesque dictum sollicitudin risus tincidunt consectetur. Fusce imperdiet nec purus eu eleifend. Ut feugiat ultricies finibus. In eu enim eget libero aliquet venenatis. Praesent gravida ligula id mauris cursus mollis. Aenean lacinia ullamcorper tincidunt. Sed posuere ultrices tortor, sit amet convallis leo rutrum non.</p> <p>Duis volutpat vehicula aliquam. Praesent aliquet ac orci et vehicula. Fusce pharetra eleifend orci, vulputate consectetur risus vehicula vitae. Pellentesque sed mauris id elit semper interdum. Pellentesque dictum sollicitudin risus tincidunt consectetur. Fusce imperdiet nec purus eu eleifend. Ut feugiat ultricies finibus. In eu enim eget libero aliquet venenatis. Praesent gravida ligula id mauris cursus mollis. Aenean lacinia ullamcorper tincidunt. Sed posuere ultrices tortor, sit amet convallis leo rutrum non.</p> <p>Duis volutpat vehicula aliquam. Praesent aliquet ac orci et vehicula. Fusce pharetra eleifend orci, vulputate consectetur risus vehicula vitae. Pellentesque sed mauris id elit semper interdum. Pellentesque dictum sollicitudin risus tincidunt consectetur. Fusce imperdiet nec purus eu eleifend. Ut feugiat ultricies finibus. In eu enim eget libero aliquet venenatis. Praesent gravida ligula id mauris cursus mollis. Aenean lacinia ullamcorper tincidunt. Sed posuere ultrices tortor, sit amet convallis leo rutrum non.</p> <p>Duis volutpat vehicula aliquam. Praesent aliquet ac orci et vehicula. Fusce pharetra eleifend orci, vulputate consectetur risus vehicula vitae. Pellentesque sed mauris id elit semper interdum. Pellentesque dictum sollicitudin risus tincidunt consectetur. Fusce imperdiet nec purus eu eleifend. Ut feugiat ultricies finibus. In eu enim eget libero aliquet venenatis. Praesent gravida ligula id mauris cursus mollis. Aenean lacinia ullamcorper tincidunt. Sed posuere ultrices tortor, sit amet convallis leo rutrum non.</p> </s-custom-scrollbar> @see 			https://github.com/coffeekraken/s-custom-scrollbar-component @author 			Olivier Bossel <olivier.bossel@gmail.com> */
s-custom-scrollbar[color="warning"] .simplebar-scrollbar { background-color: #f0ad4e !important; }

/** @name 		 	<span class="c-info">Info</span> Scrollbar Provide a way to display a nice info custom-scrollbar @styleguide  	Components / Scrollbar @example 		html <s-custom-scrollbar color="info" style="height:300px;"> <p>Duis volutpat vehicula aliquam. Praesent aliquet ac orci et vehicula. Fusce pharetra eleifend orci, vulputate consectetur risus vehicula vitae. Pellentesque sed mauris id elit semper interdum. Pellentesque dictum sollicitudin risus tincidunt consectetur. Fusce imperdiet nec purus eu eleifend. Ut feugiat ultricies finibus. In eu enim eget libero aliquet venenatis. Praesent gravida ligula id mauris cursus mollis. Aenean lacinia ullamcorper tincidunt. Sed posuere ultrices tortor, sit amet convallis leo rutrum non.</p> <p>Duis volutpat vehicula aliquam. Praesent aliquet ac orci et vehicula. Fusce pharetra eleifend orci, vulputate consectetur risus vehicula vitae. Pellentesque sed mauris id elit semper interdum. Pellentesque dictum sollicitudin risus tincidunt consectetur. Fusce imperdiet nec purus eu eleifend. Ut feugiat ultricies finibus. In eu enim eget libero aliquet venenatis. Praesent gravida ligula id mauris cursus mollis. Aenean lacinia ullamcorper tincidunt. Sed posuere ultrices tortor, sit amet convallis leo rutrum non.</p> <p>Duis volutpat vehicula aliquam. Praesent aliquet ac orci et vehicula. Fusce pharetra eleifend orci, vulputate consectetur risus vehicula vitae. Pellentesque sed mauris id elit semper interdum. Pellentesque dictum sollicitudin risus tincidunt consectetur. Fusce imperdiet nec purus eu eleifend. Ut feugiat ultricies finibus. In eu enim eget libero aliquet venenatis. Praesent gravida ligula id mauris cursus mollis. Aenean lacinia ullamcorper tincidunt. Sed posuere ultrices tortor, sit amet convallis leo rutrum non.</p> <p>Duis volutpat vehicula aliquam. Praesent aliquet ac orci et vehicula. Fusce pharetra eleifend orci, vulputate consectetur risus vehicula vitae. Pellentesque sed mauris id elit semper interdum. Pellentesque dictum sollicitudin risus tincidunt consectetur. Fusce imperdiet nec purus eu eleifend. Ut feugiat ultricies finibus. In eu enim eget libero aliquet venenatis. Praesent gravida ligula id mauris cursus mollis. Aenean lacinia ullamcorper tincidunt. Sed posuere ultrices tortor, sit amet convallis leo rutrum non.</p> <p>Duis volutpat vehicula aliquam. Praesent aliquet ac orci et vehicula. Fusce pharetra eleifend orci, vulputate consectetur risus vehicula vitae. Pellentesque sed mauris id elit semper interdum. Pellentesque dictum sollicitudin risus tincidunt consectetur. Fusce imperdiet nec purus eu eleifend. Ut feugiat ultricies finibus. In eu enim eget libero aliquet venenatis. Praesent gravida ligula id mauris cursus mollis. Aenean lacinia ullamcorper tincidunt. Sed posuere ultrices tortor, sit amet convallis leo rutrum non.</p> <p>Duis volutpat vehicula aliquam. Praesent aliquet ac orci et vehicula. Fusce pharetra eleifend orci, vulputate consectetur risus vehicula vitae. Pellentesque sed mauris id elit semper interdum. Pellentesque dictum sollicitudin risus tincidunt consectetur. Fusce imperdiet nec purus eu eleifend. Ut feugiat ultricies finibus. In eu enim eget libero aliquet venenatis. Praesent gravida ligula id mauris cursus mollis. Aenean lacinia ullamcorper tincidunt. Sed posuere ultrices tortor, sit amet convallis leo rutrum non.</p> </s-custom-scrollbar> @see 			https://github.com/coffeekraken/s-custom-scrollbar-component @author 			Olivier Bossel <olivier.bossel@gmail.com> */
s-custom-scrollbar[color="info"] .simplebar-scrollbar { background-color: #2199e8 !important; }

s-custom-scrollbar .simplebar-track { width: 2px !important; }

/** Interactive demo styling */
s-interactive-demo { background: white; box-shadow: rgba(0, 0, 0, 0.2) 0 20px 30px; }

.s-interactive-demo__header { background: #f4f4f4 !important; }

/** Table styling */
/** @name 		Default table Display table contents @styleguide 		Components / Table @example 		html <table class="table"> <tr> <th>#</th> <th>Table head 1</th> <th>Table head 2</th> <th>Table head 3</th> </tr> <tr> <td>1</td> <td>Table cell 1</td> <td>Table cell 2</td> <td>Table cell 3</td> </tr> </table> */
.table, .documentation table { width: 100%; }

.table.vr, .documentation table.vr, .documentation blockquote.table, .vr > .table, .documentation blockquote > .table, .documentation .vr > table, .documentation blockquote > table { margin-bottom: 2em; }

.table .th, .documentation table .th, .table th, .documentation table th { text-align: left; }

.table .th, .documentation table .th, .table th, .documentation table th, .table .td, .documentation table .td, .table td, .documentation table td { padding: 0.8em 1em; position: relative; }

.table .th:last-child, .documentation table .th:last-child, .table th:last-child, .documentation table th:last-child, .table .td:last-child, .documentation table .td:last-child, .table td:last-child, .documentation table td:last-child { border-right: none; }

.table .th:before, .documentation table .th:before, .table th:before, .documentation table th:before, .table .td:before, .documentation table .td:before, .table td:before, .documentation table td:before { content: ''; display: block; position: absolute; top: 50%; left: 0; transform: translateX(0) translateY(-50%) translateZ(0); width: 100%; height: 100%; transition: all 0.1s ease-in-out 0s, outline-color 0s linear 0s; outline-color: black; border-width: 0; border-color: transparent; border-style: solid; border-top-width: 0.07143rem; border-bottom-width: 0.07143rem; pointer-events: none; }

.table .th:last-child:before, .documentation table .th:last-child:before, .table th:last-child:before, .documentation table th:last-child:before, .table .td:last-child:before, .documentation table .td:last-child:before, .table td:last-child:before, .documentation table td:last-child:before { border-right-width: 1px; }

.table .th:first-child:before, .documentation table .th:first-child:before, .table th:first-child:before, .documentation table th:first-child:before, .table .td:first-child:before, .documentation table .td:first-child:before, .table td:first-child:before, .documentation table td:first-child:before { border-left-width: 1px; }

.table .th, .documentation table .th, .table th, .documentation table th { font-weight: bold; position: relative; }

.table .tr:last-child .td, .documentation table .tr:last-child .td, .table tr:last-child td, .documentation table tr:last-child td, .table .tr:last-child:not(:first-child) .th, .documentation table .tr:last-child:not(:first-child) .th, .table tr:last-child:not(:first-child) th, .documentation table tr:last-child:not(:first-child) th { border-bottom: none !important; }

.table .caption:before, .documentation table .caption:before, .table caption:before, .documentation table caption:before { content: "\2014 \00A0"; }

.table .td.adapt, .documentation table .td.adapt, .table td.adapt, .documentation table td.adapt, .table .th.adapt, .documentation table .th.adapt, .table th.adapt, .documentation table th.adapt { width: 1px; white-space: nowrap; }

.table .td.grow, .documentation table .td.grow, .table td.grow, .documentation table td.grow, .table .th.grow, .documentation table .th.grow, .table th.grow, .documentation table th.grow { width: 9999999px; }

.table--responsive { min-height: 0.01%; overflow-x: auto; width: 100%; overflow-y: hidden; }

/** @name 		Centered table Display centered table contents @styleguide 		Components / Table @example 		html <table class="table table--center"> <tr> <th>#</th> <th>Table head 1</th> <th>Table head 2</th> <th>Table head 3</th> </tr> <tr> <td>1</td> <td>Table cell 1</td> <td>Table cell 2</td> <td>Table cell 3</td> </tr> </table> */
.table--center td, .table--center .td, .table--center th, .table--center .th { text-align: center; }

/** @name 		Middle table Display middle aligned table contents @styleguide 		Components / Table @example 		html <table class="table table--middle"> <tr> <th>#</th> <th>Table head 1</th> <th>Table head 2</th> <th>Table head 3</th> </tr> <tr> <td>1</td> <td>Table cell 1</td> <td> Mauris sem nulla, maximus id dignissim vitae,<br> ullamcorper a turpis. Vestibulum vel eros non nisl<br> euismod tempus vitae non turpis. </td> <td>Table cell 3</td> </tr> </table> */
.table--middle td, .table--middle .td, .table--middle th, .table--middle .th { vertical-align: middle; }

.table, .documentation table { /** @name 		<span class="c-default">Default</span> table Display default table contents @styleguide 		Components / Table @example 		html <table class="table table--default"> <tr> <th>#</th> <th>Table head 1</th> <th>Table head 2</th> <th>Table head 3</th> </tr> <tr> <td>1</td> <td>Table cell 1</td> <td>Table cell 2</td> <td>Table cell 3</td> </tr> </table> */ /** @name 		<span class="c-primary">Primary</span> table Display primary table contents @styleguide 		Components / Table @example 		html <table class="table table--primary"> <tr> <th>#</th> <th>Table head 1</th> <th>Table head 2</th> <th>Table head 3</th> </tr> <tr> <td>1</td> <td>Table cell 1</td> <td>Table cell 2</td> <td>Table cell 3</td> </tr> </table> */ /** @name 		<span class="c-secondary">Secondary</span> table Display secondary table contents @styleguide 		Components / Table @example 		html <table class="table table--secondary"> <tr> <th>#</th> <th>Table head 1</th> <th>Table head 2</th> <th>Table head 3</th> </tr> <tr> <td>1</td> <td>Table cell 1</td> <td>Table cell 2</td> <td>Table cell 3</td> </tr> </table> */ }

.table tr, .documentation table tr { border-bottom: 1px solid rgba(132, 142, 145, 0.1); }

.table tr:last-of-type, .documentation table tr:last-of-type { border-bottom: none; }

.table.table, .documentation table { /** @name 		<span class="c-default">Default</span> striped table Display default striped table contents @styleguide 		Components / Table @example 		html <table class="table table--default table--striped"> <tr> <th>#</th> <th>Table head 1</th> <th>Table head 2</th> <th>Table head 3</th> </tr> <tr> <td>1</td> <td>Table cell 1</td> <td>Table cell 2</td> <td>Table cell 3</td> </tr> </table> */ /** @name 		<span class="c-default">Default</span> bordered table Display default bordered table contents @styleguide 		Components / Table @example 		html <table class="table table--default table--bordered"> <tr> <th>#</th> <th>Table head 1</th> <th>Table head 2</th> <th>Table head 3</th> </tr> <tr> <td>1</td> <td>Table cell 1</td> <td>Table cell 2</td> <td>Table cell 3</td> </tr> </table> */ /** @name 		<span class="c-default">Default</span> hoverable table Display default hoverable table contents @styleguide 		Components / Table @example 		html <table class="table table--default table--hover"> <tr> <th>#</th> <th>Table head 1</th> <th>Table head 2</th> <th>Table head 3</th> </tr> <tr> <td>1</td> <td>Table cell 1</td> <td>Table cell 2</td> <td>Table cell 3</td> </tr> </table> */ }

.table.table th, .documentation table th { color: #848e91; }

.table.table.table--striped > thead > .tr:nth-of-type(odd) > td, .documentation table > thead > .tr:nth-of-type(odd) > td, .table.table.table--striped > thead > .tr:nth-of-type(odd) > th, .documentation table > thead > .tr:nth-of-type(odd) > th, .table.table.table--striped > thead > tr:nth-of-type(odd) > td, .documentation table > thead > tr:nth-of-type(odd) > td, .table.table.table--striped > thead > tr:nth-of-type(odd) > th, .documentation table > thead > tr:nth-of-type(odd) > th { background-color: rgba(132, 142, 145, 0.2); }

.table.table.table--striped > tbody > .tr:nth-of-type(even) > td, .documentation table > tbody > .tr:nth-of-type(even) > td, .table.table.table--striped > tbody > .tr:nth-of-type(even) > th, .documentation table > tbody > .tr:nth-of-type(even) > th, .table.table.table--striped > tbody > tr:nth-of-type(even) > td, .documentation table > tbody > tr:nth-of-type(even) > td, .table.table.table--striped > tbody > tr:nth-of-type(even) > th, .documentation table > tbody > tr:nth-of-type(even) > th { background-color: rgba(132, 142, 145, 0.05); }

.table.table.table--bordered, .documentation table.table--bordered { border: 1px solid rgba(132, 142, 145, 0.1); }

.table.table.table--bordered tr, .documentation table.table--bordered tr { border-bottom: 1px solid rgba(132, 142, 145, 0.1); }

.table.table.table--bordered tr:last-of-type, .documentation table.table--bordered tr:last-of-type { border-bottom: none; }

.table.table.table--bordered td, .documentation table.table--bordered td, .table.table.table--bordered th, .documentation table.table--bordered th { border-right: 1px solid rgba(132, 142, 145, 0.1); }

.table.table.table--hover > tbody > .tr:hover td, .documentation table > tbody > .tr:hover td, .table.table.table--hover > tbody > .tr:hover .td, .documentation table > tbody > .tr:hover .td, .table.table.table--hover > tbody > .tr:hover th, .documentation table > tbody > .tr:hover th, .table.table.table--hover > tbody > .tr:hover .th, .documentation table > tbody > .tr:hover .th, .table.table.table--hover > tbody > tr:hover td, .documentation table > tbody > tr:hover td, .table.table.table--hover > tbody > tr:hover .td, .documentation table > tbody > tr:hover .td, .table.table.table--hover > tbody > tr:hover th, .documentation table > tbody > tr:hover th, .table.table.table--hover > tbody > tr:hover .th, .documentation table > tbody > tr:hover .th { background-color: rgba(132, 142, 145, 0.1); }

.table.table--primary, .documentation table.table--primary { /** @name 		<span class="c-primary">Primary</span> striped table Display primary striped table contents @styleguide 		Components / Table @example 		html <table class="table table--primary table--striped"> <tr> <th>#</th> <th>Table head 1</th> <th>Table head 2</th> <th>Table head 3</th> </tr> <tr> <td>1</td> <td>Table cell 1</td> <td>Table cell 2</td> <td>Table cell 3</td> </tr> </table> */ /** @name 		<span class="c-primary">Primary</span> bordered table Display primary bordered table contents @styleguide 		Components / Table @example 		html <table class="table table--primary table--bordered"> <tr> <th>#</th> <th>Table head 1</th> <th>Table head 2</th> <th>Table head 3</th> </tr> <tr> <td>1</td> <td>Table cell 1</td> <td>Table cell 2</td> <td>Table cell 3</td> </tr> </table> */ /** @name 		<span class="c-primary">Primary</span> hoverable table Display primary hoverable table contents @styleguide 		Components / Table @example 		html <table class="table table--primary table--hover"> <tr> <th>#</th> <th>Table head 1</th> <th>Table head 2</th> <th>Table head 3</th> </tr> <tr> <td>1</td> <td>Table cell 1</td> <td>Table cell 2</td> <td>Table cell 3</td> </tr> </table> */ }

.table.table--primary th, .documentation table.table--primary th { color: #f2bc2b; }

.table.table--primary.table--striped > thead > .tr:nth-of-type(odd) > td, .documentation table.table--primary > thead > .tr:nth-of-type(odd) > td, .table.table--primary.table--striped > thead > .tr:nth-of-type(odd) > th, .documentation table.table--primary > thead > .tr:nth-of-type(odd) > th, .table.table--primary.table--striped > thead > tr:nth-of-type(odd) > td, .documentation table.table--primary > thead > tr:nth-of-type(odd) > td, .table.table--primary.table--striped > thead > tr:nth-of-type(odd) > th, .documentation table.table--primary > thead > tr:nth-of-type(odd) > th { background-color: rgba(242, 188, 43, 0.2); }

.table.table--primary.table--striped > tbody > .tr:nth-of-type(even) > td, .documentation table.table--primary > tbody > .tr:nth-of-type(even) > td, .table.table--primary.table--striped > tbody > .tr:nth-of-type(even) > th, .documentation table.table--primary > tbody > .tr:nth-of-type(even) > th, .table.table--primary.table--striped > tbody > tr:nth-of-type(even) > td, .documentation table.table--primary > tbody > tr:nth-of-type(even) > td, .table.table--primary.table--striped > tbody > tr:nth-of-type(even) > th, .documentation table.table--primary > tbody > tr:nth-of-type(even) > th { background-color: rgba(242, 188, 43, 0.05); }

.table.table--primary.table--bordered, .documentation table.table--primary.table--bordered { border: 1px solid rgba(242, 188, 43, 0.1); }

.table.table--primary.table--bordered tr, .documentation table.table--primary.table--bordered tr { border-bottom: 1px solid rgba(242, 188, 43, 0.1); }

.table.table--primary.table--bordered tr:last-of-type, .documentation table.table--primary.table--bordered tr:last-of-type { border-bottom: none; }

.table.table--primary.table--bordered td, .documentation table.table--primary.table--bordered td, .table.table--primary.table--bordered th, .documentation table.table--primary.table--bordered th { border-right: 1px solid rgba(242, 188, 43, 0.1); }

.table.table--primary.table--hover > tbody > .tr:hover td, .documentation table.table--primary > tbody > .tr:hover td, .table.table--primary.table--hover > tbody > .tr:hover .td, .documentation table.table--primary > tbody > .tr:hover .td, .table.table--primary.table--hover > tbody > .tr:hover th, .documentation table.table--primary > tbody > .tr:hover th, .table.table--primary.table--hover > tbody > .tr:hover .th, .documentation table.table--primary > tbody > .tr:hover .th, .table.table--primary.table--hover > tbody > tr:hover td, .documentation table.table--primary > tbody > tr:hover td, .table.table--primary.table--hover > tbody > tr:hover .td, .documentation table.table--primary > tbody > tr:hover .td, .table.table--primary.table--hover > tbody > tr:hover th, .documentation table.table--primary > tbody > tr:hover th, .table.table--primary.table--hover > tbody > tr:hover .th, .documentation table.table--primary > tbody > tr:hover .th { background-color: rgba(242, 188, 43, 0.1); }

.table.table--secondary, .documentation table.table--secondary { /** @name 		<span class="c-secondary">Secondary</span> striped table Display secondary striped table contents @styleguide 		Components / Table @example 		html <table class="table table--secondary table--striped"> <tr> <th>#</th> <th>Table head 1</th> <th>Table head 2</th> <th>Table head 3</th> </tr> <tr> <td>1</td> <td>Table cell 1</td> <td>Table cell 2</td> <td>Table cell 3</td> </tr> </table> */ /** @name 		<span class="c-secondary">Secondary</span> bordered table Display secondary bordered table contents @styleguide 		Components / Table @example 		html <table class="table table--secondary table--bordered"> <tr> <th>#</th> <th>Table head 1</th> <th>Table head 2</th> <th>Table head 3</th> </tr> <tr> <td>1</td> <td>Table cell 1</td> <td>Table cell 2</td> <td>Table cell 3</td> </tr> </table> */ /** @name 		<span class="c-secondary">Secondary</span> hoverable table Display secondary hoverable table contents @styleguide 		Components / Table @example 		html <table class="table table--secondary table--hover"> <tr> <th>#</th> <th>Table head 1</th> <th>Table head 2</th> <th>Table head 3</th> </tr> <tr> <td>1</td> <td>Table cell 1</td> <td>Table cell 2</td> <td>Table cell 3</td> </tr> </table> */ }

.table.table--secondary th, .documentation table.table--secondary th { color: #2b3438; }

.table.table--secondary.table--striped > thead > .tr:nth-of-type(odd) > td, .documentation table.table--secondary > thead > .tr:nth-of-type(odd) > td, .table.table--secondary.table--striped > thead > .tr:nth-of-type(odd) > th, .documentation table.table--secondary > thead > .tr:nth-of-type(odd) > th, .table.table--secondary.table--striped > thead > tr:nth-of-type(odd) > td, .documentation table.table--secondary > thead > tr:nth-of-type(odd) > td, .table.table--secondary.table--striped > thead > tr:nth-of-type(odd) > th, .documentation table.table--secondary > thead > tr:nth-of-type(odd) > th { background-color: rgba(43, 52, 56, 0.2); }

.table.table--secondary.table--striped > tbody > .tr:nth-of-type(even) > td, .documentation table.table--secondary > tbody > .tr:nth-of-type(even) > td, .table.table--secondary.table--striped > tbody > .tr:nth-of-type(even) > th, .documentation table.table--secondary > tbody > .tr:nth-of-type(even) > th, .table.table--secondary.table--striped > tbody > tr:nth-of-type(even) > td, .documentation table.table--secondary > tbody > tr:nth-of-type(even) > td, .table.table--secondary.table--striped > tbody > tr:nth-of-type(even) > th, .documentation table.table--secondary > tbody > tr:nth-of-type(even) > th { background-color: rgba(43, 52, 56, 0.05); }

.table.table--secondary.table--bordered, .documentation table.table--secondary.table--bordered { border: 1px solid rgba(43, 52, 56, 0.1); }

.table.table--secondary.table--bordered tr, .documentation table.table--secondary.table--bordered tr { border-bottom: 1px solid rgba(43, 52, 56, 0.1); }

.table.table--secondary.table--bordered tr:last-of-type, .documentation table.table--secondary.table--bordered tr:last-of-type { border-bottom: none; }

.table.table--secondary.table--bordered td, .documentation table.table--secondary.table--bordered td, .table.table--secondary.table--bordered th, .documentation table.table--secondary.table--bordered th { border-right: 1px solid rgba(43, 52, 56, 0.1); }

.table.table--secondary.table--hover > tbody > .tr:hover td, .documentation table.table--secondary > tbody > .tr:hover td, .table.table--secondary.table--hover > tbody > .tr:hover .td, .documentation table.table--secondary > tbody > .tr:hover .td, .table.table--secondary.table--hover > tbody > .tr:hover th, .documentation table.table--secondary > tbody > .tr:hover th, .table.table--secondary.table--hover > tbody > .tr:hover .th, .documentation table.table--secondary > tbody > .tr:hover .th, .table.table--secondary.table--hover > tbody > tr:hover td, .documentation table.table--secondary > tbody > tr:hover td, .table.table--secondary.table--hover > tbody > tr:hover .td, .documentation table.table--secondary > tbody > tr:hover .td, .table.table--secondary.table--hover > tbody > tr:hover th, .documentation table.table--secondary > tbody > tr:hover th, .table.table--secondary.table--hover > tbody > tr:hover .th, .documentation table.table--secondary > tbody > tr:hover .th { background-color: rgba(43, 52, 56, 0.1); }

/** Styleguide styling */
.styleguide .h1 { background-color: #2b3438; background-image: url("../img/header-bkg-grey.png"); background-blend-mode: luminosity; background-repeat: no-repeat; background-size: cover; color: white; margin: -3rem; margin-bottom: 3rem; padding: 3rem; text-shadow: rgba(0, 0, 0, 0.3) 0 0 5px; }

.styleguide .h2 a[name] { font-size: .5em; vertical-align: middle; opacity: .1; }

.styleguide .h2 a[name]:hover { opacity: 1; }

.styleguide code { background: #f3f5f5; padding: 0 5px; font-family: Menlo, Monaco, Consolas, "Courier New", monospace; font-weight: normal; text-transform: lowercase; }

.styleguide__item { padding: 2rem; }

/** Objects All the objects styling. An object response to the same rules has the blocks, unless they cannot contain any other objects or blocks. */
/** Objects All the objects styling. An object response to the same rules has the blocks, unless they cannot contain any other objects or blocks. */
/** Buttons */
/** @name 	btn Lead paragraph styling @styleguide 	Components / Btn @example 	html <a class="btn"> Default button </a> */
.btn { border-radius: 0; padding: 0.8em 1em; height: 2.6em; }

/** @name 	btn block Lead paragraph styling @styleguide 	Components / Btn @example 	html <a class="btn btn--block"> Block button </a> */
.btn--block { border-radius: 0; padding: 0.8em 1em; height: 2.6em; display: block; width: 100%; }

.btn { transition: all 0.1s ease-in-out 0s, outline-color 0s linear 0s; outline-color: black; background-color: #848e91; border-color: #848e91; color: white; }

.btn[active]:not(:disabled), .btn.active:not(:disabled), .btn:active:not(:disabled), .btn:hover:not(:disabled) { background-color: #5f676a; border-color: #5f676a; }

.btn--link { background-color: transparent !important; color: #f2bc2b !important; border-color: transparent !important; position: relative; }

.btn--link:after { content: ''; position: absolute; display: block; bottom: 0.32em; left: 50%; height: .2em; width: 0; transform: translateX(-50%) translateY(0) translateZ(0); transition: all 0.1s ease-in-out 0s, outline-color 0s linear 0s; outline-color: black; background: #f2bc2b; }

.btn--link[active]:not(:disabled):after, .btn--link.active:not(:disabled):after, .btn--link:active:not(:disabled):after, .btn--link:hover:not(:disabled):after { width: calc(100% - 2em); }

/** @name 	<span class="c-default">Default</span> btn Default button @styleguide 	Components / Btn @example 	html <a class="btn btn--default"> Default button </a> */
.btn--default { background-color: #848e91; border-color: #848e91; color: white; /** @name 	<span class="c-default">Default</span> outline btn Outline default button @styleguide 	Components / Btn @example 	html <a class="btn btn--outline btn--default"> Default outlined button </a> */ /** @name 	<span class="c-default">Default</span> link btn Link default button @styleguide 	Components / Btn @example 	html <a class="btn btn--link btn--default"> Default link button </a> */ /** @name 	<span class="c-default">Default</span> disabled btn Disabled default button @styleguide 	Components / Btn @example 	html <button disabled class="btn btn--default"> Default disabled button </button> */ }

.btn--default[active]:not(:disabled), .btn--default.active:not(:disabled), .btn--default:active:not(:disabled), .btn--default:hover:not(:disabled) { background-color: #5f676a; border-color: #5f676a; }

.btn--default.btn--outline { color: #848e91; background-color: transparent; border-color: #848e91; }

.btn--default.btn--outline:active:not(:disabled), .btn--default.btn--outline:hover:not(:disabled), .btn--default.btn--outline.active:not(:disabled), :checked + .btn--default.btn--outline:not(:disabled) { background-color: #848e91; border-color: #848e91; color: white; }

.btn--default.btn--link { background-color: transparent !important; color: #848e91 !important; border-color: transparent !important; position: relative; }

.btn--default.btn--link:after { content: ''; position: absolute; display: block; bottom: 0.32em; left: 50%; height: .2em; width: 0; transform: translateX(-50%) translateY(0) translateZ(0); transition: all 0.1s ease-in-out 0s, outline-color 0s linear 0s; outline-color: black; background: #848e91; }

.btn--default.btn--link[active]:not(:disabled):after, .btn--default.btn--link.active:not(:disabled):after, .btn--default.btn--link:active:not(:disabled):after, .btn--default.btn--link:hover:not(:disabled):after { width: calc(100% - 2em); }

.btn--default.btn:disabled { background-color: #848e91; border-color: #848e91; color: white; opacity: 0.5; cursor: not-allowed !important; pointer-events: none; }

.btn--default.btn:disabled[active]:not(:disabled), .btn--default.btn:disabled.active:not(:disabled), .btn--default.btn:disabled:active:not(:disabled), .btn--default.btn:disabled:hover:not(:disabled) { background-color: #5f676a; border-color: #5f676a; }

.btn--hover-default:hover { background-color: #848e91; border-color: #848e91; color: white; }

.btn--hover-default:hover[active]:not(:disabled), .btn--hover-default:hover.active:not(:disabled), .btn--hover-default:hover:active:not(:disabled), .btn--hover-default:hover:hover:not(:disabled) { background-color: #5f676a; border-color: #5f676a; }

/** @name 	<span class="c-primary">Primary</span> btn Primary button @styleguide 	Components / Btn @example 	html <a class="btn btn--primary"> Primary button </a> */
.btn--primary { background-color: #f2bc2b; border-color: #f2bc2b; color: white; /** @name 	<span class="c-primary">Primary</span> outline btn Outline primary button @styleguide 	Components / Btn @example 	html <a class="btn btn--outline btn--primary"> Primary outlined button </a> */ /** @name 	<span class="c-primary">Primary</span> link btn Link primary button @styleguide 	Components / Btn @example 	html <a class="btn btn--link btn--primary"> Primary link button </a> */ /** @name 	<span class="c-primary">Primary</span> disabled btn Disabled primary button @styleguide 	Components / Btn @example 	html <button disabled class="btn btn--primary"> Primary disabled button </button> */ }

.btn--primary[active]:not(:disabled), .btn--primary.active:not(:disabled), .btn--primary:active:not(:disabled), .btn--primary:hover:not(:disabled) { background-color: #c4920c; border-color: #c4920c; }

.btn--primary.btn--outline { color: #f2bc2b; background-color: transparent; border-color: #f2bc2b; }

.btn--primary.btn--outline:active:not(:disabled), .btn--primary.btn--outline:hover:not(:disabled), .btn--primary.btn--outline.active:not(:disabled), :checked + .btn--primary.btn--outline:not(:disabled) { background-color: #f2bc2b; border-color: #f2bc2b; color: white; }

.btn--primary.btn--link { background-color: transparent !important; color: #f2bc2b !important; border-color: transparent !important; position: relative; }

.btn--primary.btn--link:after { content: ''; position: absolute; display: block; bottom: 0.32em; left: 50%; height: .2em; width: 0; transform: translateX(-50%) translateY(0) translateZ(0); transition: all 0.1s ease-in-out 0s, outline-color 0s linear 0s; outline-color: black; background: #f2bc2b; }

.btn--primary.btn--link[active]:not(:disabled):after, .btn--primary.btn--link.active:not(:disabled):after, .btn--primary.btn--link:active:not(:disabled):after, .btn--primary.btn--link:hover:not(:disabled):after { width: calc(100% - 2em); }

.btn--primary.btn:disabled { background-color: #f2bc2b; border-color: #f2bc2b; color: white; opacity: 0.5; cursor: not-allowed !important; pointer-events: none; }

.btn--primary.btn:disabled[active]:not(:disabled), .btn--primary.btn:disabled.active:not(:disabled), .btn--primary.btn:disabled:active:not(:disabled), .btn--primary.btn:disabled:hover:not(:disabled) { background-color: #c4920c; border-color: #c4920c; }

.btn--hover-primary:hover { background-color: #f2bc2b; border-color: #f2bc2b; color: white; }

.btn--hover-primary:hover[active]:not(:disabled), .btn--hover-primary:hover.active:not(:disabled), .btn--hover-primary:hover:active:not(:disabled), .btn--hover-primary:hover:hover:not(:disabled) { background-color: #c4920c; border-color: #c4920c; }

/** @name 	<span class="c-secondary">Secondary</span> btn Secondary button @styleguide 	Components / Btn @example 	html <a class="btn btn--secondary"> Secondary button </a> */
.btn--secondary { background-color: #2b3438; border-color: #2b3438; color: white; /** @name 	<span class="c-secondary">Secondary</span> outline btn Outline secondary button @styleguide 	Components / Btn @example 	html <a class="btn btn--outline btn--secondary"> Secondary outlined button </a> */ /** @name 	<span class="c-secondary">Secondary</span> link btn Link secondary button @styleguide 	Components / Btn @example 	html <a class="btn btn--link btn--secondary"> Secondary link button </a> */ /** @name 	<span class="c-secondary">Secondary</span> disabled btn Disabled secondary button @styleguide 	Components / Btn @example 	html <button disabled class="btn btn--secondary"> Secondary disabled button </button> */ }

.btn--secondary[active]:not(:disabled), .btn--secondary.active:not(:disabled), .btn--secondary:active:not(:disabled), .btn--secondary:hover:not(:disabled) { background-color: #0a0c0d; border-color: #0a0c0d; }

.btn--secondary.btn--outline { color: #2b3438; background-color: transparent; border-color: #2b3438; }

.btn--secondary.btn--outline:active:not(:disabled), .btn--secondary.btn--outline:hover:not(:disabled), .btn--secondary.btn--outline.active:not(:disabled), :checked + .btn--secondary.btn--outline:not(:disabled) { background-color: #2b3438; border-color: #2b3438; color: white; }

.btn--secondary.btn--link { background-color: transparent !important; color: #2b3438 !important; border-color: transparent !important; position: relative; }

.btn--secondary.btn--link:after { content: ''; position: absolute; display: block; bottom: 0.32em; left: 50%; height: .2em; width: 0; transform: translateX(-50%) translateY(0) translateZ(0); transition: all 0.1s ease-in-out 0s, outline-color 0s linear 0s; outline-color: black; background: #2b3438; }

.btn--secondary.btn--link[active]:not(:disabled):after, .btn--secondary.btn--link.active:not(:disabled):after, .btn--secondary.btn--link:active:not(:disabled):after, .btn--secondary.btn--link:hover:not(:disabled):after { width: calc(100% - 2em); }

.btn--secondary.btn:disabled { background-color: #2b3438; border-color: #2b3438; color: white; opacity: 0.5; cursor: not-allowed !important; pointer-events: none; }

.btn--secondary.btn:disabled[active]:not(:disabled), .btn--secondary.btn:disabled.active:not(:disabled), .btn--secondary.btn:disabled:active:not(:disabled), .btn--secondary.btn:disabled:hover:not(:disabled) { background-color: #0a0c0d; border-color: #0a0c0d; }

.btn--hover-secondary:hover { background-color: #2b3438; border-color: #2b3438; color: white; }

.btn--hover-secondary:hover[active]:not(:disabled), .btn--hover-secondary:hover.active:not(:disabled), .btn--hover-secondary:hover:active:not(:disabled), .btn--hover-secondary:hover:hover:not(:disabled) { background-color: #0a0c0d; border-color: #0a0c0d; }

.coffeekraken-logo { background-repeat: no-repeat; background-size: cover; background-image: url("data:image/svg+xml;utf8,<?xml version='1.0' encoding='utf-8'?>\a 	<!-- Generator: Adobe Illustrator 21.0.0, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->\a 	<svg version='1.2' baseProfile='tiny' id='Layer_1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'\a 		 x='0px' y='0px' viewBox='0 0 954.1 288.7' xml:space='preserve'>\a 	<g fill='#2b3438'>\a 		<path fill='rgba(43, 52, 56, 0.5)' d='M932.9,217.2c0-18.7-11.6-26.9-25.2-26.9c-10.2,0-19.9,3.8-32.7,13.1V192l-65,0.5c-5.3-1.9-11-2.8-16.8-2.8\a 			c-5.1,0-10.2,0.8-15.1,2.4h-73.5v15.3h16L693.3,229h-8.4v-78.6h-36.3v16.5h17.3v103.5h-14.1v-52c0-15.3-9.5-29.1-37.6-29.1\a 			c-0.8,0-1.6,0-2.4,0l0,0l-32,1c-12,0-24.2,7-30.2,22.9H549V192h-34.2l0,0h-37.1v15.3h16L466.2,229h-8.4v-78.6h-36.3v16.5h17.3\a 			v103.4h-17.5v16.5h50.8v-16.5h-14.2l0.1-23h8.3l39.9,39.5h24.4l0,0h62.5c3.4,1.1,7.1,1.7,11,1.7c10.6,0,18.9-3.6,30.9-13.3v11.6h33\a 			l0,0h31v-16.3l-14.2-0.1l0.1-23.1h8.3l39.8,39.5l50.2,0.5c4.1,0.9,8.5,1.3,13.1,1.3c20.2,0,37.3-8.7,47.5-24.4l-16.4-7.1\a 			c-7,9.9-18.4,15.3-30.6,15.3c-17.6,0-29.6-10.5-32.5-28.7h79.5c0-14.5-4.4-26.4-11.4-35.4H856v61.9h-16.4v16.5h52v-16.5h-16.4\a 			v-50.8c9.7-7.6,19.9-12.1,27.6-12.1c7.7,0,11.2,5.2,11.2,17.3v62.1h35.5v-16.5h-16.4v-53H932.9z M534,270.2l-18.9,0.1v0.1h-1.2\a 			L480,236.8l35.9-29.5h14.8l0,0h3.3V270.2z M632.5,262.8c-7.7,7-17.3,11.2-25.8,11.2c-10.2,0-17.3-6.4-17.3-15.7\a 			c0-9.4,7.7-16.3,18.3-16.3c8.1,0,16.6,3.2,24.8,9.4V262.8z M632.5,235.7c-7.7-5-17.7-8-26.2-8c-19.7,0-34.9,13.5-34.9,30.7\a 			c0,4.3,0.9,8.4,2.6,12.1l-0.2-0.1h-20.7v-27.2c0-18.3,4.8-29.9,19.6-33.1l18,6.2c4.3-7.4,11.4-11.2,20.5-11.2\a 			c11.4,0,21.3,4.8,21.3,18.3L632.5,235.7L632.5,235.7z M707.1,236.8l35.9-29.5h12.1c-7,8.2-11.5,19.1-11.5,31.9\a 			c0,12.2,3.9,22.9,10.7,31.2H741L707.1,236.8z M764.9,230.2c2.8-15.7,14-25.8,28.8-25.8s28,10.9,31,25.8H764.9z'/>\a 		<path d='M135.9,229.7c26.3,0,46.1-9.9,58.9-27.1v27h58.1v-28.8h-29.1l-0.3-45.3l14.7-0.1l74.3,74.1l29.5-0.1v-28.8h-14l-61-59.7\a 			l52.6-53H342V59.1h-88.7v28.8h24.1l-39.2,38.9l-14.4-0.1l0.3-67.5L194.8,59v27.6c-15.1-19.6-37.7-27.5-56.7-27.5\a 			c-20.4,0-36.9,2.9-50.7,13.4v-13H58.7v59.2h28.9c8.2-21.3,22.4-31.9,42.6-31.9c16.7,0,29.3,5.6,37.9,16.8\a 			c8.5,11.2,12.8,24.6,12.8,40.3c0,16.4-4.5,29.6-13.6,39.7c-9,10.1-20.6,15.2-34.6,15.2c-20.2,0-37.1-7.2-45.3-28.4H58.5v59.2h28.9\a 			v-13.1c13.4,10.2,28.9,12.9,48.5,13.1V229.7z'/>\a 		<rect fill='#f2bc2b' x='87.7' y='2' width='225.1' height='28.8'/>\a 		<polygon points='29.3,30.8 58.5,30.8 58.5,2 0,2 0,287.3 58.5,287.3 58.5,258.5 29.3,258.5 	'/>\a 		<polygon points='342,30.8 371.3,30.8 371.3,258.5 342,258.5 342,287.3 400.6,287.3 400.6,2 342,2 	'/>\a 		<rect x='87.7' y='258.6' width='225.1' height='28.8'/>\a 		<g>\a 			<path d='M497.4,142c22.9,0,40.6-6.6,53.1-19.8c1.6,2,3.3,3.9,5.3,5.7c9.9,9,22.1,13.5,36.4,13.5c14.7,0,26.9-4.5,36.6-13.6\a 				c9.8-9.1,14.7-21.3,14.7-36.7c0-15.6-4.9-27.9-14.8-36.9c-9.9-9-22-13.5-36.5-13.5c-14.4,0-26.5,4.5-36.4,13.5\a 				c-7.3,6.6-11.9,15.1-13.9,25.4l0,0c-2.5,11.2-10.1,21.4-17.2,27.7c-7.1,6.3-15.3,9.4-24.7,9.4c-11.5,0-21-4.2-28.4-12.5\a 				S460.5,85,460.5,71.6c0-12.8,3.5-23.9,10.5-33.1s17.4-13.8,31.1-13.8c13.6,0,23.9,5.9,30.9,17.7c1.5,2.6,2.9,5.4,4.1,8.5\a 				l23.5-17.1l0.2-31.5h-23.7V13c-11.3-8.7-25.3-13-42-13c-13.4,0-25.8,2.8-37,8.3c-11.3,5.5-20.3,13.7-27,24.7\a 				c-6.7,10.9-10,23.7-10,38.2c0,20.4,6.4,37.4,19.2,50.7C453.2,135.3,472.2,142,497.4,142z M592.1,64.3c6,0,10.7,2.3,14.2,6.9\a 				s5.2,11,5.2,19.2c0,9.3-1.8,16.2-5.4,20.5c-3.6,4.4-8.3,6.6-14.1,6.6c-6.5,0-11.3-2.4-14.5-7.3s-4.8-11-4.8-18.5\a 				C572.9,73.4,579.3,64.3,592.1,64.3z'/>\a 			<path d='M906.1,121.5c-5.7,0-11.1-1.8-16.3-5.5c-5.1-3.6-7.9-9.8-8.4-18.6h72.7c0-10.2-1.6-19.4-4.7-27.7\a 				c-3.2-8.3-8.8-15.2-16.9-20.7c-8.1-5.6-17.8-8.3-28.9-8.3c-15.4,0-28.1,5-38,14.9c-3.4,3.4-6.2,7-8.4,10.9\a 				c-3.3-6.8-8.5-12.7-15.5-17.5c-8.1-5.6-17.8-8.3-28.9-8.3c-15.4,0-28.1,5-38,14.9s-14.9,22.3-14.9,37.1c0,14.6,4.8,26.3,14.5,35.2\a 				c9.6,8.9,23.1,13.4,40.3,13.4c19.8,0,34.7-6.6,44.9-19.8c1.7,2.3,3.5,4.4,5.7,6.4c9.6,8.9,23.1,13.4,40.3,13.4\a 				c21.6,0,37.4-7.8,47.6-23.5l-24.2-7.6C921.1,117.7,913.6,121.5,906.1,121.5z M901.9,61c6.1,0,10.9,1.9,14.5,5.7\a 				c3.5,3.8,5.7,8.3,6.4,13.7H882C883.8,67.5,890.5,61,901.9,61z M811.1,61c6.1,0,10.9,1.9,14.5,5.7c3.5,3.8,5.7,8.3,6.4,13.7h-40.8\a 				C793,67.5,799.6,61,811.1,61z M846.6,112.9l-8.7-2.7c-7.6,7.5-15.1,11.3-22.6,11.3c-5.7,0-11.1-1.8-16.3-5.5\a 				c-5.1-3.6-7.9-9.8-8.4-18.6h60.2c0.5,6.8,2.2,12.9,5,18.4C852.7,114.8,849,113.7,846.6,112.9z'/>\a 			<path d='M652.1,118.3l-14.2,0.4v21.8h43.4h17.2h64v-22.1h-15.3V66.6h15.3V44.4h-15.3V33.8c0-8.9,2.7-13.3,8.1-13.3\a 				c3.8,0,6.7,3.4,8.7,10.3l22.6-17.4C780.1,4.5,769.2,0,754,0c-12.6,0-22,3.4-28.4,10.2s-9.5,15.2-9.5,25.4v8.8H703v22.2h13.1v51.7\a 				h-17.5h-15.3V66.6h15.3V44.4h-15.3V33.8c0-8.9,2.7-13.3,8.1-13.3c3.8,0,6.7,3.4,8.7,10.3l22.6-17.4C716.1,4.5,705.2,0,690,0\a 				c-12.6,0-22,3.4-28.4,10.2s-9.5,15.2-9.5,25.4v8.8H639v22.2h13.1V118.3z'/>\a 		</g>\a 	</g>\a 	</svg>\a"); display: inline-block; max-width: 120px; }

.coffeekraken-logo:after { content: ''; display: block; width: 100%; height: 0; padding-bottom: 30%; }

/** Lists */
.list { counter-reset: s-list; }

/** @name 	List menu */
.list--menu > .list__item > a { display: block; padding: 10px 15px; color: #2b3438; font-size: 0.9em; font-weight: bold; text-decoration: none; text-transform: uppercase; }

.list--menu > .list__item > a:hover, .list--menu > .list__item > a.active { text-decoration: underline; border-right: 5px solid #2b3438; }

/** @name 	List submenu */
.list--submenu > .list__item > a { display: block; padding: 5px 25px; color: #848e91; font-size: 0.7em; text-decoration: none; border-right: 0 solid #2b3438; }

.list--submenu > .list__item > a:hover, .list--submenu > .list__item > a.active { text-decoration: underline; border-right-width: 5px; color: #f2bc2b; }

.list--three { padding: 0 5px; }

.list--three .list--three { padding: 0 0; }

.list--three > .list__item { display: inline-block; max-width: 100%; overflow: hidden; text-overflow: ellipsis; white-space: nowrap; padding-left: 0.57143rem; display: block; }

.list--three > .list__item > * { text-overflow: ellipsis; overflow: hidden; }

.list--three > .list__item .list__item--toggle + .list { max-height: 0; overflow: hidden; }

.list--three > .list__item .list__item--toggle.active + .list { max-height: 10000px; }

.list--three > .list__item > a { display: block; padding: 8px 10px; color: #848e91; font-size: 0.8em; text-decoration: none; }

.list--three > .list__item > a i { color: #848e91 !important; }

.list--three > .list__item > a:hover, .list--three > .list__item > a.active { color: #f2bc2b; }

/** Preview color block */
.preview-color { border: 1px solid #e5e9ea; border-radius: 0; background: white; box-shadow: rgba(0, 0, 0, 0.2) 0 20px 30px; transition: all 0.1s ease-in-out 0s, outline-color 0s linear 0s; outline-color: black; }

.preview-color:hover { transform: scale(1.01, 1.01); box-shadow: rgba(0, 0, 0, 0.2) 0 40px 60px; }

.preview-color__color { height: 50px; }

.preview-color__color-code { opacity: .5; }

/** Material prism theme by Mitch Jackson (http://mitchelljackson.co.uk) Inspired by Material Theme for Sublime Text */
code[class*="language-"], pre[class*="language-"] { color: #e9eded; text-shadow: none; font-weight: bold; font-size: 14px; font-family: 'Office Code Pro Medium', Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace; direction: ltr; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; word-wrap: normal; line-height: 1.5; -moz-tab-size: 4; -o-tab-size: 4; tab-size: 4; -webkit-hyphens: none; -moz-hyphens: none; -ms-hyphens: none; hyphens: none; }

pre[class*="language-"]::-moz-selection, pre[class*="language-"] ::-moz-selection, code[class*="language-"]::-moz-selection, code[class*="language-"] ::-moz-selection { background: rgba(255, 255, 255, 0.2); }

pre[class*="language-"]::selection, pre[class*="language-"] ::selection, code[class*="language-"]::selection, code[class*="language-"] ::selection { background: rgba(255, 255, 255, 0.2); }

/* Code blocks */
pre[class*="language-"] { padding: 20px; margin: 0; overflow: auto; }

:not(pre) > code[class*="language-"], pre[class*="language-"] { background: #263238; }

/* Inline code */
:not(pre) > code[class*="language-"] { padding: 20px; border-radius: .3em; white-space: normal; }

.token.comment, .token.prolog, .token.doctype, .token.cdata { color: slategray; }

.token.punctuation { color: #fafafa; }

.namespace { opacity: .7; }

.token.property, .token.tag, .token.boolean, .token.number, .token.constant, .token.symbol, .token.deleted { color: #ff5370; }

.token.selector, .token.attr-name, .token.string, .token.char, .token.builtin, .token.inserted { color: #C3E88D; }

.token.operator, .token.entity, .token.url, .language-css .token.string, .style .token.string { color: #C3E88D; }

.token.atrule, .token.attr-value, .token.keyword { color: #C3E984; }

.token.function { color: #ff5370; }

.token.regex, .token.important, .token.variable { color: #C3E88D; }

.token.important, .token.bold { font-weight: bold; }

.token.italic { font-style: italic; }

.token.entity { cursor: help; }

@keyframes s-ripple { 0% { opacity: 1;
    transform: translateX(-50%) translateY(-50%) scale(0, 0); }
  100% { opacity: 0;
    transform: translateX(-50%) translateY(-50%) scale(1, 1); } }

.s-ripple__particle { background: rgba(0, 0, 0, 0.3); animation: s-ripple 0.3s 0s ease-out 1 normal forwards; }

/** Trianglify styling */
s-trianglify { display: block; }

/** Trumps All the things that does not fit in any others directory. Try to keep this folder has small as possible. If you have to many things in here, that mean that you probably need to refactor your codebase... */
/** Trumps All the things that does not fit in any others directory. Try to keep this folder has small as possible. If you have to many things in here, that mean that you probably need to refactor your codebase... */
